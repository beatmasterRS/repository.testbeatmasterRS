<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<includes>
    <include file="gto-widget.xml"/>
    
    <include file="Defaults.xml" />
	<include file="IncludesVideoLyrics.xml" />
	<include file="Includes_Lyrics.xml" />
    <include file="Includes_Lists.xml" />
    <include file="Includes_DialogVideoInfo.xml" />
    <include file="Includes_DialogMusicInfo.xml" />
    <include file="Includes_DialogAddonInfo.xml" />
    <include file="Includes_DialogPVRInfo.xml" />
    <include file="Includes_MovieSets.xml" />
    <include file="Includes_SubItems_Home.xml" />
    
    <!-- Views -->
    <include file="View_50_List.xml" />
    <include file="View_51_BigWide.xml" />
    <include file="View_52_BigList.xml" />
    <include file="View_53_Poster.xml" />
    <include file="View_54_Banner.xml" />
    <include file="View_55_Wall.xml" />
    <include file="View_515_SideCards.xml" />
    <include file="View_56_MediaInfo.xml" />
    <include file="View_57_ExtraInfo.xml" />
    <include file="View_58_Cards.xml" />
    <include file="View_59_BannerWall.xml" />
    <include file="View_500_Thumbnails.xml" />
    <include file="View_503_Poster_Square.xml" />
    <include file="View_505_Wall_Square.xml" />
	<include file="View_501_Modern_Fanart.xml" />
	<include file="View_504_Netflix.xml" />
	<include file="View_507_Fanart.xml" />
	<include file="View_509_Shift.xml" />
	<include file="View_513_Shifted.xml" />
	<include file="View_510_Minimal.xml" />
    <include file="View_520_Minimal.xml" />
	<include file="View_511_Double.xml" />
	<include file="View_512_Double_Banner.xml" />
	<include file="View_506_Slider.xml" />
    <include file="View_514_Albums.xml" />
    <include file="View_517_WallSmall.xml" />
    <include file="View_516_SeasonsInfo.xml" />
    <include file="View_519_Shift_Modern.xml" />
    
    
    <include file="Includes_Furniture.xml" />
    <include file="Includes_Home.xml" />
    <include file="Includes_GlobalSearch.xml" />
    <include file="Includes_NextAired.xml" />
    <include file="Includes_Labels.xml" />
    <include file="Includes_Images.xml" />
    <include file="Includes_Animations.xml" />
    <include file="Includes_Defs.xml" />
    <include file="Includes_PVR.xml" />
    <include file="Includes_OSD.xml" />
    
    <!-- Skin Shortcuts -->
    <include file="script-skinshortcuts-includes.xml"/>
    
	<!-- Expressions -->
    <expression name="HomeIsModernMultiWidgets">!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + Skin.HasSetting(home.modernwidgets) + Skin.HasSetting(home.vertical.widgets)</expression>   
    <expression name="HomeIsVerticalMultiWidgets">Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)</expression>
    <expression name="HomeIsVerticalAll">Skin.HasSetting(home.vertical)</expression>
    <expression name="HomeIsClassic">!Skin.HasSetting(home.vertical) + Skin.HasSetting(home.classicwidgets)</expression>
    <expression name="HomeIsVertical">Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.vertical.widgets)</expression>
    <expression name="IsYoutube">String.Contains(Container.FolderPath,plugin://plugin.video.youtube)</expression>
    
    <expression name="Widget1Enabled">String.Contains(Container(300).ListItem.Property(widgetEnable),yes)</expression>
    <expression name="Widget2Enabled">String.Contains(Container(300).ListItem.Property(widgetEnable.2),yes)</expression>
    <expression name="Widget3Enabled">String.Contains(Container(300).ListItem.Property(widgetEnable.3),yes)</expression>
    <expression name="Widget4Enabled">String.Contains(Container(300).ListItem.Property(widgetEnable.4),yes)</expression>
    <expression name="Widget5Enabled">String.Contains(Container(300).ListItem.Property(widgetEnable.5),yes)</expression>

	<include name="FontTop">
		<font>Medium</font>
	</include>
	
    <include name="HiddenButton">
        <posx>-20</posx>
        <posy>-20</posy>
        <width>1</width>
        <height>1</height>
        <label>-</label>
        <texturenofocus>-</texturenofocus>
        <texturefocus>-</texturefocus>
    </include>
    
    <include name="HiddenListControl">
		<top>-10</top>
		<width>1</width>
		<height>1</height>
		<viewtype label="">list</viewtype>
		<orientation>horizontal</orientation>
		<itemlayout height="1" width="1"/>
		<focusedlayout height="1" width="1"/>
	</include>

    <include name="Dimensions_Fullscreen">
        <posx>0</posx>
        <posy>0</posy>
        <width>1920</width>
        <height>1080</height>
    </include>
	
	<include name="Dimensions_Fullscreen2">
        <posx>0</posx>
        <posy>300</posy>
        <width>1920</width>
        <height>480</height>
    </include>

    <include name="WindowID">
        <width>780</width>
        <height>21</height>
        <textcolor>Blue</textcolor>
        <shadowcolor>Black</shadowcolor>
        <align>left</align>
    </include>

    <include name="DialogID">
        <width>780</width>
        <height>21</height>
        <textcolor>Green</textcolor>
        <shadowcolor>Black</shadowcolor>
        <align>left</align>
    </include>

    <include name="PathID">
        <posx>15r</posx>
        <posy>15</posy>
        <width>780</width>
        <height>21</height>
        <textcolor>Blue</textcolor>
        <shadowcolor>Black</shadowcolor>
        <align>right</align>
    </include>

    <include name="ControlID">
        <posx>15r</posx>
        <posy>48</posy>
        <width>780</width>
        <height>21</height>
        <textcolor>Red</textcolor>
        <shadowcolor>Black</shadowcolor>
        <align>right</align>
    </include>

    <include name="GlobalOverlay">

        <control type="image">
            <include>Animation.FadeIn</include>
            <include condition="!Window.IsVisible(DialogButtonMenu.xml)">Animation.FadeOut</include>
            <include>Dimensions_Fullscreen</include>
            <texture border="2">common/black-back.png</texture>
        </control>

    </include>
	
	<include name="GlobalOverlay2">

        <control type="image">
            <include>Animation.FadeIn</include>
            <include condition="!Window.IsVisible(DialogButtonMenu.xml)">Animation.FadeOut</include>
            <include>Dimensions_Fullscreen2</include>
            <texture colordiffuse="D9BDBDBD" border="30">backg/diffuseoverlay.png</texture>
        </control>

    </include>
	
	<variable name="RatingFlagVar33">
		<value condition="String.Contains(ListItem.mpaa,US:G) | String.Contains(ListItem.mpaa,USA:G) | String.Contains(ListItem.mpaa,Rated G)">flags2/rating/info/mpaa_g_certificate_us.png</value>
		<value condition="String.Contains(ListItem.mpaa,PG-13)">flags2/rating/info/mpaa_pg-13_certificate_us.png</value>
		<value condition="String.Contains(ListItem.mpaa,Rated PG) | String.IsEqual(ListItem.Mpaa,PG)">flags2/rating/info/mpaa_pg_certificate_us.png</value>
		<value condition="String.Contains(ListItem.mpaa,US:R) | String.Contains(ListItem.mpaa,USA:R) | String.Contains(ListItem.mpaa,Rated R) | String.IsEqual(ListItem.mpaa,R)">flags2/rating/info/mpaa_r_certificate_us.png</value>
		<value condition="String.Contains(ListItem.mpaa,US:NC-17)| String.Contains(ListItem.mpaa,USA:NC-17)| String.Contains(ListItem.mpaa,Rated NC-17)">flags2/rating/info/mpaa_nc-17_certificate_us.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:U)">flags2/rating/info/BBFC_U_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:PG)">flags2/rating/info/BBFC_PG_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:12A)">flags2/rating/info/BBFC_12A_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:12)">flags2/rating/info/BBFC_12_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:15)">flags2/rating/info/BBFC_15_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:18)">flags2/rating/info/BBFC_18_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:0) | String.Contains(ListItem.mpaa,ab 0) | String.IsEqual(ListItem.mpaa,0) | String.Contains(ListItem.mpaa,FSK 0) | String.Contains(ListItem.mpaa,Rated 0)">flags2/rating/info/FSK-0.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:16) | String.Contains(ListItem.mpaa,ab 16) | String.IsEqual(ListItem.mpaa,16) | String.Contains(ListItem.mpaa,FSK 16) | String.Contains(ListItem.mpaa,Rated 16)">flags2/rating/info/FSK-16.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:6)| String.Contains(ListItem.mpaa,ab 6) | String.IsEqual(ListItem.mpaa,6) | String.Contains(ListItem.mpaa,Rated 6)">flags2/rating/info/FSK-6.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:12) | String.Contains(ListItem.mpaa,ab 12) | String.IsEqual(ListItem.mpaa,12) | String.Contains(ListItem.mpaa,FSK 12) | String.Contains(ListItem.mpaa,Rated 12)">flags2/rating/info/FSK-12.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:18) | String.Contains(ListItem.mpaa,ab 18) | String.IsEqual(ListItem.mpaa,18) | String.Contains(ListItem.mpaa,FSK 18) | String.Contains(ListItem.mpaa,Rated 18)">flags2/rating/info/FSK-18.png</value>
		<value condition="String.Contains(ListItem.mpaa,besorolás alatt)">flags2/rating/info/HU_BA.png</value>
		<value condition="String.Contains(ListItem.mpaa,korhatárra való tekintett nélkül megtekintetheto)">flags2/rating/info/HU_KN.png</value>
		<value condition="String.Contains(ListItem.mpaa,12 éven aluliak számára a megtekintése nagykorú felügyelete mellett ajánlott)">flags2/rating/info/HU_12.png</value>
		<value condition="String.Contains(ListItem.mpaa,16 éven aluliak számára nem ajánlott)">flags2/rating/info/HU_16.png</value>
		<value condition="String.Contains(ListItem.mpaa,18 éven aluliak számára nem ajánlott)">flags2/rating/info/HU_18.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:U) | String.Contains(ListItem.mpaa,Tout public) | String.Contains(ListItem.mpaa,Tous publics)">flags2/rating/info/csaU.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:10) | String.Contains(ListItem.mpaa,Interdit aux moins de 10 ans) | String.Contains(ListItem.mpaa,des propos ou des images peuvent heurter)">flags2/rating/info/csa10.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:12) | String.Contains(ListItem.mpaa,Interdit aux moins de 12 ans)">flags2/rating/info/csa12.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:16) | String.Contains(ListItem.mpaa,Interdit aux moins de 16 ans)">flags2/rating/info/csa16.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:18) | String.Contains(ListItem.mpaa,Interdit aux moins de 18 ans)">flags2/rating/info/csa18.png</value>
		<value condition="String.Contains(ListItem.mpaa,전체)">flags2/rating/info/KR_Certificate_All.png</value>
		<value condition="String.Contains(ListItem.mpaa,12세)">flags2/rating/info/KR_Certificate_12.png</value>
		<value condition="String.Contains(ListItem.mpaa,15세)">flags2/rating/info/KR_Certificate_15.png</value>
		<value condition="String.Contains(ListItem.mpaa,불가)">flags2/rating/info/KR_Certificate_18.png</value>
		<value condition="String.Contains(ListItem.mpaa,제한)">flags2/rating/info/KR_Certificate_R.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:Livre) | String.Contains(ListItem.mpaa,Livre)">flags2/rating/info/MPAA_Brazil_Livre.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:10) | String.Contains(ListItem.mpaa,10 anos)">flags2/rating/info/MPAA_Brazil_10.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:12) | String.Contains(ListItem.mpaa,12 anos)">flags2/rating/info/MPAA_Brazil_12.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:14) | String.Contains(ListItem.mpaa,14 anos)">flags2/rating/info/MPAA_Brazil_14.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:16) | String.Contains(ListItem.mpaa,16 anos)">flags2/rating/info/MPAA_Brazil_16.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:18) | String.Contains(ListItem.mpaa,18 anos)">flags2/rating/info/MPAA_Brazil_18.png</value>
		<value condition="String.Contains(ListItem.mpaa,Australia:)">$INFO[ListItem.MPAA,flags2/rating/info/australia_,.png]</value>
		<value>$INFO[ListItem.MPAA,flags2/rating/info/,.png]</value>
	</variable>
	
	<variable name="RatingFlagVar22">
		<value condition="String.Contains(ListItem.mpaa,US:G) | String.Contains(ListItem.mpaa,USA:G) | String.Contains(ListItem.mpaa,Rated G)">flags2/rating/info/mpaa_g_certificate_us.png</value>
		<value condition="String.Contains(ListItem.mpaa,PG-13)">flags2/rating/info/mpaa_pg-13_certificate_us.png</value>
		<value condition="String.Contains(ListItem.mpaa,Rated PG) | String.IsEqual(ListItem.Mpaa,PG)">flags2/rating/info/mpaa_pg_certificate_us.png</value>
		
		<value condition="String.Contains(ListItem.mpaa,US:R) | String.Contains(ListItem.mpaa,USA:R) | String.Contains(ListItem.mpaa,Rated) | String.Contains(ListItem.mpaa,Rated R) | String.IsEqual(ListItem.mpaa,R)">flags2/rating/info/mpaa_r_certificate_us.png</value>
		<value condition="String.Contains(ListItem.mpaa,US:NC-17)| String.Contains(ListItem.mpaa,USA:NC-17)| String.Contains(ListItem.mpaa,Rated NC-17)">flags2/rating/info/mpaa_nc-17_certificate_us.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:U)">flags/mpaa/BBFC_U_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:PG)">flags/mpaa/BBFC_PG_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:12A)">flags/mpaa/BBFC_12A_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:12)">flags/mpaa/BBFC_12_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:15)">flags/mpaa/BBFC_15_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:18)">flags/mpaa/BBFC_18_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:16) | String.Contains(ListItem.mpaa,ab 16) | String.IsEqual(ListItem.mpaa,16) | String.Contains(ListItem.mpaa,FSK 16) | String.Contains(ListItem.mpaa,Rated 16)">flags2/rating/info/FSK-16.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:6)| String.Contains(ListItem.mpaa,ab 6) | String.IsEqual(ListItem.mpaa,6) | String.Contains(ListItem.mpaa,FSK 16) | String.Contains(ListItem.mpaa,Rated 6)">flags2/rating/info/FSK-6.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:12) | String.Contains(ListItem.mpaa,ab 12) | String.IsEqual(ListItem.mpaa,12) | String.Contains(ListItem.mpaa,FSK 12) | String.Contains(ListItem.mpaa,Rated 12)">flags2/rating/info/FSK-12.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:18) | String.Contains(ListItem.mpaa,ab 18) | String.IsEqual(ListItem.mpaa,18) | String.Contains(ListItem.mpaa,FSK 18) | String.Contains(ListItem.mpaa,Rated 18)">flags2/rating/info/FSK-18.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany)|String.Contains(ListItem.mpaa,FSK)| String.Contains(ListItem.mpaa,o.A)| String.Contains(ListItem.mpaa,Rated 0)">flags2/rating/info/FSK-0.png</value>
		<value condition="String.Contains(ListItem.mpaa,besorolás alatt)">flags/mpaa/HU_BA.png</value>
		<value condition="String.Contains(ListItem.mpaa,korhatárra való tekintett nélkül megtekintetheto)">flags/mpaa/HU_KN.png</value>
		<value condition="String.Contains(ListItem.mpaa,12 éven aluliak számára a megtekintése nagykorú felügyelete mellett ajánlott)">flags/mpaa/HU_12.png</value>
		<value condition="String.Contains(ListItem.mpaa,16 éven aluliak számára nem ajánlott)">flags/mpaa/HU_16.png</value>
		<value condition="String.Contains(ListItem.mpaa,18 éven aluliak számára nem ajánlott)">flags/mpaa/HU_18.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:U) | String.Contains(ListItem.mpaa,partir de 3 ans) | String.Contains(ListItem.mpaa,partir de 6 ans)">flags/mpaa/csaU.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:-10) | String.Contains(ListItem.mpaa,Interdit aux moins de 10 ans) | String.Contains(ListItem.mpaa,des propos ou des images peuvent heurter)">flags/mpaa/csa10.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:-12) | String.Contains(ListItem.mpaa,Interdit aux moins de 12 ans)">flags/mpaa/csa12.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:-16) | String.Contains(ListItem.mpaa,Interdit aux moins de 16 ans)">flags/mpaa/csa16.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:-18) | String.Contains(ListItem.mpaa,Interdit aux moins de 18 ans)">flags/mpaa/csa18.png</value>
		<value condition="String.Contains(ListItem.mpaa,전체)">flags/mpaa/KR_Certificate_All.png</value>
		<value condition="String.Contains(ListItem.mpaa,12세)">flags/mpaa/KR_Certificate_12.png</value>
		<value condition="String.Contains(ListItem.mpaa,15세)">flags/mpaa/KR_Certificate_15.png</value>
		<value condition="String.Contains(ListItem.mpaa,불가)">flags/mpaa/KR_Certificate_18.png</value>
		<value condition="String.Contains(ListItem.mpaa,제한)">flags/mpaa/KR_Certificate_R.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:Livre) | String.Contains(ListItem.mpaa,Livre)">flags/mpaa/MPAA_Brazil_Livre.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:10) | String.Contains(ListItem.mpaa,10 anos)">flags/mpaa/MPAA_Brazil_10.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:12) | String.Contains(ListItem.mpaa,12 anos)">flags/mpaa/MPAA_Brazil_12.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:14) | String.Contains(ListItem.mpaa,14 anos)">flags/mpaa/MPAA_Brazil_14.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:16) | String.Contains(ListItem.mpaa,16 anos)">flags/mpaa/MPAA_Brazil_16.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:18) | String.Contains(ListItem.mpaa,18 anos)">flags/mpaa/MPAA_Brazil_18.png</value>
		<value condition="String.Contains(ListItem.mpaa,Australia:)">$INFO[ListItem.MPAA,flags/mpaa/australia_,.png]</value>
		<value>$INFO[ListItem.MPAA,flags/mpaa/,.png]</value>
	</variable>
	
	<variable name="RatingFlagVar">
		
		<value condition="String.Contains(ListItem.mpaa,US:NC-17)| String.Contains(ListItem.mpaa,USA:NC-17)| String.Contains(ListItem.mpaa,Rated NC-17)">flags/mpaa/nc-17.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:U)">flags/mpaa/BBFC_U_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:PG)">flags/mpaa/BBFC_PG_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:12A)">flags/mpaa/BBFC_12A_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:12)">flags/mpaa/BBFC_12_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:15)">flags/mpaa/BBFC_15_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,UK:18)">flags/mpaa/BBFC_18_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:16) | String.Contains(ListItem.mpaa,ab 16) | String.IsEqual(ListItem.mpaa,16) | String.Contains(ListItem.mpaa,FSK 16) | String.Contains(ListItem.mpaa,Rated 16)">flags/mpaa/FSK-16.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:6)| String.Contains(ListItem.mpaa,ab 6) | String.IsEqual(ListItem.mpaa,6) | String.Contains(ListItem.mpaa,FSK 16) | String.Contains(ListItem.mpaa,Rated 6)">flags/mpaa/FSK-6.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:12) | String.Contains(ListItem.mpaa,ab 12) | String.IsEqual(ListItem.mpaa,12) | String.Contains(ListItem.mpaa,FSK 12) | String.Contains(ListItem.mpaa,Rated 12)">flags/mpaa/FSK-12.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany:18) | String.Contains(ListItem.mpaa,ab 18) | String.IsEqual(ListItem.mpaa,18) | String.Contains(ListItem.mpaa,FSK 18) | String.Contains(ListItem.mpaa,Rated 18)">flags/mpaa/FSK-18.png</value>
		<value condition="String.Contains(ListItem.mpaa,Germany)|String.Contains(ListItem.mpaa,FSK)| String.Contains(ListItem.mpaa,o.A)| String.Contains(ListItem.mpaa,Rated 0)">flags/mpaa/FSK-0.png</value>
		<value condition="String.Contains(ListItem.mpaa,US:G) | String.Contains(ListItem.mpaa,USA:G) | String.Contains(ListItem.mpaa,Rated G)">flags/mpaa/g.png</value>
		<value condition="String.Contains(ListItem.mpaa,PG-13)">flags/mpaa/pg-13.png</value>
		<value condition="String.Contains(ListItem.mpaa,Rated PG) | String.IsEqual(ListItem.Mpaa,PG)">flags/mpaa/pg.png</value>
		<value condition="String.Contains(ListItem.mpaa,US:R) | String.Contains(ListItem.mpaa,USA:R) | String.Contains(ListItem.mpaa,Rated R) | String.Contains(ListItem.mpaa,Rated) | String.IsEqual(ListItem.mpaa,R)">flags/mpaa/r.png</value>
		<value condition="String.Contains(ListItem.mpaa,besorolás alatt)">flags/mpaa/HU_BA.png</value>
		<value condition="String.Contains(ListItem.mpaa,korhatárra való tekintett nélkül megtekintetheto)">flags/mpaa/HU_KN.png</value>
		<value condition="String.Contains(ListItem.mpaa,12 éven aluliak számára a megtekintése nagykorú felügyelete mellett ajánlott)">flags/mpaa/HU_12.png</value>
		<value condition="String.Contains(ListItem.mpaa,16 éven aluliak számára nem ajánlott)">flags/mpaa/HU_16.png</value>
		<value condition="String.Contains(ListItem.mpaa,18 éven aluliak számára nem ajánlott)">flags/mpaa/HU_18.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:U) | String.Contains(ListItem.mpaa,partir de 3 ans) | String.Contains(ListItem.mpaa,partir de 6 ans)">flags/mpaa/csaU.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:-10) | String.Contains(ListItem.mpaa,Interdit aux moins de 10 ans) | String.Contains(ListItem.mpaa,des propos ou des images peuvent heurter)">flags/mpaa/csa10.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:-12) | String.Contains(ListItem.mpaa,Interdit aux moins de 12 ans)">flags/mpaa/csa12.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:-16) | String.Contains(ListItem.mpaa,Interdit aux moins de 16 ans)">flags/mpaa/csa16.png</value>
		<value condition="String.Contains(ListItem.mpaa,France:-18) | String.Contains(ListItem.mpaa,Interdit aux moins de 18 ans)">flags/mpaa/csa18.png</value>
		<value condition="String.Contains(ListItem.mpaa,전체)">flags/mpaa/KR_Certificate_All.png</value>
		<value condition="String.Contains(ListItem.mpaa,12세)">flags/mpaa/KR_Certificate_12.png</value>
		<value condition="String.Contains(ListItem.mpaa,15세)">flags/mpaa/KR_Certificate_15.png</value>
		<value condition="String.Contains(ListItem.mpaa,불가)">flags/mpaa/KR_Certificate_18.png</value>
		<value condition="String.Contains(ListItem.mpaa,제한)">flags/mpaa/KR_Certificate_R.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:Livre) | String.Contains(ListItem.mpaa,Livre)">flags/mpaa/MPAA_Brazil_Livre.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:10) | String.Contains(ListItem.mpaa,10 anos)">flags/mpaa/MPAA_Brazil_10.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:12) | String.Contains(ListItem.mpaa,12 anos)">flags/mpaa/MPAA_Brazil_12.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:14) | String.Contains(ListItem.mpaa,14 anos)">flags/mpaa/MPAA_Brazil_14.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:16) | String.Contains(ListItem.mpaa,16 anos)">flags/mpaa/MPAA_Brazil_16.png</value>
		<value condition="String.Contains(ListItem.mpaa,Brazil:18) | String.Contains(ListItem.mpaa,18 anos)">flags/mpaa/MPAA_Brazil_18.png</value>
		<value condition="String.Contains(ListItem.mpaa,Australia:)">$INFO[ListItem.MPAA,flags/mpaa/australia_,.png]</value>
		<value>$INFO[ListItem.MPAA,flags/mpaa/,.png]</value>
	</variable>
	
	<variable name="StartupFanart">
        <value condition="!String.IsEmpty(Skin.String(startupfanart.fallback))">$INFO[Skin.String(startupfanart.fallback)]</value>
        <value>common/bg.jpg</value>
    </variable>
    
    <variable name="StartupDiffuse">
        <value condition="String.IsEmpty(Skin.String(startupfanart.fallback))">Background</value>
        <value></value>
    </variable>

    <variable name="GlobalFanart">
        <!-- Multi Widgets Weather Background -->
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !Container(301).IsUpdating + [$EXP[HomeIsModernMultiWidgets] | $EXP[HomeIsVerticalMultiWidgets]] + !String.IsEmpty(ListItem.Property(OutlookTexture)) + !String.Contains(Skin.String(weather.fanart.path),multi) + !Skin.HasSetting(home.dontshowfanart)">$INFO[Skin.String(weather.fanart.path)]$INFO[ListItem.Property(FanartCode),,.jpg]</value>
        <value condition="Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !Container(301).IsUpdating + [$EXP[HomeIsModernMultiWidgets] | $EXP[HomeIsVerticalMultiWidgets]] + !String.IsEmpty(ListItem.Property(OutlookTexture)) + String.Contains(Skin.String(weather.fanart.path),multi) + !Skin.HasSetting(home.dontshowfanart)">$INFO[Skin.String(weather.fanart.path)]$INFO[ListItem.Property(FanartCode)]/</value>

        <value condition="Window.IsActive(script-globalsearch-infodialog.xml) | Window.IsActive(script-globalsearch-main.xml)">$VAR[GlobalSearchArtInfo]</value>
        <value condition="[Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) + String.IsEmpty(Window(home).Property(ExtendedInfo_fanart))] | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)">actorbg.jpg</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) + !String.IsEmpty(Window(home).Property(ExtendedInfo_fanart))">$INFO[Window(home).Property(ExtendedInfo_fanart)]</value>
        <value condition="Window.IsVisible(weather) + !String.IsEmpty(Skin.String(weather.fanart.path))">$INFO[Skin.String(weather.fanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]/</value>
        <value condition="![Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] + Window.IsVisible(home) + !String.IsEmpty(Skin.String(weather.fanart.path)) + String.Contains(Container(300).ListItem.Property(widget),Weather) + !Skin.HasSetting(home.dontshowfanart) + String.Contains(Skin.String(weather.fanart.path),multi)">$INFO[Skin.String(weather.fanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]/</value>        
        <value condition="![Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] + Window.IsVisible(home) + !String.IsEmpty(Skin.String(weather.fanart.path)) + String.Contains(Container(300).ListItem.Property(widget),Weather) + !Skin.HasSetting(home.dontshowfanart) + !String.Contains(Skin.String(weather.fanart.path),multi)">$INFO[Skin.String(weather.fanart.path)]$INFO[Window(Weather).Property(Current.FanartCode),,.jpg]</value>
        
		<value condition="!String.IsEmpty(Control.GetLabel(4399)) + Skin.HasSetting(EnableExtraFanart) + !Skin.HasSetting(global.hidefanart)">$INFO[Control.GetLabel(4399)]</value>
		
        <!--Multi Widget --> 
        <value condition="[[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(home) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="[[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(home) + !String.IsEmpty(ListItem.Property(fanart))">$INFO[ListItem.Property(fanart)]</value>
        <!--Multi Widget --> 
        
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Container(301).ListItem.Art(fanart)) + [!Skin.HasSetting(home.dontshowfanart) | Control.HasFocus(301)] + Control.IsVisible(301)">$INFO[Container(301).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Container(301).ListItem.Property(fanart)) + [!Skin.HasSetting(home.dontshowfanart) | Control.HasFocus(301)] + Control.IsVisible(301)">$INFO[Container(301).ListItem.Property(fanart)]</value>
        
        <!--Multi Widget WEATHER -->
        <value condition="[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] + Window.IsVisible(home) + !String.IsEmpty(Skin.String(weather.fanart.path)) + String.Contains(Container(300).ListItem.Property(widget),Weather) + !Skin.HasSetting(home.dontshowfanart) + String.Contains(Skin.String(weather.fanart.path),multi)">$INFO[Skin.String(weather.fanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]/</value>        
        <value condition="[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] + Window.IsVisible(home) + !String.IsEmpty(Skin.String(weather.fanart.path)) + String.Contains(Container(300).ListItem.Property(widget),Weather) + !Skin.HasSetting(home.dontshowfanart) + !String.Contains(Skin.String(weather.fanart.path),multi)">$INFO[Skin.String(weather.fanart.path)]$INFO[Window(Weather).Property(Current.FanartCode),,.jpg]</value>
        <!--Multi Widget WEATHER -->
        
        <!--Multi Widget --> 
        <value condition="!Skin.HasSetting(home.dontshowfanart) + [[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(30111).ListItem.Art(fanart)) + Control.IsVisible(30111) + !Control.HasFocus(30111)">$INFO[Container(30111).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(home.dontshowfanart) + [[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(30121).ListItem.Art(fanart)) + Control.IsVisible(30121) + !Control.HasFocus(30121)">$INFO[Container(30121).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(home.dontshowfanart) + [[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(30131).ListItem.Art(fanart)) + Control.IsVisible(30131) + !Control.HasFocus(30131)">$INFO[Container(30131).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(home.dontshowfanart) + [[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(30141).ListItem.Art(fanart)) + Control.IsVisible(30141) + !Control.HasFocus(30141)">$INFO[Container(30141).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(home.dontshowfanart) + [[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(30151).ListItem.Art(fanart)) + Control.IsVisible(30151) + !Control.HasFocus(30151)">$INFO[Container(30151).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(home.dontshowfanart) + [[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(30161).ListItem.Art(fanart)) + Control.IsVisible(30161) + !Control.HasFocus(30161)">$INFO[Container(30161).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(home.dontshowfanart) + [[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(30171).ListItem.Art(fanart)) + Control.IsVisible(30171) + !Control.HasFocus(30171)">$INFO[Container(30171).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(home.dontshowfanart) + [[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(30181).ListItem.Art(fanart)) + Control.IsVisible(30181) + !Control.HasFocus(30181)">$INFO[Container(30181).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(home.dontshowfanart) + [[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(30191).ListItem.Art(fanart)) + Control.IsVisible(30191) + !Control.HasFocus(30191)">$INFO[Container(30191).ListItem.Art(fanart)]</value>        
        <value condition="!Skin.HasSetting(home.dontshowfanart) + [[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(301101).ListItem.Art(fanart)) + Control.IsVisible(301101) + !Control.HasFocus(301101)">$INFO[Container(301101).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(home.dontshowfanart) + [[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(301111).ListItem.Art(fanart)) + Control.IsVisible(301111) + !Control.HasFocus(301111)">$INFO[Container(301111).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(home.dontshowfanart) + [[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(301121).ListItem.Art(fanart)) + Control.IsVisible(301121) + !Control.HasFocus(301121)">$INFO[Container(301121).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(home.dontshowfanart) + [[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(301131).ListItem.Art(fanart)) + Control.IsVisible(301131) + !Control.HasFocus(301131)">$INFO[Container(301131).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(home.dontshowfanart) + [[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(301141).ListItem.Art(fanart)) + Control.IsVisible(301141) + !Control.HasFocus(301141)">$INFO[Container(301141).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(home.dontshowfanart) + [[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(home) + String.IsEmpty(Container(301).ListItem.Property(Background)) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(301151).ListItem.Art(fanart)) + Control.IsVisible(301151) + !Control.HasFocus(301151)">$INFO[Container(301151).ListItem.Art(fanart)]</value>        
        <value condition="!Skin.HasSetting(home.dontshowfanart) + [[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.classicwidgets) + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(home) + String.IsEmpty(Container(3011).ListItem.Property(Background)) + String.IsEmpty(Container(3011).ListItem.Property(backgroundPlaylist)) + !String.IsEmpty(Container(3011).ListItem.Art(fanart)) + Control.IsVisible(3011)">$INFO[Container(3011).ListItem.Art(fanart)]</value> 
        <!--Multi Widget -->     
          
        <value condition="Window.IsVisible(home) + String.IsEqual(Container(300).ListItem.Property(background),playlistBackground)">$INFO[Container(9988).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Container(300).ListItem.Property(Background))">$INFO[Container(300).ListItem.Property(Background)]</value>
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Skin.String(home.slideshowpath)) + [String.Contains(Container(300).ListItem.Property(widget),Weather) | String.IsEmpty(Container(300).ListItem.Property(widget)) | Container(301).IsUpdating |  Skin.HasSetting(home.dontshowfanart)]">$INFO[Skin.String(home.slideshowpath)]</value>
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Skin.String(weather.fanart.path)) + Skin.HasSetting(home.showweatherfanart) + [String.IsEmpty(Container(300).ListItem.Property(widget)) | Container(301).IsUpdating]">$INFO[Skin.String(weather.fanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]/</value>
        <value condition="Window.IsVisible(home) + !Container(301).IsUpdating + !String.IsEmpty(Skin.String(fanart.fallback))">$INFO[Skin.String(fanart.fallback)]</value>        
        <value condition="Window.IsVisible(home) + String.Contains(Container(300).ListItem.Property(widget),system) + !Skin.HasSetting(home.dontshowfanart) + String.IsEmpty(Container(301).ListItem.Property(backgroundPlaylist))">special://skin/extras/backgrounds/systeminfo.jpg</value>        
        <value condition="Window.IsVisible(home) + !Container(301).IsUpdating">pvr/background.jpg</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ExtraFanArtPath)) + Skin.HasSetting(SkinHelper.EnableExtraFanart) + System.HasAddon(script.skin.helper.service) + Window.IsVisible(MyVideoNav.xml)">$INFO[Window(Home).Property(SkinHelper.ExtraFanArtPath)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(Container(9500).ListItem.Art(fanart))">$INFO[Container(9500).ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Fanart_Image))">$INFO[ListItem.Property(Fanart_Image)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Fanart))">$INFO[ListItem.Property(Fanart)]</value>
        <value condition="!String.IsEmpty(Skin.String(fanart.fallback))">$INFO[Skin.String(fanart.fallback)]</value>
        <value>common/null.png</value>
    </variable>
    
    <include name="GlobalVideoWindow">
        <control type="image" description="Background">
            <include>Dimensions_Fullscreen</include>
            <texture colordiffuse="Background">common/bg.jpg</texture>
        </control>
        <control type="image" description="Background">
            <include>Dimensions_Fullscreen</include>
            <texture colordiffuse="Black">common/white.png</texture>
            <visible>Player.HasVideo + Skin.HasSetting(global.showvideo)</visible>
        </control>
        <control type="videowindow">
            <visible>Skin.HasSetting(global.showvideo)</visible>
            <include>Dimensions_Fullscreen</include>
        </control>
    </include>
    <include name="GlobalVisualisation">
        <control type="group">
            <visible>Player.HasAudio + Skin.HasSetting(global.showvisualisation)</visible>
            <control type="visualisation">
                <visible>Skin.HasSetting(ArtistSlideShow.Disabled) | !System.HasAddon(script.artistslideshow) | Skin.HasSetting(OSDVisualisation.ShowFanart)</visible>
                <description>visualisation</description>
                <include>Dimensions_Fullscreen</include>
            </control>
            <control type="multiimage">
                <!-- AS 3 -->
                <aspectratio>scale</aspectratio>
                <include>Dimensions_Fullscreen</include>
                <fadetime>600</fadetime>
                <imagepath background="true">$INFO[Window(Visualisation).Property(ArtistSlideshow.Image)]</imagepath>
                <visible>System.HasAddon(script.artistslideshow) + !Skin.HasSetting(ArtistSlideShow.Disabled)</visible>
                <animation effect="fade" start="100" end="65" time="0" condition="Skin.HasSetting(OSDVisualisation.ShowFanart)">Conditional</animation>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
            </control> 
            <!--<control type="multiimage">
                <aspectratio>scale</aspectratio>
                <include>Dimensions_Fullscreen</include>
                <timeperimage>10000</timeperimage>
                <randomize>true</randomize>
                <fadetime>600</fadetime>
                <loop>yes</loop>
                <imagepath background="true">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</imagepath>
                <visible>System.HasAddon(script.artistslideshow) + !Skin.HasSetting(ArtistSlideShow.Disabled)</visible>
                <animation effect="fade" start="100" end="65" time="0" condition="Skin.HasSetting(OSDVisualisation.ShowFanart)">Conditional</animation>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
            </control>-->
        </control>
    </include>
	
    <include name="GlobalBackgroundFade">
		<colordiffuse>FanartFade</colordiffuse>
	</include>
	
	<include name="GlobalBackgroundFadeBlur">
		<colordiffuse>FanartFadeBlur</colordiffuse>
	</include>
	
	<include name="Overlay510">
		<colordiffuse>BackgroundNew</colordiffuse>
	</include>
	
	<include name="Overlay510Blur">
		<colordiffuse>BackgroundNewBlur</colordiffuse>
	</include>
	
	<include name="IncludeFloorFade">
		<colordiffuse>FloorFade</colordiffuse>
	</include>
	<include name="IncludeFloorFadeBlur">
		<colordiffuse>FloorFadeBlur</colordiffuse>
	</include>
	
	<variable name="ImageBackG">	
		<value condition="Skin.HasSetting(EnableBlur) + !Skin.HasSetting(BlurOnHome) + Window.IsVisible(Home.xml)">$VAR[GlobalFanart]</value>
		<value condition="Skin.HasSetting(EnableBlur)">$INFO[Window(home).Property(ImageFilterFIVE)]</value>
		<value condition="!Skin.HasSetting(EnableBlur)">$VAR[GlobalFanart]</value>
	</variable>
	<variable name="ImageBackGdown">	
		<value condition="Skin.HasSetting(EnableBlur) + !Skin.HasSetting(BlurOnHome) + Window.IsVisible(Home.xml)">$VAR[GlobalFanart]</value>
		<value condition="Skin.HasSetting(EnableBlur)">$INFO[Window(home).Property(ImageFilterFIVE)]</value>
		<value condition="!Skin.HasSetting(EnableBlur)">$VAR[GlobalFanart]</value>
	</variable>
	<variable name="ImageBackG510">	
		<value condition="Skin.HasSetting(EnableBlur)">common/bg.jpg</value>
		<value condition="!Skin.HasSetting(EnableBlur)">common/bg.png</value>
	</variable>
    
    <include name="FadetimeNormal"><fadetime>600</fadetime></include>
    <include name="FadetimeSlow"><fadetime>1800</fadetime></include>
    <include name="FadetimeSuperSlow"><fadetime>3600</fadetime></include>
	
    <include name="GlobalBackground">
		<control type="multiimage" id="7975">
			<left>-2160</left>
			<width>1</width>
			<height>1</height>
			<fadetime>600</fadetime>
			<timeperimage>12000</timeperimage>
			<randomize>true</randomize>
			<imagepath background="true">$VAR[GlobalFanart]</imagepath>
			<visible>System.HasAddon(script.colorbox)</visible>
			<visible>Skin.HasSetting(EnableBlur)</visible>
		</control>
		 
        <include>GlobalVideoWindow</include>
        <include>GlobalVisualisation</include>
        <control type="image" description="Background">
            <include>Dimensions_Fullscreen</include>
            <include condition="!Skin.HasSetting(home.vertical) + !Skin.HasSetting(home.vertical.widgets)">Animation.FadeFromHome</include>
            <texture colordiffuse="Background">common/bg.jpg</texture>
            <visible>!Window.IsVisible(home) | Skin.HasSetting(home.vertical)</visible>
            <animation effect="fade" start="100" end="75" time="200" condition="Player.HasVideo + Skin.HasSetting(global.showvideo) | Player.HasAudio + Skin.HasSetting(global.showvisualisation)">Conditional</animation>
        </control>
		
		<control type="fadelabel" id="4399">
			<top>-900</top>
			<width>2560</width>
			<height>0</height>
			<scroll>false</scroll>
			<scrollout>false</scrollout>
			<randomize>true</randomize>
			<resetonlabelchange>true</resetonlabelchange>
			<visible>Skin.HasSetting(EnableExtraFanart)</visible>
			<label>$INFO[ListItem.Art(fanart)]</label>
			<label>$INFO[ListItem.Art(fanart1)]</label>
			<label>$INFO[ListItem.Art(fanart2)]</label>
			<label>$INFO[ListItem.Art(fanart3)]</label>
			<label>$INFO[ListItem.Art(fanart4)]</label>
			<label>$INFO[ListItem.Art(fanart5)]</label>
			<label>$INFO[ListItem.Art(fanart6)]</label>
			<label>$INFO[ListItem.Art(fanart7)]</label>
			<label>$INFO[ListItem.Art(fanart8)]</label>
			<label>$INFO[ListItem.Art(fanart9)]</label>
			<label>$INFO[ListItem.Art(fanart10)]</label>
			<label>$INFO[ListItem.Art(fanart11)]</label>
			<label>$INFO[ListItem.Art(fanart12)]</label>
			<label>$INFO[ListItem.Art(fanart13)]</label>
			<label>$INFO[ListItem.Art(fanart14)]</label>
			<label>$INFO[ListItem.Art(fanart15)]</label>
			<label>$INFO[ListItem.Art(fanart16)]</label>
			<label>$INFO[ListItem.Art(fanart17)]</label>
			<label>$INFO[ListItem.Art(fanart18)]</label>
			<label>$INFO[ListItem.Art(fanart19)]</label>
			<label>$INFO[ListItem.Art(fanart20)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart1)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart2)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart3)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart4)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart5)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart6)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart7)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart8)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart9)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart10)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart11)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart12)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart13)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart14)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart15)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart16)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart17)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart18)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart19)]</label>
			<label>$INFO[ListItem.Art(tvshow.fanart20)]</label>
			<pauseatend>12000</pauseatend>
		</control>

       <control type="multiimage" description="Fanart">	
			<visible>!Skin.HasSetting(EnableBlur)</visible>	
			<visible>[!Control.IsVisible(510) + !Control.IsVisible(520)] | Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(Custom_MovieSets.xml)</visible>
			<include condition="[!Window.IsVisible(home) | Skin.HasSetting(home.vertical) | [Skin.HasSetting(home.modernwidgets)  + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(Home.xml) + Skin.HasSetting(BlurOnHome) + Skin.HasSetting(EnableBlur)">GlobalBackgroundFadeBlur</include>
			<include condition="[!Window.IsVisible(home) | Skin.HasSetting(home.vertical) | [Skin.HasSetting(home.modernwidgets)  + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(Home.xml) + !Skin.HasSetting(BlurOnHome) + Skin.HasSetting(EnableBlur)">GlobalBackgroundFade</include>			
			<include condition="[!Window.IsVisible(home) | Skin.HasSetting(home.vertical) | [Skin.HasSetting(home.modernwidgets)  + Skin.HasSetting(home.vertical.widgets)]] + !Window.IsVisible(Home.xml) + Skin.HasSetting(EnableBlur)">GlobalBackgroundFadeBlur</include>
			<include condition="[!Window.IsVisible(home) | Skin.HasSetting(home.vertical) | [Skin.HasSetting(home.modernwidgets)  + Skin.HasSetting(home.vertical.widgets)]] + !Skin.HasSetting(EnableBlur)">GlobalBackgroundFade</include>
            <visible>!Player.HasMedia | Window.IsVisible(MyVideoNav.xml) | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
            <visible>!Skin.HasSetting(global.hidefanart) | Window.IsVisible(home)</visible>
            <include>Dimensions_Fullscreen</include>
            <include>Animation.FadeFromHome</include>
            <animation effect="fade" end="0" start="100" time="350" tween="cubic" easing="inout" condition="Window.IsVisible(home)">WindowClose</animation>
            <fadetime>600</fadetime>
            <timeperimage>12000</timeperimage>
            <randomize>true</randomize>
            <aspectratio>scale</aspectratio>
            <imagepath background="true">$VAR[GlobalFanart]</imagepath>
            <animation effect="zoom" start="110" end="120" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
            <animation effect="slide" start="-20,-20" end="20,20" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
        </control>
		<control type="multiimage" description="Fanart">
			<visible>!Skin.HasSetting(EnableBlur)</visible>
			<visible>[Control.IsVisible(510) | Control.IsVisible(520)] + !Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(Custom_MovieSets.xml)</visible>
            <visible>!Player.HasMedia | Window.IsVisible(MyVideoNav.xml) | Window.IsVisible(MyVideoNav.xml) | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
            <visible>!Skin.HasSetting(global.hidefanart) | Window.IsVisible(home)</visible>
            <include>Dimensions_Fullscreen</include>
            <include>Animation.FadeFromHome</include>
            <animation effect="fade" end="0" start="100" time="350" tween="cubic" easing="inout" condition="Window.IsVisible(home)">WindowClose</animation>
            <fadetime>600</fadetime>
            <timeperimage>12000</timeperimage>
            <randomize>true</randomize>
            <aspectratio>scale</aspectratio>
            <imagepath background="true">$VAR[GlobalFanart]</imagepath>
            <animation effect="zoom" start="110" end="120" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
            <animation effect="slide" start="-20,-20" end="20,20" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
        </control>

		<control type="multiimage" description="Fanart">
			<visible>Skin.HasSetting(EnableBlur) + !Window.IsVisible(Home.xml)</visible>		
			<visible>[!Control.IsVisible(510) + !Control.IsVisible(520)] | Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(Custom_MovieSets.xml)</visible>
			<include condition="[!Window.IsVisible(home) | Skin.HasSetting(home.vertical)] + Window.IsVisible(Home.xml) + Skin.HasSetting(BlurOnHome) + Skin.HasSetting(EnableBlur)">GlobalBackgroundFadeBlur</include>
			<include condition="[!Window.IsVisible(home) | Skin.HasSetting(home.vertical)] + Window.IsVisible(Home.xml) + !Skin.HasSetting(BlurOnHome) + Skin.HasSetting(EnableBlur)">GlobalBackgroundFade</include>			
			<include condition="[!Window.IsVisible(home) | Skin.HasSetting(home.vertical)] + !Window.IsVisible(Home.xml) + Skin.HasSetting(EnableBlur)">GlobalBackgroundFadeBlur</include>
			<include condition="[!Window.IsVisible(home) | Skin.HasSetting(home.vertical)] + !Skin.HasSetting(EnableBlur)">GlobalBackgroundFade</include>
            <visible>!Player.HasMedia | Window.IsVisible(MyVideoNav.xml) | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
            <visible>!Skin.HasSetting(global.hidefanart) | Window.IsVisible(home)</visible>
            <include>Dimensions_Fullscreen</include>
            <include>Animation.FadeFromHome</include>
            <animation effect="fade" end="0" start="100" time="350" tween="cubic" easing="inout" condition="Window.IsVisible(home)">WindowClose</animation>
            <animation effect="fade" end="20" start="20" time="0" condition="Integer.IsEqual(Skin.String(BackgroundBlur),20)">Conditional</animation>
            <animation effect="fade" end="40" start="40" time="0" condition="Integer.IsEqual(Skin.String(BackgroundBlur),40)">Conditional</animation>
            <animation effect="fade" end="60" start="60" time="0" condition="Integer.IsEqual(Skin.String(BackgroundBlur),60)">Conditional</animation>
            <animation effect="fade" end="80" start="80" time="0" condition="Integer.IsEqual(Skin.String(BackgroundBlur),80)">Conditional</animation>
            <include condition="Integer.IsEqual(Skin.String(Fadetime),600) | String.IsEmpty(Skin.String(Fadetime))">FadetimeNormal</include>
            <include condition="Integer.IsEqual(Skin.String(Fadetime),1800)">FadetimeSlow</include>
            <include condition="Integer.IsEqual(Skin.String(Fadetime),3600)">FadetimeSuperSlow</include> 
            <timeperimage>12000</timeperimage>
            <randomize>true</randomize>
            <aspectratio>scale</aspectratio>
            <imagepath background="true">$VAR[ImageBackG]</imagepath>
            <animation effect="zoom" start="110" end="120" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
            <animation effect="slide" start="-20,-20" end="20,20" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
        </control>
        
        <control type="multiimage" description="Fanart">
			<visible>Skin.HasSetting(EnableBlur) + !Skin.HasSetting(BlurOnHome) + Window.IsVisible(Home.xml)</visible>		
			<visible>[!Control.IsVisible(510) + !Control.IsVisible(520)] | Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(Custom_MovieSets.xml)</visible>
			<include condition="[!Window.IsVisible(home) | Skin.HasSetting(home.vertical) | [Skin.HasSetting(home.modernwidgets)  + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(Home.xml) + Skin.HasSetting(BlurOnHome) + Skin.HasSetting(EnableBlur)">GlobalBackgroundFadeBlur</include>
			<include condition="[!Window.IsVisible(home) | Skin.HasSetting(home.vertical) | [Skin.HasSetting(home.modernwidgets)  + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(Home.xml) + !Skin.HasSetting(BlurOnHome) + Skin.HasSetting(EnableBlur)">GlobalBackgroundFade</include>			
			<include condition="[!Window.IsVisible(home) | Skin.HasSetting(home.vertical) | [Skin.HasSetting(home.modernwidgets)  + Skin.HasSetting(home.vertical.widgets)]] + !Window.IsVisible(Home.xml) + Skin.HasSetting(EnableBlur)">GlobalBackgroundFadeBlur</include>
			<include condition="[!Window.IsVisible(home) | Skin.HasSetting(home.vertical) | [Skin.HasSetting(home.modernwidgets)  + Skin.HasSetting(home.vertical.widgets)]] + !Skin.HasSetting(EnableBlur)">GlobalBackgroundFade</include>
            <visible>!Player.HasMedia | Window.IsVisible(MyVideoNav.xml) | Window.IsVisible(MyVideoNav.xml) | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
            <visible>!Skin.HasSetting(global.hidefanart) | Window.IsVisible(home)</visible>
            <include>Dimensions_Fullscreen</include>
            <include>Animation.FadeFromHome</include>
            <animation effect="fade" end="0" start="100" time="350" tween="cubic" easing="inout" condition="Window.IsVisible(home)">WindowClose</animation>

            <fadetime>600</fadetime>
            <timeperimage>12000</timeperimage>
            <randomize>true</randomize>
            <aspectratio>scale</aspectratio>
            <imagepath background="true">$VAR[GlobalFanart]</imagepath>
            <animation effect="zoom" start="110" end="120" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
            <animation effect="slide" start="-20,-20" end="20,20" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
        </control>
        
        <control type="multiimage" description="Fanart">
			<visible>Skin.HasSetting(EnableBlur) + Skin.HasSetting(BlurOnHome) + Window.IsVisible(Home.xml)</visible>		
			<visible>[!Control.IsVisible(510) + !Control.IsVisible(520)] | Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(Custom_MovieSets.xml)</visible>
			<include condition="[!Window.IsVisible(home) | Skin.HasSetting(home.vertical) | [Skin.HasSetting(home.modernwidgets)  + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(Home.xml) + Skin.HasSetting(BlurOnHome) + Skin.HasSetting(EnableBlur)">GlobalBackgroundFadeBlur</include>
			<include condition="[!Window.IsVisible(home) | Skin.HasSetting(home.vertical) | [Skin.HasSetting(home.modernwidgets)  + Skin.HasSetting(home.vertical.widgets)]] + Window.IsVisible(Home.xml) + !Skin.HasSetting(BlurOnHome) + Skin.HasSetting(EnableBlur)">GlobalBackgroundFade</include>			
			<include condition="[!Window.IsVisible(home) | Skin.HasSetting(home.vertical) | [Skin.HasSetting(home.modernwidgets)  + Skin.HasSetting(home.vertical.widgets)]] + !Window.IsVisible(Home.xml) + Skin.HasSetting(EnableBlur)">GlobalBackgroundFadeBlur</include>
			<include condition="[!Window.IsVisible(home) | Skin.HasSetting(home.vertical) | [Skin.HasSetting(home.modernwidgets)  + Skin.HasSetting(home.vertical.widgets)]] + !Skin.HasSetting(EnableBlur)">GlobalBackgroundFade</include>
            <visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
            <visible>!Skin.HasSetting(global.hidefanart) | Window.IsVisible(home)</visible>
            <include>Dimensions_Fullscreen</include>
            <include>Animation.FadeFromHome</include>
            <animation effect="fade" end="0" start="100" time="350" tween="cubic" easing="inout" condition="Window.IsVisible(home)">WindowClose</animation>
            <animation effect="fade" end="20" start="20" time="0" condition="Integer.IsEqual(Skin.String(BackgroundBlur),20)">Conditional</animation>
            <animation effect="fade" end="40" start="40" time="0" condition="Integer.IsEqual(Skin.String(BackgroundBlur),40)">Conditional</animation>
            <animation effect="fade" end="60" start="60" time="0" condition="Integer.IsEqual(Skin.String(BackgroundBlur),60)">Conditional</animation>
            <animation effect="fade" end="80" start="80" time="0" condition="Integer.IsEqual(Skin.String(BackgroundBlur),80)">Conditional</animation>
            <include condition="Integer.IsEqual(Skin.String(Fadetime),600) | String.IsEmpty(Skin.String(Fadetime))">FadetimeNormal</include>
            <include condition="Integer.IsEqual(Skin.String(Fadetime),1800)">FadetimeSlow</include>
            <include condition="Integer.IsEqual(Skin.String(Fadetime),3600)">FadetimeSuperSlow</include>            
            <timeperimage>12000</timeperimage>
            <randomize>true</randomize>
            <aspectratio>scale</aspectratio>
            <imagepath background="true">$INFO[Window(home).Property(ImageFilterFIVE)]</imagepath>
            <animation effect="zoom" start="110" end="120" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
            <animation effect="slide" start="-20,-20" end="20,20" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
        </control>
        
		<control type="multiimage" description="Fanart">
			<visible>Skin.HasSetting(EnableBlur)</visible>
			<visible>[Control.IsVisible(510) | Control.IsVisible(520)] + !Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(Custom_MovieSets.xml)</visible>
            <visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
            <visible>!Skin.HasSetting(global.hidefanart) | Window.IsVisible(home)</visible>
            <include>Dimensions_Fullscreen</include>
            <include>Animation.FadeFromHome</include>
            <animation effect="fade" end="0" start="100" time="350" tween="cubic" easing="inout" condition="Window.IsVisible(home)">WindowClose</animation>
            <animation effect="fade" end="20" start="20" time="0" condition="Integer.IsEqual(Skin.String(BackgroundBlur),20)">Conditional</animation>
            <animation effect="fade" end="40" start="40" time="0" condition="Integer.IsEqual(Skin.String(BackgroundBlur),40)">Conditional</animation>
            <animation effect="fade" end="60" start="60" time="0" condition="Integer.IsEqual(Skin.String(BackgroundBlur),60)">Conditional</animation>
            <animation effect="fade" end="80" start="80" time="0" condition="Integer.IsEqual(Skin.String(BackgroundBlur),80)">Conditional</animation>
            <fadetime>600</fadetime>
            <timeperimage>12000</timeperimage>
            <randomize>true</randomize>
            <aspectratio>scale</aspectratio>
            <imagepath background="true">$VAR[ImageBackG]</imagepath>
            <animation effect="zoom" start="110" end="120" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
            <animation effect="slide" start="-20,-20" end="20,20" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
        </control>
		
		<control type="image" description="Background">
			<visible>Skin.HasSetting(EnableBlur)</visible>
			<visible>Skin.HasSetting(FullsizeFanart510)</visible>
			<visible>[Control.IsVisible(510) | Control.IsVisible(520)] + !Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(Custom_MovieSets.xml)</visible>
            <width>1350</width>
			<height>705</height>
			<aspectratio>scale</aspectratio>
            <texture diffuse="common/diffuse510fs.png">$VAR[GlobalFanart]</texture>
			<right>0</right>
			<top>0</top>
			<fadetime>600</fadetime>
			<animation effect="fade" start="100" end="60"time="0" condition="true">Conditional</animation>
			<include>Animation.FadeIn510</include>
			<include>Animation.FadeOut510</include>
        </control>
		
		<control type="image" description="Background">
			<visible>Skin.HasSetting(EnableBlur)</visible>
			<visible>!Skin.HasSetting(FullsizeFanart510)</visible>
			<visible>[Control.IsVisible(510) | Control.IsVisible(520)] + !Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(Custom_MovieSets.xml)</visible>
            <width>1920</width>
			<height>1080</height>
			<aspectratio>scale</aspectratio>
            <texture diffuse="common/diffuse510.png">$VAR[GlobalFanart]</texture>
			<right>-50</right>
			<top>0</top>
			<fadetime>600</fadetime>
			<animation effect="fade" start="100" end="60"time="0" condition="true">Conditional</animation>
			<include>Animation.FadeIn510</include>
			<include>Animation.FadeOut510</include>
        </control>

		<control type="image" description="Background">
			<visible>[Control.IsVisible(510) | Control.IsVisible(520)] + !Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(Custom_MovieSets.xml)</visible>
            <include>Dimensions_Fullscreen</include>
            <texture>common/bg.png</texture>
			<include condition="Skin.HasSetting(EnableBlur)">Overlay510Blur</include>
			<include condition="!Skin.HasSetting(EnableBlur)">Overlay510</include>
        </control>
		
		<control type="image" description="Background">
			<visible>!Skin.HasSetting(EnableBlur)</visible>
			<visible>[Control.IsVisible(510) | Control.IsVisible(520)] + !Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(Custom_MovieSets.xml)</visible>
            <width>1290</width>
			<height>670</height>
			<aspectratio>keep</aspectratio>
			<animation effect="fade" start="80" end="0"time="500" condition="Control.IsVisible(510) + !Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(Custom_MovieSets.xml)">Conditional</animation>
			<right>-100</right>
			<top>-20</top>
            <texture>common/as.png</texture>
			<include>Overlay510</include>
        </control>

        <control type="image" description="Fanart Fallback always">

            <include>GlobalBackgroundFade</include>
            <visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
            <include>Dimensions_Fullscreen</include>
            <visible>!Window.IsVisible(home) + Skin.HasSetting(global.hidefanart) + !String.IsEmpty(Skin.String(fanart.fallback))</visible>
            <include>Animation.FadeFromHome</include>
            <aspectratio>scale</aspectratio>
            <texture background="true">$INFO[Skin.String(fanart.fallback)]</texture>
            <animation effect="zoom" start="110" end="120" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
            <animation effect="slide" start="-20,-20" end="20,20" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
        </control>

        <control type="image" description="FanartOverlay">
            <include>Dimensions_Fullscreen</include>
            <visible>!Window.IsVisible(home) | Skin.HasSetting(home.vertical)  | [Skin.HasSetting(home.modernwidgets)  + Skin.HasSetting(home.vertical.widgets)]</visible>
            <include condition="!Skin.HasSetting(home.vertical)">Animation.FadeFromHome</include>
            <texture>common/floor.png</texture>
			<include condition="Skin.HasSetting(EnableBlur)">IncludeFloorFadeBlur</include>
			<include condition="!Skin.HasSetting(EnableBlur)">IncludeFloorFade</include>
        </control>


    </include>

    <include name="GlobalBackgroundExtended">
        <control type="image" description="Background">
            <include>Dimensions_Fullscreen</include>
            <include condition="!Skin.HasSetting(home.vertical)">Animation.FadeFromHome</include>
            <texture colordiffuse="Background">common/bg.jpg</texture>
        </control>
        <control type="multiimage" description="Fanart">
            <visible>!Skin.HasSetting(EnableBlur)</visible>
            <include>GlobalBackgroundFade</include>
            <visible>!Skin.HasSetting(global.hidefanart)</visible>
            <include>Dimensions_Fullscreen</include>
            <include condition="!Skin.HasSetting(home.vertical)">Animation.FadeFromHome</include>
            <fadetime>600</fadetime>
            <timeperimage>12000</timeperimage>
            <randomize>true</randomize>
            <aspectratio>scale</aspectratio>
            <imagepath background="true">$VAR[GlobalFanart]</imagepath>
            <animation effect="zoom" start="110" end="120" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
            <animation effect="slide" start="-20,-20" end="20,20" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
        </control>
        <control type="multiimage" description="Fanart">
            <visible>Skin.HasSetting(EnableBlur)</visible>
			<visible>!Skin.HasSetting(global.hidefanart)</visible>
            <include>Dimensions_Fullscreen</include>
            <include condition="!Skin.HasSetting(home.vertical)">Animation.FadeFromHome</include>
            <animation effect="fade" end="0" start="100" time="350" tween="cubic" easing="inout" condition="Window.IsVisible(home)">WindowClose</animation>
            <animation effect="fade" end="20" start="20" time="0" condition="Integer.IsEqual(Skin.String(BackgroundBlur),20)">Conditional</animation>
            <animation effect="fade" end="40" start="40" time="0" condition="Integer.IsEqual(Skin.String(BackgroundBlur),40)">Conditional</animation>
            <animation effect="fade" end="60" start="60" time="0" condition="Integer.IsEqual(Skin.String(BackgroundBlur),60)">Conditional</animation>
            <animation effect="fade" end="80" start="80" time="0" condition="Integer.IsEqual(Skin.String(BackgroundBlur),80)">Conditional</animation>
            <fadetime>600</fadetime>
            <timeperimage>12000</timeperimage>
            <randomize>true</randomize>
            <aspectratio>scale</aspectratio>
            <imagepath background="true">$INFO[Window(home).Property(ImageFilterFIVE)]</imagepath>
            <animation effect="zoom" start="110" end="120" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
            <animation effect="slide" start="-20,-20" end="20,20" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(Fanart.Animate)">Conditional</animation>
        </control>
        <control type="image" description="FanartOverlay">
            <include>Dimensions_Fullscreen</include>
            <include condition="!Skin.HasSetting(home.vertical)">Animation.FadeFromHome</include>
            <texture>common/floor.png</texture>
			<include condition="Skin.HasSetting(EnableBlur)">IncludeFloorFadeBlur</include>
			<include condition="!Skin.HasSetting(EnableBlur)">IncludeFloorFade</include>
        </control>
        <control type="image" description="Background">
            <visible>Skin.HasSetting(EnableBlur)</visible>
            <include condition="!Skin.HasSetting(home.vertical)">Animation.FadeFromHome</include>
            <include>Dimensions_Fullscreen</include>
            <texture colordiffuse="Background">common/bg.jpg</texture>
            <animation effect="fade" end="65" start="65" time="0" condition="true">Conditional</animation>
        </control>
    </include>
	
	
	<include name="JumpBarHorizontal">
		<control type="image">	
			<visible>Control.HasFocus(60) | Control.HasFocus(1602) | Control.HasFocus(1600) | Control.HasFocus(1609) | Control.HasFocus(1603) | Control.HasFocus(1605) | Control.HasFocus(1606) | Control.HasFocus(1604) | Control.HasFocus(1607) | Control.HasFocus(1619) | Control.HasFocus(1620) | Control.HasFocus(1624) | Control.HasFocus(1625) | Control.HasFocus(1635) | Control.HasFocus(1634) | Control.HasFocus(1627) | Control.HasFocus(1679)</visible>
			<left>1869</left>
			<top>514</top>
			<width>16</width>
			<height>16</height>
			<texture colordiffuse="Dark1" flipx="false">common/arrow-small-right.png</texture>
			<include>Animation.DelayFadeIn3</include>
		</control>
		
		<control type="image">	
			<visible>Control.HasFocus(1615) | Control.HasFocus(1639) | Control.HasFocus(1623) | Control.HasFocus(1671)</visible>	
			<left>950</left>
			<top>885</top>
			<width>16</width>
			<height>16</height>
			<texture colordiffuse="Dark1" flipx="false">common/arrow-small.png</texture>
			<include>Animation.DelayFadeIn3</include>
		</control>
			
		<control type="group">
            <animation effect="slide" start="80,0" end="0,0" reversible="false" time="600" tween="quadratic" condition="ControlGroup(290000).HasFocus()">Conditional</animation>
            <animation effect="slide" start="0,0" end="100,0" reversible="false" time="2500" tween="quadratic" condition="!ControlGroup(290000).HasFocus()">Hidden</animation>		
            <visible allowhiddenfocus="true">ControlGroup(290000).HasFocus()</visible>
            <control type="image">				
                <left>1879</left>
                <top>214</top>
                <width>230</width>
                <height>645</height>
                <texture colordiffuse="Box2" border="5" background="true">common/box3.png</texture>
            </control>
            <control type="image">			
                <left>1880</left>
                <top>215</top>
                <width>230</width>
                <height>643</height>
                <texture colordiffuse="FloorFade" background="true">common/white.png</texture>	
                <animation effect="fade" start="100" end="50" time="0" condition="true">Conditional</animation>		
            </control>	
            
            <control type="grouplist" id="290000">
                <visible allowhiddenfocus="true">ControlGroup(290000).HasFocus()</visible>
                <include>Animation.FadeOutDelay</include>
                <left>1905</left>
                <top>170</top>
                <width>220</width>
                <height>800</height>
                <onup>290001</onup>
                <ondown>290001</ondown>
                <onback>50</onback>
                <itemgap>9</itemgap>
                <onleft>$VAR[ClickToJump]</onleft>
                <onright>$VAR[ClickToJump]</onright>
                <orientation>vertical</orientation>
                <align>center</align>
                <control type="panel" id="290001">
                    <height>700</height>
                    <width>85</width>
                    <onright>50</onright>
                    <onleft>50</onleft>
                    <itemlayout height="70" width="23">
                        <control type="label">
                            <width>100%</width>
                            <align>center</align>
                            <left>$PARAM[left]</left>
                            <label>$INFO[ListItem.Label]</label>
                            <font>Small333</font>
                            <textcolor>Black70</textcolor>
                        </control>
                    </itemlayout>
                    <focusedlayout height="70" width="23">
                        <control type="label">
                            <visible>Control.HasFocus(290001)</visible>
                            <width>100%</width>
                            <align>center</align>
                            <left>$PARAM[left]</left>
                            <label>$INFO[ListItem.Label]</label>
                            <font>Small333</font>
                            <textcolor>$VAR[ColorHighlight]</textcolor>
                        </control>
                        <control type="label">
                            <visible>!Control.HasFocus(290001)</visible>
                            <width>100%</width>
                            <align>center</align>
                            <left>$PARAM[left]</left>
                            <label>$INFO[ListItem.Label]</label>
                            <font>Small333</font>
                            <textcolor>Black70</textcolor>
                        </control>
                    </focusedlayout> 
                    <content>
                        <item id="0">
                            <label>#</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS2</onclick>
                            <onclick>JumpSMS2</onclick>
                            <onclick>JumpSMS2</onclick>
                            <onclick>JumpSMS2</onclick>
                        </item>
                        <item id="1">
                            <label>A</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS2</onclick>
                        </item>
                        <item id="2">
                            <label>B</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS2</onclick>
                            <onclick>JumpSMS2</onclick>
                        </item> 
                        <item id="4">
                            <label>C</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS2</onclick>
                            <onclick>JumpSMS2</onclick>
                            <onclick>JumpSMS2</onclick>
                        </item>
                        <item id="5">
                            <label>D</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS3</onclick>
                        </item>
                        <item id="6">
                            <label>E</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS3</onclick>
                            <onclick>JumpSMS3</onclick>
                        </item> 
                        <item id="7">
                            <label>F</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS3</onclick>
                            <onclick>JumpSMS3</onclick>
                            <onclick>JumpSMS3</onclick>
                        </item>
                        <item id="8">
                            <label>G</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS4</onclick>
                        </item>
                        <item id="9">
                            <label>H</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS4</onclick>
                            <onclick>JumpSMS4</onclick>
                        </item> 
                        <item id="10">
                            <label>I</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS4</onclick>
                            <onclick>JumpSMS4</onclick>
                            <onclick>JumpSMS4</onclick>
                        </item>
                        <item id="11">
                            <label>J</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS5</onclick>
                        </item>
                        <item id="12">
                            <label>K</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS5</onclick>
                            <onclick>JumpSMS5</onclick>
                        </item> 
                        <item id="13">
                            <label>L</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS5</onclick>
                            <onclick>JumpSMS5</onclick>
                            <onclick>JumpSMS5</onclick>
                        </item>
                        <item id="14">
                            <label>M</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS6</onclick>
                        </item>
                        <item id="15">
                            <label>N</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS6</onclick>
                            <onclick>JumpSMS6</onclick>
                        </item> 
                        <item id="16">
                            <label>O</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS6</onclick>
                            <onclick>JumpSMS6</onclick>
                            <onclick>JumpSMS6</onclick>
                        </item>
                        <item id="17">
                            <label>P</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS7</onclick>
                        </item>
                        <item id="18">
                            <label>Q</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS7</onclick>
                            <onclick>JumpSMS7</onclick>
                        </item> 
                        <item id="19">
                            <label>R</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS7</onclick>
                            <onclick>JumpSMS7</onclick>
                            <onclick>JumpSMS7</onclick>
                        </item>
                        <item id="20">
                            <label>S</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS7</onclick>
                            <onclick>JumpSMS7</onclick>
                            <onclick>JumpSMS7</onclick>
                            <onclick>JumpSMS7</onclick>
                        </item>
                        <item id="21">
                            <label>T</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS8</onclick>
                        </item> 
                        <item id="22">
                            <label>U</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS8</onclick>
                            <onclick>JumpSMS8</onclick>
                        </item>
                        <item id="23">
                            <label>V</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS8</onclick>
                            <onclick>JumpSMS8</onclick>
                            <onclick>JumpSMS8</onclick>
                        </item>
                        <item id="24">
                            <label>W</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS7</onclick>
                            <onclick>JumpSMS9</onclick>
                        </item>  
                        <item id="25">
                            <label>X</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS7</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS9</onclick>
                        </item>
                        <item id="26">
                            <label>Y</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS7</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS9</onclick>
                        </item>
                        <item id="27">
                            <label>Z</label>
                            <onclick>$VAR[ClickToJump]</onclick>
                            <onclick>JumpSMS7</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS9</onclick>
                            <onclick>JumpSMS9</onclick>
                        </item>   
				    </content>
                </control>  
            </control>    
		</control>
	</include>
    
	<variable name="ClickToJump">
		<value condition="Control.IsVisible(501)">SetFocus(501)</value>
		<value condition="Control.IsVisible(507)">SetFocus(507)</value>	
		<value condition="Control.IsVisible(504)">SetFocus(504)</value>
		<value condition="Control.IsVisible(50)">SetFocus(50)</value>
		<value condition="Control.IsVisible(51)">SetFocus(51)</value>
		<value condition="Control.IsVisible(52)">SetFocus(52)</value>
		<value condition="Control.IsVisible(53)">SetFocus(53)</value>
		<value condition="Control.IsVisible(54)">SetFocus(54)</value>	
		<value condition="Control.IsVisible(56)">SetFocus(56)</value>	
		<value condition="Control.IsVisible(57)">SetFocus(57)</value>
		<value condition="Control.IsVisible(58)">SetFocus(58)</value>
		<value condition="Control.IsVisible(59)">SetFocus(59)</value>
		<value condition="Control.IsVisible(500)">SetFocus(500)</value>
		<value condition="Control.IsVisible(55)">SetFocus(55)</value>
		<value condition="Control.IsVisible(555)">SetFocus(555)</value>
        <value condition="Control.IsVisible(550)">SetFocus(550)</value>
		<value condition="Control.IsVisible(509)">SetFocus(509)</value>
        <value condition="Control.IsVisible(505)">SetFocus(505)</value>
        <value condition="Control.IsVisible(519)">SetFocus(519)</value>
		<value condition="Control.IsVisible(511)">SetFocus(511)</value>
		<value condition="Control.IsVisible(512)">SetFocus(512)</value>
		<value condition="Control.IsVisible(513)">SetFocus(513)</value>
        <value condition="Control.IsVisible(514)">SetFocus(514)</value>
        <value condition="Control.IsVisible(515)">SetFocus(515)</value>
        <value condition="Control.IsVisible(5161)">SetFocus(5161)</value>
        <value condition="Control.IsVisible(516)">SetFocus(516)</value>
        <value condition="Control.IsVisible(517)">SetFocus(517)</value>
	</variable>
	
	<include name="ScrollTextWidget">
		<autoscroll delay="2000" time="2500" repeat="10000">true</autoscroll>
	</include>
    
	<include name="NoScrollTextWidget">
		<scroll>false</scroll>
		<autoscroll>false</autoscroll>
	</include>
	
	<variable name="Datab">
		<value condition="!String.IsEmpty(Container(9502).ListItem.DBID)">plugin://service.library.data.provider?type=movie&amp;dbid=$INFO[Container(9502).ListItem.DBID]</value>
		<value></value>
	</variable>

	<include name="Furniture_FlagsFromHome">
		<control type="group">
			<visible>Window.IsVisible(Home.xml) + !Control.HasFocus(9603)</visible>
			<animation effect="fade" start="100" end="6" time="200" condition="Control.HasFocus(9601)">Conditional</animation>
			<include condition="Window.IsVisible(Home.xml)">Furniture_Flags</include>
		</control>
	</include>
    
	<include name="DialogVideoInfoNavigation">
		<control type="grouplist" id="9000">
			<animation condition="Control.HasFocus(50) | Control.HasFocus(9501)" effect="fade" end="0"  start="100" time="300">Conditional</animation>
			<bottom>224</bottom>
			<left>540</left>
			<right>SidePad</right>
			<height>68</height>
			<bottom>33</bottom>
			<itemgap>16</itemgap>
			<onup>50</onup>    
			<ondown>9601</ondown>     
			<orientation>horizontal</orientation>
			<control type="button" id ="8">
				<description>Play</description>
				<label>208</label>
				<include>DefInfoButtons</include>
				<onfocus>ClearProperty(filminfo)</onfocus>
				<onclick>Dialog.Close(1132)</onclick>					
			</control>				
			<control type="button" id="9019">
				<include>DefInfoButtons</include>
				<label>37551</label>                  
				<onclick>SetProperty(filminfo,1)</onclick>
				<onleft>ClearProperty(filminfo)</onleft>
				<onright>ClearProperty(filminfo)</onright> 				
				<visible>Container.Content(movies) | Container.Content(tvshows)</visible>							
			</control>	
			<control type="button" id="11">
				<description>Trailer button</description>
				<label>20410</label>
				<include>DefInfoButtons</include>
				<visible>!String.IsEmpty(ListItem.Trailer)</visible>
				<onfocus>ClearProperty(filminfo)</onfocus>
			</control>
			<control type="togglebutton" id ="7">
                <onfocus>ClearProperty(filminfo)</onfocus>
				<description>Tracklist</description>
				<label>38023</label>
				<altlabel>$LOCALIZE[563] $INFO[ListItem.UserRating,,.0]</altlabel>
				<usealttexture>!String.IsEmpty(ListItem.UserRating)</usealttexture>
				<include>DefInfoButtons</include>
				<visible>Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes)</visible>
			</control>
			<control type="button" id="146">
                <onfocus>ClearProperty(filminfo)</onfocus>
				<description>Special Features button</description>
				<label>31282</label>
				<include>DefInfoButtons</include>
				<visible>System.HasAddon(plugin.video.specialfeatures)</visible>
				<visible>String.IsEqual(Window(home).Property(SpecialFeatures.Visible),true)</visible>
				<onclick>Action(close)</onclick>
				<onclick>RunScript(plugin.video.specialfeatures,listitem)</onclick>
			</control>
			<control type="button" id="9012">
                <onfocus>ClearProperty(filminfo)</onfocus>
				<include>DefInfoButtons</include>
				<label>31206</label>
				<onclick condition="String.IsEqual(ListItem.DBType,movie)">SetProperty(content,2)</onclick>
				<onclick condition="String.IsEqual(ListItem.DBType,tvshow)">SetProperty(content,3)</onclick>
                <onclick>SetProperty(filminfo,3)</onclick>
				<ondown>9012</ondown>					
				<onup condition="Control.IsVisible(50) + String.IsEmpty(Window.Property(content))">50</onup>--> 
				<onup>9501</onup> 
				<visible>Container.Content(movies) | Container.Content(tvshows)</visible>					
			</control>
			<control type="button" id="49">
                <onfocus>ClearProperty(filminfo)</onfocus>
				<description>Home Theatre</description>
				<label>31170</label>
				<include>DefInfoButtons</include>
				<onclick>RunScript(script.cinemavision,experience)</onclick>
				<visible>System.HasAddon(script.cinemavision) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes)]</visible>
				<onfocus>ClearProperty(filminfo)</onfocus>
			</control>
			<control type="button" id="51">
                <onfocus>ClearProperty(filminfo)</onfocus>
				<description>Get Thumb</description>
				<label>37550</label>
				<include>DefInfoButtons</include>
				<onclick>SetFocus(9603)</onclick>
				<visible>!String.IsEmpty(ListItem.Art(fanart))</visible>
			</control> 				
			<control type="button" id ="6">
				<onfocus>ClearProperty(filminfo)</onfocus>
				<description>Refresh</description>
				<label>184</label>
				<include>DefInfoButtons</include>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
			</control>
			<control type="button" id ="10">
				<description>Get Thumb</description>
				<label>13405</label>
				<include>DefInfoButtons</include>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
			</control> 
			<control type="button" id="9001">
				<label>37513</label>
				<onclick condition="Container.Content(tvshows)">RunScript(script.artwork.beef, mode=gui, mediatype=tvshow, dbid=$INFO[ListItem.DBID])</onclick>
				<onclick condition="Container.Content(movies)">RunScript(script.artwork.beef, mode=gui, mediatype=movie, dbid=$INFO[ListItem.DBID])</onclick>
				<onclick condition="Container.Content(musicvideos)">RunScript(script.artwork.beef, mode=gui, mediatype=musicvideo, dbid=$INFO[ListItem.DBID])</onclick>
				<description>Get Artwork</description>
				<include>DefInfoButtons</include>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<visible>[Container.Content(tvshows) | Container.Content(movies) | Container.Content(musicvideos)] + system.hasaddon(script.artwork.beef)</visible>
			</control>
		</control>
	</include>
	
	<include name="buttontextures">
		<font>Null</font>
		<textcolor>Dark2</textcolor>
		<texturenofocus colordiffuse="Dark4" border="0">common/boxsquare.png</texturenofocus>
		<texturefocus colordiffuse="$VAR[ColorHighlight]" border="0">common/boxsquare.png</texturefocus>
		<textureradioonfocus colordiffuse="FFFFFFFF">$PARAM[icon]</textureradioonfocus>
		<textureradioonnofocus colordiffuse="FFFFFFFF">$PARAM[icon]</textureradioonnofocus>
		<textureradioofffocus colordiffuse="FFFFFFFF">$PARAM[icon]</textureradioofffocus>
		<textureradiooffnofocus colordiffuse="FFFFFFFF">$PARAM[icon]</textureradiooffnofocus>
		<textureradiooffdisabled colordiffuse="disabled">$PARAM[icon]</textureradiooffdisabled>
		<textureradioondisabled colordiffuse="disabled">$PARAM[icon]</textureradioondisabled>
	</include>
	
	<include name="buttontexturesnumpad">
		<font>Null</font>
		<textcolor>Dark2</textcolor>
		<texturenofocus colordiffuse="Black12" border="5">common/box.png</texturenofocus>
		<texturefocus colordiffuse="$VAR[ColorHighlight]" border="5">common/box.png</texturefocus>
		<textureradioonfocus colordiffuse="FFFFFFFF">$PARAM[icon]</textureradioonfocus>
		<textureradioonnofocus colordiffuse="FFFFFFFF">$PARAM[icon]</textureradioonnofocus>
		<textureradioofffocus colordiffuse="FFFFFFFF">$PARAM[icon]</textureradioofffocus>
		<textureradiooffnofocus colordiffuse="FFFFFFFF">$PARAM[icon]</textureradiooffnofocus>
		<textureradiooffdisabled colordiffuse="disabled">$PARAM[icon]</textureradiooffdisabled>
		<textureradioondisabled colordiffuse="disabled">$PARAM[icon]</textureradioondisabled>
	</include>
	
	<include name="buttondimensionskeyboard">
		<width>$PARAM[keyboardbuttonwidth]</width>
		<height>$PARAM[keyboardbuttonheight]</height>
		<radioposx>$PARAM[keyboardbuttonradioposx]</radioposx>
		<radioposy>$PARAM[keyboardbuttonradioposy]</radioposy>
		<radiowidth>48</radiowidth>
	</include>
	
	<include name="buttondimensionsnumpad">
		<width>186</width>
		<height>89</height>
		<radioposx>70</radioposx>
		<radioposy>30</radioposy>
		<radiowidth>48</radiowidth>
	</include>
	
	<include name="buttondimensions">
		<width>134</width>
		<height>88</height>
		<radioposx>40</radioposx>
		<radioposy>18</radioposy>
		<radiowidth>48</radiowidth>
	</include>
	
	<include name="buttondimensionssquare">
		<width>126</width>
		<height>88</height>
		<radioposx>40</radioposx>
		<radioposy>18</radioposy>
		<radiowidth>48</radiowidth>
	</include>
	
	<include name="buttondimensionssquareblur">
		<width>76</width>
		<height>88</height>
		<radioposx>14</radioposx>
		<radioposy>18</radioposy>
		<radiowidth>48</radiowidth>
	</include>
	
	<include name="listdimensions">
		<height>68</height>
		<bottom>33</bottom>
		<itemgap>28</itemgap>
	</include>
	
	<include name="DialogVideoInfoNavigationNew">
		<control type="grouplist" id="9000">
			<animation condition="Control.HasFocus(50) | Control.HasFocus(9501)" effect="fade" end="0"  start="100" time="300">Conditional</animation>
			<visible>true</visible>
			<bottom>224</bottom>
			<left>568</left>
			<right>83</right>
			<include>listdimensions</include>   
			<onup condition="!Skin.HasSetting(HideActorImages)">50</onup> 
            <ondown>9601</ondown>
            <onfocus>SetProperty(test,1,Home)</onfocus>     
			<orientation>horizontal</orientation>
			<control type="radiobutton" id ="8">
				<include>buttondimensions</include>
				<onfocus>ClearProperty(content)</onfocus>
				<texturenofocus colordiffuse="Dark4" border="0">common/boxsquare.png</texturenofocus>
				<texturefocus colordiffuse="$VAR[ColorHighlight]" border="0">common/boxsquare.png</texturefocus>
				<textureradioonfocus colordiffuse="FFFFFFFF">buttonsdialogs/continue.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="FFFFFFFF">buttonsdialogs/continue.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="FFFFFFFF">buttonsdialogs/play.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="FFFFFFFF">buttonsdialogs/play.png</textureradiooffnofocus>
				<selected>ListItem.IsResumable</selected>
				<onfocus>ClearProperty(filminfo)</onfocus>
				<onclick>Dialog.Close(1132)</onclick>
                <onup condition="!Skin.HasSetting(HideActorImages)">50</onup>				
			</control>   
			<control type="radiobutton" id ="9019">
                <onfocus>ClearProperty(filminfo)</onfocus>
				<onfocus>ClearProperty(content)</onfocus>                
				<include>buttondimensions</include>
                <onclick>SetProperty(filminfo,1)</onclick>                
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/info.png" />
				</include>
				<onleft>ClearProperty(filminfo)</onleft>
				<onright>ClearProperty(filminfo)</onright> 				
				<visible>Container.Content(movies) | Container.Content(tvshows)</visible>				
			</control>	
            
			<control type="radiobutton" id ="9012">
                <onfocus>ClearProperty(filminfo)</onfocus>
				<onfocus condition="!String.IsEqual(Window.Property(content),2) + !String.IsEqual(Window.Property(content),3)">ClearProperty(content)</onfocus>              
				<include>buttondimensions</include>
                <onclick>SetProperty(filminfo,3)</onclick>
				<onclick condition="String.IsEqual(ListItem.DBType,movie)">SetProperty(content,2)</onclick>
				<onclick condition="String.IsEqual(ListItem.DBType,tvshow)">SetProperty(content,3)</onclick>                           
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/similar.png" />
				</include>					
				<onup condition="Control.IsVisible(50) + String.IsEmpty(Window.Property(content)) + !Skin.HasSetting(HideActorImages)">50</onup>
				<onup>9501</onup> 
				<visible>String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow)</visible>
			</control>
            <control type="radiobutton" id ="9035">
                <onfocus>ClearProperty(filminfo)</onfocus>
				<onfocus condition="!String.IsEqual(Window.Property(content),6)">ClearProperty(content)</onfocus>                
				<include>buttondimensions</include>
				<onclick condition="String.IsEqual(ListItem.DBType,movie)">SetProperty(content,6)</onclick>
                <onclick>SetProperty(filminfo,5)</onclick>                          
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/director.png" />
				</include>
				<ondown>9601</ondown>					
				<onup condition="Control.IsVisible(50) + String.IsEmpty(Window.Property(content)) + !Skin.HasSetting(HideActorImages)">50</onup>
				<onup>9501</onup> 
				<visible>String.IsEqual(ListItem.DBType,movie)</visible>
			</control>
            <control type="radiobutton" id ="9036">
                <onfocus>ClearProperty(filminfo)</onfocus>
				<onfocus condition="!String.IsEqual(Window.Property(content),1)">ClearProperty(content)</onfocus>              
				<include>buttondimensions</include>
                <onclick>SetProperty(filminfo,7)</onclick>
				<onclick condition="String.IsEqual(ListItem.DBType,movie)">SetProperty(content,1)</onclick>                          
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/studio.png" />
				</include>					
				<onup condition="Control.IsVisible(50) + String.IsEmpty(Window.Property(content)) + !Skin.HasSetting(HideActorImages)">50</onup>
				<onup>9501</onup> 
				<visible>String.IsEqual(ListItem.DBType,movie)</visible>
			</control>
            <control type="radiobutton" id ="51">
                <onfocus condition="!String.IsEqual(Window.Property(filminfo),4)">ClearProperty(filminfo)</onfocus>
				<onfocus>ClearProperty(content)</onfocus>                
				<include>buttondimensions</include>
                <onclick>SetProperty(filminfo,4)</onclick>
                                 
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/image.png" />
				</include>
                <onup condition="Control.IsVisible(50) + String.IsEmpty(Window.Property(content)) + !Skin.HasSetting(HideActorImages) + !String.IsEqual(Window.Property(filminfo),4)">50</onup>
				<onup>9151</onup>
				<visible>!String.IsEmpty(ListItem.Art(fanart))</visible>
			</control>	
            <control type="radiobutton" id ="11">
                <onfocus>ClearProperty(filminfo)</onfocus>
				<onfocus>ClearProperty(content)</onfocus>                
				<include>buttondimensions</include>
                <onclick>SetProperty(filminfo,2)</onclick>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/trailer.png" />
				</include>
                <onup condition="Control.IsVisible(50) + String.IsEmpty(Window.Property(content)) + !Skin.HasSetting(HideActorImages)">50</onup>
				<onup>7011</onup>
				<visible>!String.IsEmpty(ListItem.Trailer) + !Skin.HasSetting(PlayTrailerWindowed)</visible>			
			</control>
			<control type="radiobutton" id ="1223">
                <onfocus>ClearProperty(filminfo)</onfocus>
				<onfocus>ClearProperty(content)</onfocus>
                <onfocus>SetProperty(filminfo,2)</onfocus>
                <onclick>SetProperty(filminfo,2)</onclick>               
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/trailer.png" />
				</include>
				<visible>!String.IsEmpty(ListItem.Trailer) + Skin.HasSetting(PlayTrailerWindowed)</visible>
                <onup>7011</onup>	
				<onclick>PlayMedia($INFO[ListItem.Trailer],1)</onclick>		
			</control>	
            <control type="radiobutton" id ="7">
                <onfocus>ClearProperty(filminfo)</onfocus>
				<onfocus>ClearProperty(content)</onfocus>                
				<include>buttondimensions</include>
                <!--<onfocus>SetProperty(filminfo,5)</onfocus>-->
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/rating.png" />
				</include>
				<visible>Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes)</visible>
				<visible>Control.IsEnabled(7)</visible>
			</control>	
            <control type="radiobutton" id="49">
                <onfocus>ClearProperty(filminfo)</onfocus>
				<onfocus>ClearProperty(content)</onfocus>               
				<description>Home Theatre</description>
                <include>buttondimensions</include>
                <include content="buttontextures">
					<param name="icon" value="buttonsdialogs/cinema.png" />
				</include>
				<onclick>RunScript(script.cinemavision,experience)</onclick>
				<visible>System.HasAddon(script.cinemavision) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes)]</visible>
			</control> 			
				
			<control type="radiobutton" id ="6">
                <onfocus>ClearProperty(filminfo)</onfocus>
				<onfocus>ClearProperty(content)</onfocus>               
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/update.png" />
				</include>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<visible>Control.IsEnabled(6)</visible>
			</control>		
			<control type="radiobutton" id ="10">
                <onfocus>ClearProperty(filminfo)</onfocus>
				<onfocus>ClearProperty(content)</onfocus>               
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/choose_image.png" />
				</include>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<visible>Control.IsEnabled(10)</visible>
			</control>		
			<control type="radiobutton" id ="9001">
                <onfocus>ClearProperty(filminfo)</onfocus>
				<onfocus>ClearProperty(content)</onfocus>               
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/artworkdownloader.png" />
				</include>
				<onclick condition="Container.Content(tvshows)">RunScript(script.artwork.beef, mode=gui, mediatype=tvshow, dbid=$INFO[ListItem.DBID])</onclick>
				<onclick condition="Container.Content(movies)">RunScript(script.artwork.beef, mode=gui, mediatype=movie, dbid=$INFO[ListItem.DBID])</onclick>
				<onclick condition="Container.Content(musicvideos)">RunScript(script.artwork.beef, mode=gui, mediatype=musicvideo, dbid=$INFO[ListItem.DBID])</onclick>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<visible>[Container.Content(tvshows) | Container.Content(movies) | Container.Content(musicvideos)] + system.hasaddon(script.artwork.beef)</visible>
			</control>
            <control type="radiobutton" id ="9010">
                <onfocus>ClearProperty(filminfo)</onfocus>
				<onfocus>ClearProperty(content)</onfocus>           
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/settings.png" />
				</include>
				<onclick>SetFocus(9400)</onclick>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>				
			</control>
		</control>	
	</include>	
	
	<include name="DialogMovieSetsInfoNavigation">
		<control type="grouplist" id="9000">
			<animation condition="Control.HasFocus(50) | Control.HasFocus(9501)" effect="fade" end="0"  start="100" time="300">Conditional</animation>
			<bottom>224</bottom>
			<left>540</left>
			<right>SidePad</right>
			<height>68</height>
			<bottom>33</bottom>
			<itemgap>16</itemgap>
			<onup>50</onup>    
			<ondown>9601</ondown>     
			<orientation>horizontal</orientation>						
			<control type="button" id="9019">
				<include>DefInfoButtons</include>
				<label>342</label>                  
				<onclick>SetFocus(9502)</onclick>				
				<onup>9502</onup>						
			</control>
			<control type="button" id="9100">
				<description>Artwork Beef</description>
				<label>Artwork Beef</label>
				<include>DefInfoButtons</include>
				<onclick>RunScript(script.artwork.beef, mode=gui, mediatype=set, dbid=$INFO[ListItem.DBID])</onclick>
				<visible>system.hasaddon(script.artwork.beef)</visible>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<onup>9502</onup>	
			</control>
			<control type="button" id="51">
				<description>Get Thumb</description>
				<label>37550</label>
				<include>DefInfoButtons</include>
				<onclick>SetFocus(9603)</onclick>
				<visible>!String.IsEmpty(ListItem.Art(fanart))</visible>
			</control> 
		</control>		
	</include>
	
	<include name="DialogMovieSetsInfoNavigationNew">
		<control type="grouplist" id="9000">
			<animation condition="Control.HasFocus(50) | Control.HasFocus(9501)" effect="fade" end="0"  start="100" time="300">Conditional</animation>
			<visible>true</visible>
			<bottom>224</bottom>
			<left>570</left>
			<right>160</right>
			<include>listdimensions</include>
			<onup>50</onup>    
			<ondown>9601</ondown>     
			<orientation>horizontal</orientation>
			<control type="radiobutton" id ="9019">
				<description>Play</description>
				<font>Button</font>
				<textcolor>Dark2</textcolor>
				<include>buttondimensions</include>
				<onfocus>ClearProperty(content)</onfocus>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/set.png" />
				</include>
				<onclick>SetFocus(9502)</onclick>				
				<onup>9502</onup>						
			</control>
			<control type="radiobutton" id ="51">
				<description>Trailer</description>
				<font>Button</font>
				<textcolor>Dark2</textcolor>
				<include>buttondimensions</include>
				<onright>7</onright>
				<onfocus>ClearProperty(content)</onfocus>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/image.png" />
				</include>
				<onclick>SetFocus(9603)</onclick>
				<visible>!String.IsEmpty(ListItem.Art(fanart))</visible>
			</control>			
			<control type="radiobutton" id ="9100">
				<description>Trailer</description>
				<font>Button</font>
				<textcolor>Dark2</textcolor>
				<include>buttondimensions</include>
				<onfocus>ClearProperty(content)</onfocus>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/artworkdownloader.png" />
				</include>
				<onclick>RunScript(script.artwork.beef, mode=gui, mediatype=set, dbid=$INFO[ListItem.DBID])</onclick>
				<visible>system.hasaddon(script.artwork.beef)</visible>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<onup>9502</onup>
			</control>
            <control type="radiobutton" id ="9007">
                <onfocus>ClearProperty(setsinfo)</onfocus>            
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/settings.png" />
				</include>
				<onclick>SetFocus(9400)</onclick>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
			</control>	
		</control>		
	</include>
	
	<include name="DialogMusicInfoNavigation">
		<control type="grouplist" id="9000">
			<visible allowhiddenfocus="true">ControlGroup(9000).HasFocus() | Control.HasFocus(50) | Control.HasFocus(9009)</visible>
			<bottom>224</bottom>
			<left>ListSquareX</left>
			<right>SidePad</right>
			<height>68</height>
			<bottom>33</bottom>
			<itemgap>16</itemgap>
			<ondown>9000</ondown>
			<onup condition="Control.IsVisible(50)">51</onup>
			<onup condition="Control.IsVisible(9501)">9501</onup>
			<orientation>horizontal</orientation>
			<control type="button" id ="8">
				<description>Play</description>
				<label>208</label>
				<width>260</width>
				<include>DefInfoButtons</include>
				<onclick>PlayMedia($INFO[ListItem.FileNameAndPath])</onclick>
				<onclick>Dialog.Close(135)</onclick>
				<visible>String.IsEqual(ListItem.DBType,album) | String.IsEqual(ListItem.DBType,song)</visible>
				<onup condition="Control.IsVisible(50)">SetFocus(9009)</onup>	
			</control>
            
            <control type="button" id ="8">
				<description>Play</description>
				<label>208</label>
				<width>260</width>
				<include>DefInfoButtons</include>
				<onclick>PlayMedia($INFO[ListItem.FileNameAndPath])</onclick>
				<onclick>Dialog.Close(135)</onclick>
				<visible>String.IsEqual(ListItem.DBType,album) | String.IsEqual(ListItem.DBType,song)</visible>
				<onup condition="Control.IsVisible(50)">SetFocus(9009)</onup>	
			</control>
            				
			<control type="button" id="7">
				<width>260</width>
				<include>DefInfoButtons</include>
				<visible>String.IsEqual(ListItem.DBType,album) | String.IsEqual(ListItem.DBType,song)</visible>
				<onup condition="Control.IsVisible(50)">SetFocus(9009)</onup>	
			</control>					
			<control type="button" id ="9001">
				<description>Discog</description>
				<label>21888</label>
				<width>260</width>
				<onclick>ClearProperty(tracklist)</onclick>
				<onclick>SetProperty(content,1)</onclick>
				<onclick>SetFocus(9501)</onclick>	
				<onup condition="Control.IsVisible(50)">SetFocus(9009)</onup>				
				<include>DefInfoButtons</include>
			</control>
			<control type="togglebutton" id ="9002">
				<description>Tracklist</description>
				<label>182</label>
				<altlabel>21887</altlabel>
				<width>260</width>
				<usealttexture>!String.IsEmpty(Window.Property(tracklist))</usealttexture>
				<onclick condition="String.IsEmpty(Window.Property(tracklist))">SetProperty(tracklist,1)</onclick>
				<onclick condition="!String.IsEmpty(Window.Property(tracklist))">ClearProperty(tracklist)</onclick>
				<include>DefInfoButtons</include>
				<onup condition="Control.IsVisible(50)">SetFocus(9009)</onup>
				<visible>Container.Content(albums)</visible>
			</control>
			<control type="button" id ="9003">
				<description>Youtube</description>
				<label>31141</label>
				<width>260</width>
				<onclick>Close</onclick>
				<onclick>ActivateWindow(videos,plugin://plugin.video.youtube/search/?q=$INFO[ListItem.Artist],return)</onclick>
				<include>DefInfoButtons</include>
				<onup condition="Control.IsVisible(50)">SetFocus(9009)</onup>	
			</control>
			<control type="button" id="51">
				<description>Get Thumb</description>
				<label>37550</label>
				<width>260</width>
				<include>DefInfoButtons</include>
				<onclick>SetFocus(9603)</onclick>
				<visible>!String.IsEmpty(ListItem.Art(fanart))</visible>
			</control> 
			<control type="button" id ="6">
				<description>Refresh</description>
				<label>184</label>
				<width>260</width>
				<include>DefInfoButtons</include>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<onup condition="Control.IsVisible(50)">SetFocus(9009)</onup>	
			</control>
			<control type="button" id ="10">
				<description>Get Thumb</description>
				<label>13405</label>
				<width>260</width>
				<include>DefInfoButtons</include>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<onup condition="Control.IsVisible(50)">SetFocus(9009)</onup>	
			</control>
			<control type="button" id="54">
				<label>37513</label>
				<onclick condition="Container.Content(songs)">RunScript(script.artwork.beef)</onclick>
				<description>Get Artwork</description>
				<include>DefInfoButtons</include>
				<onup condition="Control.IsVisible(50)">SetFocus(9009)</onup>
			</control>
		</control>	
	</include>

	<include name="DialogMusicInfoNavigationNew">
		<control type="grouplist" id="9000">
			<visible allowhiddenfocus="true">ControlGroup(9000).HasFocus() | ControlGroup(9400).HasFocus() | Control.HasFocus(50) | Control.HasFocus(9009)</visible>
			<bottom>224</bottom>
			<left>783</left>
			<right>SidePad</right>
			<include>listdimensions</include>
			<onup>50</onup>    
			<ondown>9601</ondown>     
			<orientation>horizontal</orientation>
			<control type="radiobutton" id ="8">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/play.png" />
				</include>
				<onfocus>ClearProperty(content)</onfocus>
				<onclick>PlayMedia($INFO[ListItem.FileNameAndPath])</onclick>
				<onclick>Dialog.Close(135)</onclick>
				<visible>String.IsEqual(ListItem.DBType,album) | String.IsEqual(ListItem.DBType,song)</visible>
				<onup condition="Control.IsVisible(50)">SetFocus(9009)</onup>						
			</control>
			<control type="radiobutton" id ="7">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/rating.png" />
				</include>
				<onfocus>ClearProperty(content)</onfocus>
				<textcolor>Dark4</textcolor>
				<font>Null</font>
				<visible>String.IsEqual(ListItem.DBType,album) | String.IsEqual(ListItem.DBType,song)</visible>
			</control>		
			<control type="radiobutton" id ="9019">
				<description>Trailer</description>
				<include>buttondimensionssquare</include>
				<onfocus>ClearProperty(content)</onfocus>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/set.png" />
				</include>
				<onclick>ClearProperty(tracklist)</onclick>
				<onclick>SetProperty(content,1)</onclick>
				<onclick>SetFocus(9501)</onclick>	
				<onup condition="Control.IsVisible(50)">SetFocus(9009)</onup>	
			</control>			
			<control type="radiobutton" id ="9002">
				<description>Trailer</description>
				<font>Button</font>
				<textcolor>Dark4</textcolor>
				<include>buttondimensionssquare</include>
				<onfocus>ClearProperty(content)</onfocus>
				<texturenofocus colordiffuse="Dark4" border="0">common/boxsquare.png</texturenofocus>
				<texturefocus colordiffuse="$VAR[ColorHighlight]" border="0">common/boxsquare.png</texturefocus>
				<textureradioonfocus colordiffuse="FFFFFFFF">buttonsdialogs/bio.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="FFFFFFFF">buttonsdialogs/bio.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="FFFFFFFF">buttonsdialogs/musictracklist.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="FFFFFFFF">buttonsdialogs/musictracklist.png</textureradiooffnofocus>
				<textureradiooffdisabled colordiffuse="disabled">buttonsdialogs/set.png</textureradiooffdisabled>
				<textureradioondisabled colordiffuse="disabled">buttonsdialogs/set.png</textureradioondisabled>
				<onclick condition="String.IsEmpty(Window.Property(tracklist))">SetProperty(tracklist,1)</onclick>
				<onclick condition="!String.IsEmpty(Window.Property(tracklist))">ClearProperty(tracklist)</onclick>
				<onup condition="Control.IsVisible(50)">SetFocus(9009)</onup>
				<visible>Container.Content(albums)</visible>
			</control>							
			<control type="radiobutton" id ="9003">
				<description>Trailer</description>
				<font>Button</font>
				<textcolor>Dark4</textcolor>
				<focuscolor>Dark4</focuscolor>
				<include>buttondimensionssquare</include>
				<onfocus>ClearProperty(content)</onfocus>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/youtube.png" />
				</include>
				<onclick>Close</onclick>
				<onclick>ActivateWindow(videos,plugin://plugin.video.youtube/search/?q=$INFO[ListItem.Artist],return)</onclick>
				<include>DefInfoButtons</include>
				<onup condition="Control.IsVisible(50)">SetFocus(9009)</onup>	
			</control>	
			<control type="radiobutton" id ="51">
				<description>Trailer</description>
				<font>Button</font>
				<textcolor>Dark2</textcolor>
				<include>buttondimensionssquare</include>
				<onfocus>ClearProperty(content)</onfocus>
				<texturenofocus colordiffuse="Dark4" border="0">common/boxsquare.png</texturenofocus>
				<texturefocus colordiffuse="$VAR[ColorHighlight]" border="0">common/boxsquare.png</texturefocus>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/image.png" />
				</include>
				<onclick>SetFocus(9603)</onclick>
				<visible>!String.IsEmpty(ListItem.Art(fanart))</visible>
			</control>
			<control type="radiobutton" id ="48">
				<description>Trailer</description>
				<font>Button</font>
				<textcolor>Dark2</textcolor>
				<include>buttondimensionssquare</include>
				<onfocus>ClearProperty(content)</onfocus>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/update.png" />
				</include>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<onup condition="Control.IsVisible(50)">SetFocus(9009)</onup>
				<onclick>SendClick(6)</onclick>	
			</control>	
			
			<control type="radiobutton" id ="54">
				<description>Trailer</description>
				<font>Button</font>
				<textcolor>Dark2</textcolor>
				<include>buttondimensionssquare</include>
				<onfocus>ClearProperty(content)</onfocus>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/thumb.png" />
				</include>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<onup condition="Control.IsVisible(50)">SetFocus(9009)</onup>
				<onclick>SendClick(10)</onclick>	
			</control>	
            <control type="radiobutton" id ="9010">
                <onfocus>ClearProperty(content)</onfocus>
           
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/settings.png" />
				</include>
				<onclick>SetFocus(9400)</onclick>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>				
			</control>	
		</control>		
	</include>
	
	<include name="DialogPvrInfoNavigation">
		<control type="grouplist" id="9000">
			<bottom>224</bottom>
			<left>ListSquareX</left>
			<right>SidePad</right>
			<height>68</height>
			<bottom>33</bottom>
			<itemgap>16</itemgap>
			<ondown>9000</ondown>
			<onup condition="Control.IsVisible(50)">51</onup>
			<onup condition="Control.IsVisible(9501)">9501</onup>
			<orientation>horizontal</orientation>
			<control type="button" id="4">
				<align>center</align>
				<width>260</width>
				<label>19003</label>
				<include>DefInfoButtons</include>
				<visible>Window.IsActive(PVRGuideInfo)</visible>
			</control>
			<control type="button" id="5">
				<align>center</align>
				<width>260</width>
				<label>19165</label>
				<include>DefInfoButtons</include>
				<visible>Window.IsActive(PVRGuideInfo)</visible>
			</control>
			<control type="button" id="6">
				<align>center</align>
				<width>260</width>
				<label>264</label>
				<include>DefInfoButtons</include>
				<visible>Window.IsActive(PVRGuideInfo)</visible>
			</control>
			<control type="radiobutton" id ="666">
				<align>center</align>
				<width>260</width>
				<label>37554</label>
				<include>DefInfoButtons</include>
				<onclick>Action(close)</onclick>
				<onclick>RunScript(plugin.video.iptv.recorder,$ESCINFO[ListItem.ChannelName],$ESCINFO[ListItem.Title],$ESCINFO[ListItem.Date],$ESCINFO[ListItem.Duration],$ESCINFO[ListItem.Plot])</onclick>
				<visible>System.hasAddon(plugin.video.iptv.recorder)</visible>					
			</control>
			<control type="radiobutton" id ="667">
				<align>center</align>
				<width>260</width>
				<label>37555</label>
				<include>DefInfoButtons</include>
				<onclick>Action(close)</onclick>
				<onclick>ActivateWindow(10025,&quot;plugin://plugin.video.iptv.recorder/recordings&quot;,return)</onclick>
				<visible>System.hasAddon(plugin.video.iptv.recorder)</visible>				
			</control>
			<control type="button" id="8">
				<align>center</align>
				<width>260</width>
				<label>19687</label>
				<include>DefInfoButtons</include>
				<visible>Window.IsActive(PVRGuideInfo) | Window.IsActive(PVRRecordingInfo)</visible>
			</control>
			<control type="button" id="10">
				<align>center</align>
				<width>260</width>
				<label>19190</label>
				<include>DefInfoButtons</include>
				<visible>Window.IsActive(PVRGuideInfo)</visible>
			</control>
			<control type="button" id="7">
				<align>center</align>
				<width>260</width>
				<label>186</label>
				<include>DefInfoButtons</include>
			</control>
		</control>
	</include>
	
	<include name="DialogPvrInfoNavigationNew">
		<control type="grouplist" id="9000">
			<visible allowhiddenfocus="true">ControlGroup(9000).HasFocus() | Control.HasFocus(50) | Control.HasFocus(9009)</visible>
			<bottom>224</bottom>
			<left>783</left>
			<right>SidePad</right>
			<include>listdimensions</include>
			<onup>50</onup>    
			<ondown>9601</ondown>     
			<orientation>horizontal</orientation>
			<control type="radiobutton" id ="4">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/similar.png" />
				</include>
				<visible>Window.IsActive(PVRGuideInfo)</visible>					
			</control>
			<control type="radiobutton" id ="5">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/launch.png" />
				</include>
				<visible>Window.IsActive(PVRGuideInfo)</visible>					
			</control>
			<control type="radiobutton" id ="6">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/record.png" />
				</include>
				<visible>Window.IsActive(PVRGuideInfo)</visible>					
			</control>
			<control type="radiobutton" id ="8">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/play_record.png" />
				</include>
				<visible>Window.IsActive(PVRGuideInfo) | Window.IsActive(PVRRecordingInfo)</visible>					
			</control>	
			<control type="radiobutton" id ="666">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/record.png" />
				</include>
				<onclick>Action(close)</onclick>
				<onclick>RunScript(plugin.video.iptv.recorder,$ESCINFO[ListItem.ChannelName],$ESCINFO[ListItem.Title],$ESCINFO[ListItem.Date],$ESCINFO[ListItem.Duration],$ESCINFO[ListItem.Plot])</onclick>
				<visible>System.hasAddon(plugin.video.iptv.recorder)</visible>					
			</control>
			<control type="radiobutton" id ="667">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/play_record.png" />
				</include>
				<onclick>Action(close)</onclick>
				<onclick>ActivateWindow(10025,&quot;plugin://plugin.video.iptv.recorder/recordings&quot;,return)</onclick>
				<visible>System.hasAddon(plugin.video.iptv.recorder)</visible>				
			</control>
			<control type="radiobutton" id ="10">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/play.png" />
				</include>
				<visible>Window.IsActive(PVRGuideInfo)</visible>					
			</control>
			<control type="radiobutton" id ="7">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/enabled.png" />
				</include>					
			</control>
            <control type="radiobutton" id ="9010">
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/settings.png" />
				</include>
				<onclick>SetFocus(9400)</onclick>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>				
			</control>	
		</control>		
	</include>
	
	<include name="DialogAddonInfoNavigationNew">
		<control type="grouplist" id="9000">
			<bottom>224</bottom>
			<left>783</left>
			<right>SidePad</right>
			<include>listdimensions</include>
			<ondown>9000</ondown>
			<onup condition="Control.IsVisible(50)">51</onup>
			<onup condition="Control.IsVisible(9501)">9501</onup>
			<orientation>horizontal</orientation>
			<control type="radiobutton" id ="12">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/launch.png" />
				</include>
				<textcolor>Dark4</textcolor>
				<font>Null</font>
				<visible>Control.IsEnabled(12)</visible>						
			</control>
			<control type="radiobutton" id ="6">
				<include>buttondimensionssquare</include>
				<texturenofocus colordiffuse="Dark4" border="0">common/boxsquare.png</texturenofocus>
				<texturefocus colordiffuse="$VAR[ColorHighlight]" border="0">common/boxsquare.png</texturefocus>
				<textureradioonfocus colordiffuse="FFFFFFFF">buttonsdialogs/uninstall.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="FFFFFFFF">buttonsdialogs/uninstall.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="FFFFFFFF">buttonsdialogs/install.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="FFFFFFFF">buttonsdialogs/install.png</textureradiooffnofocus>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<visible>Control.IsEnabled(6)</visible>	
				<textcolor>Dark4</textcolor>
				<font>Null</font>
				<selected>ListItem.Property(addon.isinstalled) | !Window.IsActive(addonbrowser)</selected>					
			</control>
			<control type="radiobutton" id ="7">
				<include>buttondimensionssquare</include>
				<texturenofocus colordiffuse="Dark4" border="0">common/boxsquare.png</texturenofocus>
				<texturefocus colordiffuse="$VAR[ColorHighlight]" border="0">common/boxsquare.png</texturefocus>
				<textureradioonfocus colordiffuse="FFFFFFFF">buttonsdialogs/disable.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="FFFFFFFF">buttonsdialogs/disable.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="FFFFFFFF">buttonsdialogs/enabled.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="FFFFFFFF">buttonsdialogs/enabled.png</textureradiooffnofocus>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<visible>Control.IsEnabled(7)</visible>	
				<textcolor>Dark4</textcolor>
				<font>Null</font>
				<selected>!String.StartsWith(Control.GetLabel(7),$LOCALIZE[24022]) | !Window.IsActive(addonbrowser)</selected>						
			</control>
			<control type="radiobutton" id ="9">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/configure.png" />
				</include>
				<visible>Control.IsEnabled(9)</visible>					
			</control>
			<control type="radiobutton" id ="8">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/update.png" />
				</include>
				<visible>Control.IsEnabled(8)</visible>					
			</control>
            <control type="radiobutton" id ="13">
				<include>buttondimensionssquare</include>
				<texturenofocus colordiffuse="Dark4" border="0">common/boxsquare.png</texturenofocus>
				<texturefocus colordiffuse="$VAR[ColorHighlight]" border="0">common/boxsquare.png</texturefocus>
				<textureradioonfocus colordiffuse="FFFFFFFF">buttonsdialogs/autoupdateon.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="FFFFFFFF">buttonsdialogs/autoupdateon.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="FFFFFFFF">buttonsdialogs/autoupdate.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="FFFFFFFF">buttonsdialogs/autoupdate.png</textureradiooffnofocus>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<visible>Control.IsEnabled(13)</visible>	
				<textcolor>Dark4</textcolor>
				<font>Null</font>						
			</control>
            <control type="radiobutton" id ="10">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/dependency.png" />
				</include>
				<visible>Control.IsEnabled(10)</visible>					
			</control>
            <control type="radiobutton" id ="9010">          
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/settings.png" />
				</include>
				<onclick>SetFocus(9400)</onclick>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>				
			</control>	
		</control>
	</include>	
	
	<include name="DialogAddonInfoNavigation">
		<control type="grouplist" id="9000">
			<bottom>224</bottom>
			<left>ListSquareX</left>
			<right>SidePad</right>
			<height>68</height>
			<bottom>33</bottom>
			<itemgap>16</itemgap>
			<ondown>9000</ondown>
			<onup condition="Control.IsVisible(50)">51</onup>
			<onup condition="Control.IsVisible(9501)">9501</onup>
			<orientation>horizontal</orientation>
			<control type="button" id ="12">
				<description>Launch</description>
				<label>518</label>
				<width>260</width>
				<include>DefInfoButtons</include>
				<visible>Control.IsEnabled(12)</visible>
			</control>
			<control type="button" id ="6">
				<description>Install</description>
				<label>24022</label>
				<width>260</width>
				<include>DefInfoButtons</include>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<visible>Control.IsEnabled(6)</visible>
			</control>
			<control type="button" id ="7">
				<description>Enable</description>
				<label>24021</label>
				<width>260</width>
				<include>DefInfoButtons</include>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<visible>Control.IsEnabled(7)</visible>
			</control>
			<control type="button" id ="9">
				<description>Settings</description>
				<label>24020</label>
				<width>260</width>
				<include>DefInfoButtons</include>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<visible>Control.IsEnabled(9)</visible>
			</control>
			<control type="button" id ="8">
				<description>Update</description>
				<label>24069</label>
				<width>260</width>
				<include>DefInfoButtons</include>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<visible>Control.IsEnabled(8)</visible>
			</control>
		</control>
	</include>
	
	<include name="DefInfoButtonsStartup">
		<font>Button</font>
		<textcolor>Dark2</textcolor>
		<width>200</width>
		<height>68</height>
		<onfocus>ClearProperty(content)</onfocus>
		<texturenofocus colordiffuse="Dark4" border="5">common/box.png</texturenofocus>
		<texturefocus colordiffuse="$VAR[ColorHighlight]" border="5">common/box.png</texturefocus>
		<alttexturenofocus colordiffuse="Dark4" border="5">common/box.png</alttexturenofocus>
		<alttexturefocus colordiffuse="$VAR[ColorHighlight]" border="5">common/box.png</alttexturefocus>
	</include>	
	
	<include name="ExtendedDialogVideoInfoNavigation">
		<control type="grouplist" id="9000">
			<visible allowhiddenfocus="true">ControlGroup(9000).HasFocus()</visible>
			<bottom>224</bottom>
			<left>540</left>
			<right>SidePad</right>
			<height>68</height>
			<bottom>33</bottom>
			<itemgap>16</itemgap>
			<ondown>9000</ondown>
			<onup condition="Control.IsVisible(50)">51</onup>
			<onup condition="Control.IsVisible(9501)">9501</onup>
			<orientation>horizontal</orientation>
			<control type="button" id ="8">
				<description>Play</description>
				<label>208</label>
				<include>DefInfoButtons</include>
				<visible>!String.IsEmpty(Window.Property(DBID)) + !String.IsEqual(Window.Property(Type),tvshow) + System.HasAddon(script.embuary.helper)</visible>
				<visible>String.IsEmpty(Window(home).Property(globalsearch))</visible>	
                <onclick>PlayMedia($ESCINFO[Container(1501).listitem.FileNameAndPath()])</onclick>
                <onclick>Dialog.Close(2003)</onclick>
                <onclick>Close</onclick>
			</control>
			<control type="button" id ="120">
				<description>Browse</description>
				<label>21385</label>
				<include>DefInfoButtons</include>
				<visible>!String.IsEmpty(Window.Property(DBID)) + String.IsEqual(Window.Property(Type),tvshow)</visible>
				<visible>String.IsEmpty(Window(home).Property(globalsearch))</visible>
			</control>
			<control type="button" id ="9002">
				<description>Cast</description>
				<label>206</label>
				<include>DefInfoButtons</include>
				<onclick>SetProperty(content,1000)</onclick>
				<onclick>SetFocus(1000)</onclick>
			</control>		
			<control type="button" id ="9006">
				<description>Artwork</description>
				<label>Artwork</label>
				<include>DefInfoButtons</include>
				<onclick>SetProperty(content,1350)</onclick>
				<onclick>SetFocus(1350)</onclick>
			</control> 
			<control type="button" id ="9003">
				<description>Similar</description>
				<label>31206</label>
				<include>DefInfoButtons</include>
				<onclick>SetProperty(content,150)</onclick>
				<onclick>SetFocus(150)</onclick>			
			</control>
			<control type="button" id ="9004">
				<description>Youtube</description>
				<label>$ADDON[script.extendedinfo 32118]</label>
				<include>DefInfoButtons</include>
				<onclick>SetProperty(content,350)</onclick>
				<onclick>SetFocus(350)</onclick>
			</control>
			<control type="button" id ="9005">
				<description>Crew</description>
				<label>$ADDON[script.extendedinfo 32115]</label>
				<include>DefInfoButtons</include>
				<onclick>SetProperty(content,750)</onclick>
				<onclick>SetFocus(750)</onclick>
			</control>  
		</control>
	</include>
	
	<include name="ExtendedDialogVideoInfoNavigationNew">
		<control type="grouplist" id="9000">
			<visible allowhiddenfocus="true">ControlGroup(9000).HasFocus()</visible>
			<bottom>224</bottom>
			<left>571</left>
			<right>SidePad</right>
			<include>listdimensions</include>
			<ondown>9000</ondown>
			<onup condition="Control.IsVisible(50)">51</onup>
			<onup condition="Control.IsVisible(9501)">9501</onup>
			<orientation>horizontal</orientation>	
			<control type="radiobutton" id ="8">
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/play.png" />
				</include>
				<visible>!String.IsEmpty(Window.Property(DBID)) + !String.IsEqual(Window.Property(Type),tvshow) + System.HasAddon(script.embuary.helper)</visible>
				<visible>String.IsEmpty(Window(home).Property(globalsearch))</visible>	
                <onclick>PlayMedia($ESCINFO[Container(1501).listitem.FileNameAndPath()])</onclick>
                <onclick>Dialog.Close(2003)</onclick>
                <onclick>Close</onclick>		
			</control>
			<control type="radiobutton" id ="120">
				<description>Browse</description>
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/browse.png" />
				</include>
				<visible>!String.IsEmpty(Window.Property(DBID)) + String.IsEqual(Window.Property(Type),tvshow)</visible>
				<visible>String.IsEmpty(Window(home).Property(globalsearch))</visible>				
			</control>
			<control type="radiobutton" id ="9002">
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/cast.png" />
				</include>
				<onclick>SetProperty(content,1000)</onclick>
				<onclick>SetFocus(1000)</onclick>		
			</control>
			<control type="radiobutton" id ="9006">
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/image.png" />
				</include>
				<onclick>SetProperty(content,1350)</onclick>
				<onclick>SetFocus(1350)</onclick>	
			</control>
			<control type="radiobutton" id ="9003">
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/similar.png" />
				</include>
				<onclick>SetProperty(content,150)</onclick>
				<onclick>SetFocus(150)</onclick>
			</control>
			<control type="radiobutton" id ="9004">
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/youtube.png" />
				</include>
				<onclick>SetProperty(content,350)</onclick>
				<onclick>SetFocus(350)</onclick>
			</control>
			<control type="radiobutton" id ="9005">
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/crew.png" />
				</include>
				<onclick>SetProperty(content,750)</onclick>
				<onclick>SetFocus(750)</onclick>
			</control>
		</control>
	</include>
	
	<include name="ExtendedDialogInfoNavigation">
		<control type="grouplist" id="9000">
			<visible allowhiddenfocus="true">ControlGroup(9000).HasFocus()</visible>
			<bottom>224</bottom>
			<left>540</left>
			<right>SidePad</right>
			<height>68</height>
			<bottom>33</bottom>
			<itemgap>16</itemgap>
			<ondown>9000</ondown>
			<onup condition="Control.IsVisible(50)">51</onup>
			<onup condition="Control.IsVisible(9501)">9501</onup>
			<orientation>horizontal</orientation>	
			<control type="button" id ="9006">
				<description>Artwork</description>
				<label>Artwork</label>
				<include>DefInfoButtons</include>
				<onclick>SetProperty(content,450)</onclick>
				<onclick>SetFocus(450)</onclick>			
			</control>  
			<control type="button" id ="9002">
				<description>Movies</description>
				<label>$ADDON[script.extendedinfo 32010]</label>
				<include>DefInfoButtons</include>
				<onclick>SetProperty(content,150)</onclick>
				<onclick>SetFocus(150)</onclick>
			</control>	
			<control type="button" id ="9003">
				<description>TvShows</description>
				<label>$ADDON[script.extendedinfo 32031]</label>
				<include>DefInfoButtons</include>
				<onclick>SetProperty(content,250)</onclick>
				<onclick>SetFocus(250)</onclick>
			</control>
			<control type="button" id ="9004">
				<description>Youtube</description>
				<label>$ADDON[script.extendedinfo 32118]</label>
				<include>DefInfoButtons</include>
				<onclick>SetProperty(content,350)</onclick>
				<onclick>SetFocus(350)</onclick>
			</control>
			<control type="button" id ="9005">
				<description>AsCrew</description>
				<label>$ADDON[script.extendedinfo 32115]</label>
				<include>DefInfoButtons</include>
				<onclick>SetProperty(content,550)</onclick>
				<onclick>SetFocus(550)</onclick>
			</control>  
		</control>
	</include>

	<include name="ExtendedDialogInfoNavigationNew">
		<control type="grouplist" id="9000">
			<visible allowhiddenfocus="true">ControlGroup(9000).HasFocus()</visible>
			<bottom>224</bottom>
			<left>571</left>
			<right>SidePad</right>
			<include>listdimensions</include>
			<ondown>9000</ondown>
			<onup condition="Control.IsVisible(50)">51</onup>
			<onup condition="Control.IsVisible(9501)">9501</onup>
			<orientation>horizontal</orientation>		
			<control type="radiobutton" id ="9006">
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/image.png" />
				</include>
				<onclick>SetProperty(content,450)</onclick>
				<onclick>SetFocus(450)</onclick>				
			</control>
			<control type="radiobutton" id ="9002">
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/trailer.png" />
				</include>
				<onclick>SetProperty(content,150)</onclick>
				<onclick>SetFocus(150)</onclick>				
			</control>
			<control type="radiobutton" id ="9003">
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/tvshows.png" />
				</include>
				<onclick>SetProperty(content,250)</onclick>
				<onclick>SetFocus(250)</onclick>				
			</control>
			<control type="radiobutton" id ="9004">
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/youtube.png" />
				</include>
				<onclick>SetProperty(content,350)</onclick>
				<onclick>SetFocus(350)</onclick>				
			</control>
			<control type="radiobutton" id ="9005">
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/director.png" />
				</include>
				<onclick>SetProperty(content,550)</onclick>
				<onclick>SetFocus(550)</onclick>				
			</control>
		</control>
	</include>
	
	<variable name="ListItemAudioCodec"> 
		<value condition="String.Contains(ListItem.Filenameandpath,.atmos.)">atmos</value> 
		<value condition="String.Contains(ListItem.Filenameandpath,.atmos-)">atmos</value> 
		<value condition="String.Contains(ListItem.Filenameandpath,.dts-x.)">dts-x</value> 
		<value condition="String.Contains(ListItem.Filenameandpath,.dts.x.)">dts-x</value> 
		<value condition="String.Contains(ListItem.Filenameandpath,.dtsx.)">dts-x</value> 
		<value condition="String.Contains(ListItem.Filenameandpath,.dts-x-)">dts-x</value> 
		<value condition="String.Contains(ListItem.Filenameandpath,.dts.x-)">dts-x</value> 
		<value condition="String.Contains(ListItem.Filenameandpath,.dtsx-)">dts-x</value> 
		<value>$INFO[ListItem.AudioCodec]</value> 
	</variable> 
	
	<variable name="ListItemAudioCodecPlayer"> 
		<value condition="String.Contains(Player.Filename,.atmos.)">atmos</value> 
		<value condition="String.Contains(Player.Filename,.atmos-)">atmos</value> 
		<value condition="String.Contains(Player.Filename,.dts-x.)">dts-x</value> 
		<value condition="String.Contains(Player.Filename,.dts.x.)">dts-x</value> 
		<value condition="String.Contains(Player.Filename,.dtsx.)">dts-x</value> 
		<value condition="String.Contains(Player.Filename,.dts-x-)">dts-x</value> 
		<value condition="String.Contains(Player.Filename,.dts.x-)">dts-x</value> 
		<value condition="String.Contains(Player.Filename,.dtsx-)">dts-x</value> 
		<value>$INFO[VideoPlayer.AudioCodec]</value> 
	</variable> 
	
	<variable name="LabelOSDhdr">
		<value condition="String.Contains(Player.Filenameandpath,.hdr.) | String.Contains(Player.Filenameandpath,hdr)">hdr</value> 
	</variable> 
	
	<variable name="LabelFurniturehdr">
		<value condition="String.Contains(ListItem.Filenameandpath,.hdr.) | String.Contains(ListItem.Filenameandpath,hdr)">hdr</value>
		<value condition="String.Contains(Container(9500).ListItem.Filenameandpath,.hdr.) | String.Contains(Container(9500).ListItem.Filenameandpath,hdr)">hdr</value>  
	</variable> 
	
	<include name="weatherlist">
		<control type="group">
			<height>106</height>
			<top>$PARAM[top]</top>
			<control type="image">
				<centertop>50%</centertop>
				<centerleft>17%</centerleft>
				<width>90</width>
				<height>90</height>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<texture>resource://resource.images.weathericons.default/$INFO[Window(weather).Property(Hourly.$PARAM[DayId].FanartCode),,.png]</texture>
				<visible>String.IsEmpty(Skin.String(weather.icons.path))</visible>		
			</control>
			<control type="image">
				<centertop>50%</centertop>
				<centerleft>17%</centerleft>
				<width>90</width>
				<height>90</height>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<texture>$INFO[Skin.String(weather.icons.path),,/]$INFO[Window(weather).Property(Hourly.$PARAM[DayId].FanartCode),,.png]</texture>
				<visible>!String.IsEmpty(Skin.String(weather.icons.path)) + !String.Contains(Skin.String(weather.icons.path),animated)</visible>	
			</control>
            <control type="multiimage">
                <centertop>50%</centertop>
				<centerleft>17%</centerleft>
				<width>90</width>
				<height>90</height>
                <timeperimage>50</timeperimage>
                <aspectratio align="center" aligny="center">keep</aspectratio>
                <fadetime>10</fadetime>
                <imagepath>$INFO[Skin.String(weather.icons.path),,/]$INFO[Window(weather).Property(Hourly.$PARAM[DayId].FanartCode)]</imagepath>
                <visible>!String.IsEmpty(Skin.String(weather.icons.path)) + String.Contains(Skin.String(weather.icons.path),animated) + !String.IsEmpty(Window(weather).Property(Hourly.$PARAM[DayId].FanartCode))</visible>
            </control>
			<control type="label">
				<top>5</top>
				<left>150</left>
				<right>20</right>
				<align>left</align>
				<width>150</width>
				<font>Small33</font>
				<textcolor>PanelWhite100</textcolor>
				<label>$INFO[Window.Property(Hourly.$PARAM[DayId].Time),[B],[/B]]</label>
			</control>
			<control type="label">
				<top>35</top>
				<left>150</left>
				<right>20</right>
				<align>left</align>
				<width>160</width>
				<font>Tiny</font>
				<scroll>false</scroll>
				<textcolor>PanelWhite100</textcolor>
				<label>$INFO[Window.Property(Hourly.$PARAM[DayId].Outlook)]</label>
			</control>
			<control type="label">
				<top>8</top>
				<left>20</left>
				<right>30</right>
				<align>right</align>
				<font>Medium</font>
				<textcolor>PanelWhite100</textcolor>
				<label>$INFO[Window.Property(Hourly.$PARAM[DayId].Temperature),[B],[/B]]</label>
			</control>
			<control type="label">
				<top>8</top>
				<left>20</left>
				<right>40%</right>
				<align>right</align>
				<font>Tiny</font>
				<textcolor>PanelWhite100</textcolor>
				<visible>String.IsEmpty(Window.Property(Hourly.$PARAM[DayId].Temperature))</visible>
				<label> - N/A - </label>
			</control>
		</control>
	</include>
	
	<include name="weatherlisttop">
		<width>$PARAM[weatherwidth]</width>
		<height>PosterH</height>
		<posy>PosterPad</posy>
		<left>$PARAM[weatherleft]</left>
		<control type="image">
			<width>100%</width>
			<height>100%</height>
			<texture border="5" colordiffuse="Panel">common/box.png</texture>
		</control>		
		<control type="multiimage" description="Fanart">
			<visible>!Skin.HasSetting(weather.hidefanart)</visible>
			<width>100%</width>
			<height>100%</height>
			<fadetime>600</fadetime>
			<timeperimage>12000</timeperimage>
			<randomize>true</randomize>
			<aspectratio>scale</aspectratio>
			<animation effect="fade" start="100" end="10" condition="true">Conditional</animation>
			<imagepath background="true">$INFO[Skin.String(weather.fanart.path)]$INFO[Window(Weather).Property(Hourly.$PARAM[weatherfanartcode].FanartCode)]/</imagepath>
		</control> 
        <control type="image">
			<left>0</left>
			<top>0</top>
			<right>0</right>
			<bottom>0</bottom>                          
			<texture colordiffuse="BoxNotification" border="4" background="true">common/box21.png</texture>   
			<visible>!Skin.HasSetting(thumbnails.white)</visible>                        
		</control>
	</include>
	
	<include name="weatherlistinput">
		<posy>PosterPad</posy>
		<left>SidePad</left>
		<right>SidePad</right>
		<height>PosterH</height>
		<include>Animation.Weather</include>
		<control type="image">
			<width>1760</width>
			<height>640</height>                         
			<texture colordiffuse="Box2" background="true">common/box16.png</texture>   
			<visible>!Skin.HasSetting(thumbnails.white)</visible>                        
		</control> 
		<control type="image">
			<left>1</left>
			<top>1</top>
			<right>1</right>
			<bottom>1</bottom> 
			<width>1758</width>
			<height>638</height> 
			<texture border="5" colordiffuse="Panel">common/box.png</texture>
		</control>              
		<control type="image">
			<left>1</left>
			<top>1</top>
			<right>1</right>
			<bottom>1</bottom> 
			<width>1758</width>
			<height>638</height>
			<texture>$INFO[Window.Property(Map.$PARAM[InputId].Area)]</texture>
			<aspectratio align="center" aligny="center">scale</aspectratio>
		</control>
		<control type="image">
			<left>1</left>
			<top>1</top>
			<right>1</right>
			<bottom>1</bottom> 
			<width>1758</width>
			<height>638</height>
			<texture>$INFO[Window.Property(Map.$PARAM[InputId].Layer)]</texture>
			<aspectratio align="center" aligny="center">scale</aspectratio>
			<animation type="Conditional" condition="true" reversible="false">						
				<effect type="fade" end="40" start="100" time="0"  />
			</animation>
		</control>
		<control type="label">
			<top>510</top>
			<width>1401</width>
			<height>70</height>
			<align>right</align>
			<right>12</right>
			<textcolor>B3000000</textcolor>
			<shadowcolor>white</shadowcolor>
			<font>Tiny</font>
			<label>[B]$INFO[ListItem.Label][/B]</label>
		</control>
		<control type="image">
			<top>569</top>
			<width>1401</width>
			<height>60</height>
			<right>11</right>
			<texture>$INFO[Window.Property(Map.$PARAM[InputId].Legend)]</texture>
			<aspectratio align="right" aligny="bottom">keep</aspectratio>
		</control>
	</include>
	
	<include name="weatherlistinputpagetwo">
		<control type="group">
			<width>285</width>
			<height>PosterH</height>
			<posy>PosterPad</posy>
			<left>$PARAM[weatherlistinputpagetwoleft]</left>
			<control type="image">
				<width>100%</width>
				<height>100%</height>
				<texture border="5" colordiffuse="Panel">common/box.png</texture>
			</control>			
			<control type="multiimage" description="Fanart">
				<visible>!Skin.HasSetting(weather.hidefanart) + String.Contains(Skin.String(weather.fanart.path),multi) + !String.IsEmpty(Skin.String(weather.fanart.path))</visible>
				<width>100%</width>
				<height>100%</height>
				<fadetime>600</fadetime>
				<timeperimage>12000</timeperimage>
				<randomize>true</randomize>
				<aspectratio>scale</aspectratio>
				<animation effect="fade" start="100" end="10" condition="true">Conditional</animation>
				<imagepath background="true">$INFO[Skin.String(weather.fanart.path)]$INFO[Window.Property(Daily.$PARAM[Daily].FanartCode)]/</imagepath>
			</control>
            <control type="image" description="Fanart">
				<visible>!Skin.HasSetting(weather.hidefanart) + !String.Contains(Skin.String(weather.fanart.path),multi) + !String.IsEmpty(Skin.String(weather.fanart.path))</visible>
				<width>100%</width>
				<height>100%</height>
				<aspectratio>scale</aspectratio>
				<animation effect="fade" start="100" end="10" condition="true">Conditional</animation>
				<texture background="true">$INFO[Skin.String(weather.fanart.path)]$INFO[Window.Property(Daily.$PARAM[Daily].FanartCode),,.jpg]</texture>
			</control>
			<control type="image">
				<centertop>35%</centertop>
				<centerleft>50%</centerleft>
				<width>285</width>
				<height>285</height>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<texture>$INFO[Skin.String(weather.icons.path),,/]$INFO[Window.Property(Daily.$PARAM[Daily].FanartCode),,.png]</texture>
				<visible>!String.IsEmpty(Skin.String(weather.icons.path)) + !String.Contains(Skin.String(weather.icons.path),animated)</visible>
			</control>
            <control type="multiimage">
                <centertop>35%</centertop>
				<centerleft>50%</centerleft>
				<width>285</width>
				<height>285</height>
                <timeperimage>50</timeperimage>
                <aspectratio align="center" aligny="center">keep</aspectratio>
                <fadetime>10</fadetime>
                <imagepath>$INFO[Skin.String(weather.icons.path),,/]$INFO[Window(weather).Property(Daily.$PARAM[Daily].FanartCode)]</imagepath>
                <visible>!String.IsEmpty(Skin.String(weather.icons.path)) + String.Contains(Skin.String(weather.icons.path),animated) + !String.IsEmpty(Window(weather).Property(Daily.$PARAM[Daily].FanartCode))</visible>
            </control>
			<control type="image">
				<centertop>35%</centertop>
				<centerleft>50%</centerleft>
				<width>240</width>
				<height>240</height>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<texture>resource://resource.images.weathericons.default/$INFO[Window.Property(Daily.$PARAM[Daily].FanartCode),,.png]</texture>
				<visible>String.IsEmpty(Skin.String(weather.icons.path))</visible>
			</control>
			<control type="label">
				<top>20</top>
				<left>20</left>
				<right>20</right>
				<align>center</align>
				<font>Small</font>
				<textcolor>PanelWhite100</textcolor>
				<label fallback="161">$INFO[Window.Property(Daily.$PARAM[Daily].LongDay)]</label>
			</control>
			<control type="label">
				<centertop>65%</centertop>
				<left>20</left>
				<right>20</right>
				<align>center</align>
				<font>LargeBold</font>
				<textcolor>PanelWhite100</textcolor>
				<label fallback="N/A">$INFO[Window.Property(Daily.$PARAM[Daily].HighTemperature),[B],[/B]]$INFO[Window.Property(Daily.$PARAM[Daily].lowTemperature),  ,]</label>
			</control>
			<control type="textbox">
				<top>76%</top>
				<height>130</height>
				<left>20</left>
				<right>20</right>
				<align>center</align>
				<font>Tiny</font>
				<textcolor>PanelWhite100</textcolor>
				<label fallback="161">$INFO[Window(Weather).Property(Daily.$PARAM[Daily].Outlook)]</label>
			</control>
            <control type="image">
				<left>0</left>
				<top>0</top>
				<right>0</right>
				<bottom>0</bottom>                          
				<texture colordiffuse="BoxNotification" border="4" background="true">common/box21.png</texture>   
				<visible>!Skin.HasSetting(thumbnails.white)</visible>                        
			</control>
		</control>
	</include>
	
	<include name="DialogConformButtonsNew">
		<control type="radiobutton" id="11">
			<include>buttondimensions</include>
			<label>107</label>
			<include content="buttontextures">
				<param name="icon" value="buttonsdialogs/enabled.png" />
			</include>
		</control>
		<control type="radiobutton" id="10">
			<include>buttondimensions</include>
			<label>106</label>
			<include content="buttontextures">
				<param name="icon" value="buttonsdialogs/disable.png" />
			</include>
		</control>
	</include>
	
	<include name="DialogConformButtons">
		<control type="button" id="11">
			<description>Yes</description>
			<width>320</width>
			<label>107</label>
			<font>Button</font>
			<texturefocus colordiffuse="$VAR[ColorHighlight]" border="5">common/box.png</texturefocus>
			<texturenofocus colordiffuse="Black12" border="5">common/box.png</texturenofocus>
		</control>
		<control type="button" id="10">
			<description>No</description>
			<width>320</width>
			<label>106</label>
			<font>Button</font>
			<texturefocus colordiffuse="$VAR[ColorHighlight]" border="5">common/box.png</texturefocus>
			<texturenofocus colordiffuse="Black12" border="5">common/box.png</texturenofocus>
		</control>
	</include>

    <include name="FullscreenArtwork">
		<control type="fixedlist" id="9151">
			<top>0</top>
			<visible allowhiddenfocus="true">Control.HasFocus(9603) | Control.HasFocus(9151)</visible>
			<include>Animation.FadeIn</include>
			<include>Dimensions_Fullscreen</include>
			<onright>9151</onright>
			<onleft>9151</onleft>
			<ondown>9000</ondown>
			<onback>9603</onback>
			<onup>9000</onup>
			<autoscroll time="5000">Control.HasFocus(9603)</autoscroll>
            <scrolltime tween="quadratic">300</scrolltime>
			<preloaditems>2</preloaditems>				
			<viewtype label="37518">fixedlist</viewtype>
			<orientation>horizontal</orientation>
			<itemlayout width="1920" height="1080">
				<control type="image">
					<left>0</left>
					<top>0</top>
					<include>Animation.ViHi</include>
					<include>Dimensions_Fullscreen</include>
					<texture>$INFO[ListItem.Label]</texture>
				</control>
			</itemlayout>
			<focusedlayout width="1920" height="1080">
				<control type="image">
					<left>0</left>
					<top>0</top>				
					<include>Animation.ViHi</include>
					<include>Dimensions_Fullscreen</include>
					<texture>$INFO[ListItem.Label]</texture>
				</control>
			</focusedlayout>
			<content>
				<item id="0">
					<label>$INFO[ListItem.Art(fanart)]</label>
					<visible>!String.IsEmpty(ListItem.Art(fanart))</visible>
				</item>
				<item id="1">
					<label>$INFO[ListItem.Art(fanart1)]</label>
					<visible>!String.IsEmpty(ListItem.Art(fanart1))</visible>
				</item>
				<item id="2">
					<label>$INFO[ListItem.Art(fanart2)]</label>
					<visible>!String.IsEmpty(ListItem.Art(fanart2))</visible>
				</item>	
				<item id="3">
					<label>$INFO[ListItem.Art(fanart3)]</label>
					<visible>!String.IsEmpty(ListItem.Art(fanart3))</visible>
				</item>
				<item id="4">
					<label>$INFO[ListItem.Art(fanart4)]</label>
					<visible>!String.IsEmpty(ListItem.Art(fanart4))</visible>
				</item>
				<item id="5">
					<label>$INFO[ListItem.Art(fanart5)]</label>
					<visible>!String.IsEmpty(ListItem.Art(fanart5))</visible>
				</item>
				<item id="6">
					<label>$INFO[ListItem.Art(fanart6)]</label>
					<visible>!String.IsEmpty(ListItem.Art(fanart6))</visible>
				</item>
				<item id="7">
					<label>$INFO[ListItem.Art(fanart7)]</label>
					<visible>!String.IsEmpty(ListItem.Art(fanart7))</visible>
				</item>
				<item id="8">
					<label>$INFO[ListItem.Art(fanart18)]</label>
					<visible>!String.IsEmpty(ListItem.Art(fanart8))</visible>
				</item>
				<item id="9">
					<label>$INFO[ListItem.Art(fanart9)]</label>
					<visible>!String.IsEmpty(ListItem.Art(fanart9))</visible>
				</item>
				<item id="10">
					<label>$INFO[ListItem.Art(fanart10)]</label>
					<visible>!String.IsEmpty(ListItem.Art(fanart10))</visible>
				</item>
				<item id="11">
					<label>$INFO[ListItem.Art(fanart11)]</label>
					<visible>!String.IsEmpty(ListItem.Art(fanart11))</visible>
				</item>
				<item id="12">
					<label>$INFO[ListItem.Art(tvshow.fanart)]</label>
					<visible>!String.IsEmpty(ListItem.Art(tvshow.fanart))</visible>
				</item>
				<item id="13">
					<label>$INFO[ListItem.Art(tvshow.fanart1)]</label>
					<visible>!String.IsEmpty(ListItem.Art(tvshow.fanart1))</visible>
				</item>
				<item id="14">
					<label>$INFO[ListItem.Art(tvshow.fanart2)]</label>
					<visible>!String.IsEmpty(ListItem.Art(tvshow.fanart2))</visible>
				</item>			
				<item id="15">
					<label>$INFO[ListItem.Art(tvshow.fanart3)]</label>
					<visible>!String.IsEmpty(ListItem.Art(tvshow.fanart3))</visible>
				</item>
				<item id="16">
					<label>$INFO[ListItem.Art(tvshow.fanart4)]</label>
					<visible>!String.IsEmpty(ListItem.Art(tvshow.fanart4))</visible>
				</item>
				<item id="17">
					<label>$INFO[ListItem.Art(tvshow.fanart5)]</label>
					<visible>!String.IsEmpty(ListItem.Art(tvshow.fanart5))</visible>
				</item>
				<item id="18">
					<label>$INFO[ListItem.Art(tvshow.fanart6)]</label>
					<visible>!String.IsEmpty(ListItem.Art(tvshow.fanart6))</visible>
				</item>
				<item id="19">
					<label>$INFO[ListItem.Art(tvshow.fanart7)]</label>
					<visible>!String.IsEmpty(ListItem.Art(tvshow.fanart7))</visible>
				</item>
				<item id="20">
					<label>$INFO[ListItem.Art(tvshow.fanart8)]</label>
					<visible>!String.IsEmpty(ListItem.Art(tvshow.fanart8))</visible>
				</item>
				<item id="21">
					<label>$INFO[ListItem.Art(tvshow.fanart9)]</label>
					<visible>!String.IsEmpty(ListItem.Art(tvshow.fanart9))</visible>
				</item>
				<item id="22">
					<label>$INFO[ListItem.Art(tvshow.fanart10)]</label>
					<visible>!String.IsEmpty(ListItem.Art(tvshow.fanart10))</visible>
				</item>
			</content>
		</control>
		<control type="image">
			<visible>Control.HasFocus(9151)</visible> 
			<include>Animation.FadeIn</include>
			<animation effect="fade" start="100" end="0" time="400" delay="2000" condition="Control.HasFocus(9151)">Conditional</animation>
			<bottom>70</bottom>
			<right>70</right>
			<width>48</width>
			<height>48</height>
			<texture background="true">osd/pauset.png</texture>
		</control>
		<control type="image">
			<visible>Control.HasFocus(9603)</visible> 
			<animation effect="fade" start="100" end="0" time="400" delay="2000" condition="Control.HasFocus(9603)">Conditional</animation>
			<include>Animation.FadeIn</include>
			<bottom>70</bottom>
			<right>70</right>
			<width>48</width>
			<height>48</height>
			<texture background="true">osd/play.png</texture>
		</control>
		<control type="button" id="9603">
			<width>1</width>
			<height>1</height>
			<visible allowhiddenfocus="true">false</visible>
			<onleft>SetFocus(9151)</onleft>
			<onleft>Left</onleft>
			<onright>SetFocus(9151)</onright>
			<onright>Right</onright>
			<ondown>9000</ondown>
			<onback>9000</onback>
		</control>	
	</include>
    
    
    
    <include name="DialogMusicInfoNavigationWIP">
		<control type="grouplist" id="9000">
			<bottom>144</bottom>
			<left>783</left>
			<right>SidePad</right>
			<include>listdimensions</include>
			<orientation>horizontal</orientation>
            <ondown condition="Control.HasFocus(9002) + String.IsEqual(Window.Property(ShowDisc),1) + !String.IsEmpty(ListItem.Art(discart))">ClearProperty(ShowDisc)</ondown>   
            <ondown condition="!String.IsEqual(Window.Property(ShowDisc),1)">9601</ondown>
            <onup condition="String.IsEqual(Window.Property(musiccontent),2)">9501</onup>
            <onup condition="String.IsEqual(Window.Property(musiccontent),3)">9502</onup>
            <onup condition="String.IsEqual(Window.Property(musiccontent),4)">95031</onup>
            <onup condition="String.IsEqual(Window.Property(musiccontent),1)">9009</onup>
            <onup condition="String.IsEqual(Window.Property(musiccontent),8) + Integer.IsGreater(Container(9508).NumItems,1)">9508</onup>
            <onup condition="Control.HasFocus(9002) + !String.IsEqual(Window.Property(ShowDisc),1) + !String.IsEmpty(ListItem.Art(discart))">SetProperty(ShowDisc,1)</onup>
            <onup condition="Control.HasFocus(9002) + String.IsEqual(Window.Property(ShowDisc),1) + !String.IsEmpty(ListItem.Art(discart))">ClearProperty(ShowDisc)</onup>
            <onup condition="String.IsEmpty(Window.Property(musiccontent))">9010</onup>
      
            <control type="radiobutton" id ="9001">
                <visible>[String.IsEqual(ListItem.DBType,album) | String.IsEqual(ListItem.DBType,song)] + ![ListItem.IsPlaying | [!String.IsEmpty(ListItem.FolderPath) + String.IsEqual(ListItem.FileNameAndPath,Player.Folderpath)]]</visible>	
                <onfocus>ClearProperty(musiccontent)</onfocus> 
                <onfocus>ClearProperty(ShowDisc)</onfocus> 
                <onclick condition="String.IsEqual(ListItem.DBType,song) | String.IsEmpty(ListItem.DBID)">PlayMedia($INFO[ListItem.FileNameAndPath])</onclick> 
                <onclick condition="System.HasAddon(script.playalbum) + String.IsEqual(ListItem.DBType,album)">RunScript(script.playalbum,albumid=$INFO[ListItem.DBID])</onclick>
                <onclick condition="!System.HasAddon(script.playalbum) + !String.IsEmpty(ListItem.DBID)">InstallAddon(script.playalbum)</onclick>
                <!--           
                <onclick condition="String.IsEqual(ListItem.DBType,song)">PlayMedia($INFO[ListItem.FileNameAndPath])</onclick>                
                <onclick condition="!System.HasAddon(script.playalbum) + String.IsEqual(ListItem.DBType,album) + String.IsEmpty(ListItem.FolderPath)">InstallAddon(script.playalbum)</onclick>
                <onclick condition="System.HasAddon(script.playalbum) + String.IsEqual(ListItem.DBType,album) + String.IsEmpty(ListItem.FolderPath)">RunScript(script.playalbum,albumid=$INFO[ListItem.DBID])</onclick>          		             
                <onclick condition="String.IsEqual(ListItem.DBType,album) + !String.IsEmpty(ListItem.FolderPath)">PlayMedia($INFO[ListItem.FolderPath],isdir)</onclick>-->		
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/play.png" />
				</include>			
			</control>
            
            <control type="radiobutton" id ="9201">
                <visible>[String.IsEqual(ListItem.DBType,album) | String.IsEqual(ListItem.DBType,song)] + [ListItem.IsPlaying | [!String.IsEmpty(ListItem.FolderPath) + String.IsEqual(ListItem.FileNameAndPath,Player.Folderpath)]]</visible>	
                <onfocus>ClearProperty(musiccontent)</onfocus> 
                <onfocus>ClearProperty(ShowDisc)</onfocus>                          
				<include>buttondimensionssquare</include>
                <onclick condition="Player.Playing">Pause</onclick>
                <onclick condition="!Player.Playing">Play</onclick>
				<texturenofocus colordiffuse="Dark4" border="0">common/boxsquare.png</texturenofocus>
				<texturefocus colordiffuse="$VAR[ColorHighlight]" border="0">common/boxsquare.png</texturefocus>
				<textureradioonfocus colordiffuse="FFFFFFFF">buttonsdialogs/pause.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="FFFFFFFF">buttonsdialogs/pause.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="FFFFFFFF">buttonsdialogs/continue.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="FFFFFFFF">buttonsdialogs/continue.png</textureradiooffnofocus>
				<selected>Player.Playing</selected>			
			</control>

            <!-- Info (Startseite) Button -->
            <control type="radiobutton" id ="9002">	
                <visible>!String.IsEqual(ListItem.DBType,song)</visible>
                <onfocus>ClearProperty(musiccontent)</onfocus>
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/info.png" />
				</include>						
			</control>
            
            <!-- Tracklist Button -->	
            <control type="radiobutton" id ="9003">
                <visible>String.IsEqual(ListItem.DBType,album)</visible>
                <onfocus condition="!String.IsEqual(Window.Property(musiccontent),1)">ClearProperty(musiccontent)</onfocus>
                <onfocus>ClearProperty(ShowDisc)</onfocus>
                <onclick>SetProperty(musiccontent,1)</onclick>              
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(musiccontent,1)</onfocus>
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/musictracklist.png" />
				</include>	
			</control>
            
            <!-- SETS Button -->
            <control type="radiobutton" id ="9004">
                <visible>String.IsEqual(ListItem.DBType,artist)</visible>	
                <onfocus condition="!String.IsEqual(Window.Property(musiccontent),2)">ClearProperty(musiccontent)</onfocus>
                <onfocus>ClearProperty(ShowDisc)</onfocus>
                <onclick>SetProperty(musiccontent,2)</onclick>                               
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(musiccontent,2)</onfocus>                
                <onfocus condition="!Skin.HasSetting(preloadcontent)">SetProperty(discography,1)</onfocus>
                <onclick condition="!Skin.HasSetting(preloadcontent)">SetProperty(discography,1)</onclick>                                
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/set.png" />
				</include>						
			</control>
            
            <!-- Youtube Button -->	
            <control type="radiobutton" id ="9005">
                <onfocus condition="!String.IsEqual(Window.Property(musiccontent),3)">ClearProperty(musiccontent)</onfocus>
                <onfocus>ClearProperty(ShowDisc)</onfocus>
                <onclick>SetProperty(musiccontent,3)</onclick>                              
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(musiccontent,3)</onfocus>                
                <onfocus condition="!Skin.HasSetting(preloadcontent)">SetProperty(musicyoutube,1)</onfocus>
                <onclick condition="!Skin.HasSetting(preloadcontent)">SetProperty(musicyoutube,1)</onclick> 
                
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/youtube.png" />
				</include>
			</control>
            
            <!-- Fanart Button -->	
			<control type="radiobutton" id ="9006">
                <visible>String.IsEqual(ListItem.DBType,artist)</visible>
                <onfocus condition="!String.IsEqual(Window.Property(musiccontent),4)">ClearProperty(musiccontent)</onfocus>
                <onclick>SetProperty(musiccontent,4)</onclick>              
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(musiccontent,4)</onfocus>
				<font>Button</font>
				<textcolor>Dark2</textcolor>
				<include>buttondimensionssquare</include>
				<texturenofocus colordiffuse="Dark4" border="0">common/boxsquare.png</texturenofocus>
				<texturefocus colordiffuse="$VAR[ColorHighlight]" border="0">common/boxsquare.png</texturefocus>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/image.png" />
				</include>
			</control>
            
            <!-- Rating Button -->
            <control type="radiobutton" id ="9007"> 
                <visible>!String.IsEqual(ListItem.DBType,artist) + String.IsEmpty(ListItem.UserRating)</visible>
                <include>OnFocusOnClick</include>
                <include>ClearOnFocusOnClick</include> 
                <onfocus>ClearProperty(musiccontent)</onfocus>               
                <onclick>SendClick(7)</onclick>
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/rating.png" />
				</include>
				<textcolor>Dark4</textcolor>
				<font>Null</font>
			</control>            
            <control type="radiobutton" id ="9110">
                <visible>!String.IsEqual(ListItem.DBType,artist) + !String.IsEmpty(ListItem.UserRating)</visible>
                <include>OnFocusOnClick</include> 
                <include>ClearOnFocusOnClick</include>
                <onfocus>ClearProperty(musiccontent)</onfocus>               
                <onclick>SendClick(7)</onclick>
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/rating_new.png" />
				</include>
				<textcolor>Dark4</textcolor>
				<font>Null</font>
			</control>
            
            <!-- More Of Artist Button -->	
			<control type="radiobutton" id ="9009">
                <visible>String.IsEqual(ListItem.DBType,song)</visible>
                <onfocus condition="!String.IsEqual(Window.Property(musiccontent),8)">ClearProperty(musiccontent)</onfocus>
                <onclick>SetProperty(musiccontent,8)</onclick>              
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(musiccontent,8)</onfocus>
				<font>Button</font>
				<textcolor>Dark2</textcolor>
				<include>buttondimensionssquare</include>
				<texturenofocus colordiffuse="Dark4" border="0">common/boxsquare.png</texturenofocus>
				<texturefocus colordiffuse="$VAR[ColorHighlight]" border="0">common/boxsquare.png</texturefocus>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/more.png" />
				</include>
			</control>
            
            <!-- Setting Button -->
            <control type="radiobutton" id ="9008"> 
                <onfocus>ClearProperty(musiccontent)</onfocus>                           
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/manage.png" />
				</include>
                <onclick>SetFocus(9400)</onclick>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
			</control>		
		</control>		
	</include>
    
    
    <include name="DialogVideoInfoNavigationWIP">
		<control type="grouplist" id="9000">			
			<visible>true</visible>
			<bottom>224</bottom>
			<left>568</left>
			<right>83</right>
			<include>listdimensions</include> 
            <ondown condition="String.IsEqual(Window.Property(moviecontent),1) + String.IsEqual(Window.Property(ShowDisc),1) + String.IsEqual(ListItem.DBType,movie) + !String.IsEmpty(ListItem.Art(discart))">ClearProperty(ShowDisc)</ondown>   
            <ondown condition="!String.IsEqual(Window.Property(ShowDisc),1)">9601</ondown>
            <onfocus>SetProperty(test,1,Home)</onfocus>     
			<orientation>horizontal</orientation>
            
            <onup condition="String.IsEqual(Window.Property(moviecontent),2)">9502</onup>
            <onup condition="String.IsEqual(Window.Property(moviecontent),3)">9503</onup>
            <onup condition="String.IsEqual(Window.Property(moviecontent),4)">9504</onup>
            <onup condition="String.IsEqual(Window.Property(moviecontent),5)">95051</onup>
            <onup condition="String.IsEqual(Window.Property(moviecontent),6)">7011</onup>
            <!--<onup condition="String.IsEqual(Window.Property(moviecontent),1) + String.IsEqual(ListItem.DBType,movie) + !String.IsEmpty(ListItem.Art(discart))">9607</onup>-->
            <onup condition="String.IsEqual(Window.Property(moviecontent),1) + !String.IsEqual(Window.Property(ShowDisc),1) + String.IsEqual(ListItem.DBType,movie) + !String.IsEmpty(ListItem.Art(discart))">SetProperty(ShowDisc,1)</onup>
            <onup condition="String.IsEqual(Window.Property(moviecontent),1) + String.IsEqual(Window.Property(ShowDisc),1) + String.IsEqual(ListItem.DBType,movie) + !String.IsEmpty(ListItem.Art(discart))">ClearProperty(ShowDisc)</onup>
            <onup condition="String.IsEmpty(Window.Property(moviecontent))">50</onup>
            
			<control type="radiobutton" id ="8">
                <onfocus>ClearProperty(moviecontent)</onfocus>
                <onfocus>ClearProperty(ShowDisc)</onfocus>
				<onclick>Dialog.Close(1132)</onclick>                           
				<include>buttondimensions</include>
				<texturenofocus colordiffuse="Dark4" border="0">common/boxsquare.png</texturenofocus>
				<texturefocus colordiffuse="$VAR[ColorHighlight]" border="0">common/boxsquare.png</texturefocus>
				<textureradioonfocus colordiffuse="FFFFFFFF">buttonsdialogs/continue.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="FFFFFFFF">buttonsdialogs/continue.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="FFFFFFFF">buttonsdialogs/play.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="FFFFFFFF">buttonsdialogs/play.png</textureradiooffnofocus>
				<selected>ListItem.IsResumable</selected>
                <visible>!ListItem.IsPlaying</visible>				
			</control> 
            
            <control type="radiobutton" id ="9201">
                <onfocus>ClearProperty(moviecontent)</onfocus>
                <onfocus>ClearProperty(ShowDisc)</onfocus>                           
				<include>buttondimensions</include>
                <onclick condition="Player.Playing">Pause</onclick>
                <onclick condition="!Player.Playing">Play</onclick>
				<texturenofocus colordiffuse="Dark4" border="0">common/boxsquare.png</texturenofocus>
				<texturefocus colordiffuse="$VAR[ColorHighlight]" border="0">common/boxsquare.png</texturefocus>
				<textureradioonfocus colordiffuse="FFFFFFFF">buttonsdialogs/pause.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="FFFFFFFF">buttonsdialogs/pause.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="FFFFFFFF">buttonsdialogs/continue.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="FFFFFFFF">buttonsdialogs/continue.png</textureradiooffnofocus>
				<selected>Player.Playing</selected>
                <visible>ListItem.IsPlaying</visible>				
			</control> 

			<control type="radiobutton" id ="9001">
                <visible>String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow)</visible>                
                <onfocus condition="!String.IsEqual(Window.Property(moviecontent),1)">ClearProperty(moviecontent)</onfocus> 
                <onclick>SetProperty(moviecontent,1)</onclick>
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(moviecontent,1)</onfocus>                              
				<include>buttondimensions</include>               
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/info.png" />
				</include>										
			</control>
            
            <!-- IMDB Trailer, only movies -->
            <control type="radiobutton" id ="1235">
                <onfocus>ClearProperty(moviecontent)</onfocus> 
                <onfocus>ClearProperty(ShowDisc)</onfocus>                             
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/trailer.png" />
				</include>
				<visible>!String.IsEmpty(ListItem.IMDBNumber) + Skin.HasSetting(Use.IMDB.Trailer) + System.HasAddon(plugin.video.imdb.trailers) + !Skin.HasSetting(PlayTrailerWindowed)</visible>	
                <onclick>Dialog.Close(2003)</onclick>
                <onclick>PlayMedia(plugin://plugin.video.imdb.trailers/?action=play_id&amp;imdb=$INFO[ListItem.IMDBNumber])</onclick>			
			</control> 
            
            <!-- Youtube Trailer, no TV Shows -->
            <control type="radiobutton" id ="11">
                <onfocus>ClearProperty(moviecontent)</onfocus> 
                <onfocus>ClearProperty(ShowDisc)</onfocus>                             
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/trailer.png" />
				</include>
				<visible>[!String.IsEmpty(ListItem.Trailer) + !Skin.HasSetting(PlayTrailerWindowed)] + !Skin.HasSetting(Use.IMDB.Trailer) + !String.IsEqual(ListItem.DBType,tvshow)</visible>			
			</control>
            
            <!-- Youtube Trailer, only TV Shows, Bingie -->
            <control type="radiobutton" id ="1998">
                <onfocus>ClearProperty(moviecontent)</onfocus> 
                <onfocus>ClearProperty(ShowDisc)</onfocus>                             
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/trailer.png" />
				</include>
				<visible>String.IsEqual(ListItem.DBType,tvshow) + System.HasAddon(script.bingie.helper) + !Skin.HasSetting(PlayTrailerWindowed)</visible>	
                <onclick condition="String.IsEqual(ListItem.DBType,tvshow) + System.HasAddon(script.bingie.helper)">RunScript(script.bingie.helper,action=playtrailer,MODE=fullscreen,title=$INFO[ListItem.Title,, $LOCALIZE[36902]],local=true)</onclick>	
                <onclick>Dialog.Close(2003,force)</onclick>		
			</control>
            
            <!-- Trailer Windowed, Mixed -->
			<control type="radiobutton" id ="1223">
                <onfocus condition="!String.IsEqual(Window.Property(moviecontent),6)">ClearProperty(moviecontent)</onfocus>
                <onfocus>ClearProperty(ShowDisc)</onfocus>              
                <onclick>SetProperty(moviecontent,6)</onclick>                
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(moviecontent,6)</onfocus>                   
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/trailer.png" />
				</include>
				<visible>[!String.IsEmpty(ListItem.Trailer) + Skin.HasSetting(PlayTrailerWindowed) + !Skin.HasSetting(Use.IMDB.Trailer)] | [Skin.HasSetting(PlayTrailerWindowed) + Skin.HasSetting(Use.IMDB.Trailer) + !String.IsEmpty(ListItem.IMDBNumber) + System.HasAddon(plugin.video.imdb.trailers)] | [Skin.HasSetting(PlayTrailerWindowed) + System.HasAddon(script.bingie.helper) + String.IsEqual(ListItem.DBType,tvshow)]</visible>	
				<onclick condition="!Skin.HasSetting(Use.IMDB.Trailer) + !String.IsEqual(ListItem.DBType,tvshow)">PlayMedia($INFO[ListItem.Trailer],1)</onclick>
                <onclick condition="Skin.HasSetting(Use.IMDB.Trailer) + !String.IsEqual(ListItem.DBType,tvshow)">PlayMedia(plugin://plugin.video.imdb.trailers/?action=play_id&amp;imdb=$INFO[ListItem.IMDBNumber],1)</onclick>		        <onclick condition="String.IsEqual(ListItem.DBType,tvshow) + System.HasAddon(script.bingie.helper)">RunScript(script.bingie.helper,action=playtrailer,MODE=windowed,title=$INFO[ListItem.Title,, $LOCALIZE[36902]],local=true)</onclick>
			</control>	
            
            
            
            
            
            
            <control type="radiobutton" id ="7">
                <onfocus>ClearProperty(moviecontent)</onfocus>
                <onfocus>ClearProperty(ShowDisc)</onfocus>
                <include>OnFocusOnClick</include> 
                <include>ClearOnFocusOnClick</include>           
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/rating.png" />
				</include>
				<visible>Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes)</visible>
				<visible>Control.IsEnabled(7) + String.IsEmpty(ListItem.UserRating)</visible>
			</control>	
            
            <control type="radiobutton" id ="9110">
                <onfocus>ClearProperty(moviecontent)</onfocus>
                <onfocus>ClearProperty(ShowDisc)</onfocus>
                <include>OnFocusOnClick</include>
                <include>ClearOnFocusOnClick</include> 
                <onclick>SendClick(7)</onclick>              
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/rating_new.png" />
				</include>
				<visible>Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes)</visible>
				<visible>Control.IsEnabled(7) + !String.IsEmpty(ListItem.UserRating)</visible>
			</control>

            <control type="radiobutton" id ="1236">
                <onfocus>ClearProperty(moviecontent)</onfocus>
                <onfocus>ClearProperty(ShowDisc)</onfocus>
                <include>OnFocusOnClick</include> 
                <include>ClearOnFocusOnClick</include>           
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/more.png" />
				</include>
				<visible>System.HasAddon(plugin.video.specialfeatures)</visible>
                <visible>String.IsEqual(Window(home).Property(SpecialFeatures.Visible),true)</visible>
                <onclick>Action(close)</onclick>
                <onclick>RunScript(plugin.video.specialfeatures,listitem)</onclick>
			</control>            	
            
			<control type="radiobutton" id ="9002">
                <visible>String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow)</visible>
                <onfocus condition="!String.IsEqual(Window.Property(moviecontent),2)">ClearProperty(moviecontent)</onfocus>               
                <onclick>SetProperty(moviecontent,2)</onclick>
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(moviecontent,2)</onfocus>                
                <onfocus condition="!Skin.HasSetting(preloadcontent)">SetProperty(videosimilar,1)</onfocus>
                <onclick condition="!Skin.HasSetting(preloadcontent)">SetProperty(videosimilar,1)</onclick>                  
                <include>buttondimensions</include>                         
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/similar.png" />
				</include>									
			</control>
            
            <control type="radiobutton" id ="9003">
                <visible>String.IsEqual(ListItem.DBType,movie)</visible>
                <onfocus condition="!String.IsEqual(Window.Property(moviecontent),3)">ClearProperty(moviecontent)</onfocus>                
                <onclick>SetProperty(moviecontent,3)</onclick>
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(moviecontent,3)</onfocus>                
                <onfocus condition="!Skin.HasSetting(preloadcontent)">SetProperty(videostudio,1)</onfocus>
                <onclick condition="!Skin.HasSetting(preloadcontent)">SetProperty(videostudio,1)</onclick>                
                <include>buttondimensions</include>
                <include content="buttontextures">
					<param name="icon" value="buttonsdialogs/studio.png" />
				</include>					
			</control>
            
            <control type="radiobutton" id ="9004">
                <visible>String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow)</visible>
                <onfocus condition="!String.IsEqual(Window.Property(moviecontent),4)">ClearProperty(moviecontent)</onfocus>               
                <onclick>SetProperty(moviecontent,4)</onclick>
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(moviecontent,4)</onfocus>                
                <onfocus condition="!Skin.HasSetting(preloadcontent)">SetProperty(videoyoutube,1)</onfocus>
                <onclick condition="!Skin.HasSetting(preloadcontent)">SetProperty(videoyoutube,1)</onclick>               
				<include>buttondimensions</include>                       
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/youtube.png" />
				</include>
			</control>
            
            <control type="radiobutton" id ="9005">
                <onfocus condition="!String.IsEqual(Window.Property(moviecontent),5)">ClearProperty(moviecontent)</onfocus>
                <visible>!String.IsEmpty(ListItem.Art(fanart))</visible>                
                <onclick>SetProperty(moviecontent,5)</onclick>
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(moviecontent,5)</onfocus>                                              
				<include>buttondimensions</include>               
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/image.png" />
				</include>
    		</control>	            	
            
            <control type="radiobutton" id="49">
                <onfocus>ClearProperty(moviecontent)</onfocus>                                 
				<description>Home Theatre</description>
                <include>buttondimensions</include>
                <include content="buttontextures">
					<param name="icon" value="buttonsdialogs/cinema.png" />
				</include>
				<onclick>RunScript(script.cinemavision,experience)</onclick>
				<visible>System.HasAddon(script.cinemavision) + [Container.Content(movies) | Container.Content(tvshows) | Container.Content(episodes)]</visible>
			</control> 			

            <control type="radiobutton" id ="9010">
                <onfocus>ClearProperty(moviecontent)</onfocus>           
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/manage.png" />
				</include>
                <onclick>SetFocus(9400)</onclick>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
			</control>
		</control>	
	</include>	
       
    <include name="ExtendedDialogInfoNavigationWIP">
		<control type="grouplist" id="9000">			
			<bottom>224</bottom>
			<left>571</left>
			<right>SidePad</right>
			<include>listdimensions</include>
			<ondown>9601</ondown>
			<onup condition="Control.IsVisible(50)">51</onup>
			<onup condition="Control.IsVisible(9501)">9501</onup>
            <onup condition="Control.IsVisible(10052)">10052</onup>
            <onup condition="Control.IsVisible(10053)">10053</onup>
            <onup condition="Control.IsVisible(10054)">10054</onup>
			<orientation>horizontal</orientation>		
			<control type="radiobutton" id ="9001">
                <onfocus>ClearProperty(actinfo)</onfocus>              
                <onup>10054</onup>
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/thumb.png" />
				</include>			
			</control>
            
			<control type="radiobutton" id ="9002">
                <onfocus condition="!String.IsEqual(Window.Property(actinfo),1)">ClearProperty(actinfo)</onfocus>
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(actinfo,1)</onfocus>
                <onclick>SetProperty(actinfo,1)</onclick>
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/trailer.png" />
				</include>				
			</control>
            
			<control type="radiobutton" id ="9003">
                <onfocus condition="!String.IsEqual(Window.Property(actinfo),2)">ClearProperty(actinfo)</onfocus>    
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(actinfo,2)</onfocus>
                <onclick>SetProperty(actinfo,2)</onclick>
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/tvshows.png" />
				</include>								
			</control>
            <control type="radiobutton" id ="9007">
                <onfocus>ClearProperty(actinfo)</onfocus>            
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/settings.png" />
				</include>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<onclick condition="System.HasAddon(script.embuary.info)">Addon.OpenSettings(script.embuary.info)</onclick>  
			</control>
		</control>
	</include>


    <include name="ExtendedDialogInfoNavigationVideoWIP">
		<control type="grouplist" id="9000">
            <onup condition="String.IsEqual(Window.Property(videoinfo),1">10053</onup>
			<onup condition="String.IsEqual(Window.Property(videoinfo),2)">10054</onup>
            <onup condition="String.IsEqual(Window.Property(videoinfo),3)">10055</onup>
            <onup condition="String.IsEqual(Window.Property(videoinfo),4)">10056</onup>
            <onup condition="String.IsEqual(Window.Property(videoinfo),5)">10058</onup>
            <onup condition="String.IsEqual(Window.Property(videoinfo),6)">10057</onup>
            <onup condition="String.IsEmpty(Window.Property(videoinfo))">10052</onup>
            
			<bottom>224</bottom>
			<left>571</left>
			<right>SidePad</right>
			<include>listdimensions</include>
			<ondown>9601</ondown>
			<orientation>horizontal</orientation>
            <control type="radiobutton" id ="8">
                <onfocus>ClearProperty(videoinfo)</onfocus>
                <visible>[!String.IsEmpty(Container(10051).ListItem.DBID) + !String.IsEmpty(Container(10051).ListItem.Property(file)) + !String.IsEqual(Container(10051).ListItem.Property(call),tv)] | [!String.IsEmpty(Container(10051).ListItem.DBID) + String.IsEqual(Container(10051).ListItem.Property(call),tv)]</visible>

                <onclick condition="[!String.IsEmpty(Container(10051).ListItem.DBID) + !String.IsEmpty(Container(10051).ListItem.Property(file)) + !String.IsEqual(Container(10051).ListItem.Property(call),tv)]">PlayMedia($INFO[Container(10051).ListItem.Property(file)])</onclick>                
                <onclick condition="!Window.IsVisible(MyVideoNav.xml) + [!String.IsEmpty(Container(10051).ListItem.DBID) + String.IsEqual(Container(10051).ListItem.Property(call),tv)]">ActivateWindow(videos,videodb://tvshows/titles/$INFO[Container(10051).ListItem.DBID]/,return)</onclick>
                <onclick condition="Window.IsVisible(MyVideoNav.xml) + [!String.IsEmpty(Container(10051).ListItem.DBID) + String.IsEqual(Container(10051).ListItem.Property(call),tv)]">Container.Update(videodb://tvshows/titles/$INFO[Container(10051).ListItem.DBID]/)</onclick>               
                <onclick>Dialog.Close(all)</onclick>
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/play.png" />
				</include>		
			</control>

			<control type="radiobutton" id ="9001">
                <onfocus>ClearProperty(videoinfo)</onfocus>                        
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/cast.png" />
				</include>				
			</control>
            
			<control type="radiobutton" id ="9002">
                <onfocus condition="!String.IsEqual(Window.Property(videoinfo),1)">ClearProperty(videoinfo)</onfocus>      
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(videoinfo,1)</onfocus>            
                <onclick>SetProperty(videoinfo,1)</onclick>                       
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/similar.png" />
				</include>				
			</control>
            
			<control type="radiobutton" id ="9003">
                <onfocus condition="!String.IsEqual(Window.Property(videoinfo),2)">ClearProperty(videoinfo)</onfocus> 
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(videoinfo,2)</onfocus>
                <onclick>SetProperty(videoinfo,2)</onclick>           
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/youtube.png" />
				</include>								
			</control>
            
            <control type="radiobutton" id ="9005">
                <onfocus condition="!String.IsEqual(Window.Property(videoinfo),4)">ClearProperty(videoinfo)</onfocus>                
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(videoinfo,4)</onfocus>  
                <onclick>SetProperty(videoinfo,4)</onclick>                         
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/crew.png" />
				</include>								
			</control>
            
            <control type="radiobutton" id ="9006">
                <visible>Integer.IsGreater(Container(10058).NumItems,0)</visible>
                <onfocus condition="!String.IsEqual(Window.Property(videoinfo),5)">ClearProperty(videoinfo)</onfocus>                
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(videoinfo,5)</onfocus>  
                <onclick>SetProperty(videoinfo,5)</onclick>                         
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/seasons.png" />
				</include>								
			</control>
            
            <control type="radiobutton" id ="9008">
                <visible>Integer.IsGreater(Container(10057).NumItems,0)</visible>
                <onfocus condition="!String.IsEqual(Window.Property(videoinfo),6)">ClearProperty(videoinfo)</onfocus>                
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(videoinfo,6)</onfocus>  
                <onclick>SetProperty(videoinfo,6)</onclick>                         
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/set.png" />
				</include>								
			</control>
            
            <control type="radiobutton" id ="9004">
                <onfocus condition="!String.IsEqual(Window.Property(videoinfo),3)">ClearProperty(videoinfo)</onfocus>                
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(videoinfo,3)</onfocus>     
                <onclick>SetProperty(videoinfo,3)</onclick>               
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/image.png" />
				</include>								
			</control>
            
            <control type="radiobutton" id ="9007">
                <onfocus>ClearProperty(videoinfo)</onfocus>            
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/settings.png" />
				</include>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<onclick condition="System.HasAddon(script.embuary.info)">Addon.OpenSettings(script.embuary.info)</onclick>  
			</control>
		</control>
	</include>
    
    <include name="DialogMovieSetsInfoNavigationWIP">
		<control type="grouplist" id="9000">
			<bottom>224</bottom>
			<left>570</left>
			<right>160</right>
			<include>listdimensions</include>  
            
            <onup condition="String.IsEqual(Window.Property(setsinfo),2)">95051</onup>
            <onup condition="String.IsEmpty(Window.Property(setsinfo))">9502</onup>
             
			<ondown>9601</ondown>     
			<orientation>horizontal</orientation>
			<control type="radiobutton" id ="9001">
                <onfocus>ClearProperty(setsinfo)</onfocus>
                <onclick>Dialog.Close(all,force)</onclick>
                <onclick>PlayMedia($INFO[ListItem.FolderPath],isdir)</onclick>
				<description>Play</description>
				<font>Button</font>
				<textcolor>Dark2</textcolor>
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/play.png" />
				</include>
                <oninfo>Close</oninfo>					
			</control>
            
            <control type="radiobutton" id ="9018">
                <onfocus>ClearProperty(setsinfo)</onfocus>
				<description>Play</description>
				<font>Button</font>
				<textcolor>Dark2</textcolor>
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/info.png" />
				</include>
                <oninfo>Close</oninfo>					
			</control>
            
			<control type="radiobutton" id ="9005">
                <visible>!String.IsEmpty(ListItem.Art(fanart))</visible>
                <onfocus condition="!String.IsEqual(Window.Property(setsinfo),2)">ClearProperty(setsinfo)</onfocus>               
                <onclick condition="!Skin.HasSetting(wipinfo)">SetFocus(95051)</onclick>	
                <onclick>SetProperty(setsinfo,2)</onclick>                
                <onfocus condition="!Skin.HasSetting(dontclickonfocus)">SetProperty(setsinfo,2)</onfocus>
				<font>Button</font>
				<textcolor>Dark2</textcolor>
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/image.png" />
				</include>
                <oninfo>Close</oninfo>
			</control>			

            <control type="radiobutton" id ="9007">
                <onfocus>ClearProperty(setsinfo)</onfocus>            
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/manage.png" />
				</include>
                <onclick>SetFocus(9400)</onclick>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
                <oninfo>Close</oninfo>
			</control>	
		</control>		
	</include>

    <include name="DialogAddonInfoNavigationWIP">
		<control type="grouplist" id="9000">
			<bottom>224</bottom>
			<left>783</left>
			<right>SidePad</right>
			<include>listdimensions</include>
			<ondown>9601</ondown>
			<onup condition="Control.IsVisible(50)">50</onup>
			<orientation>horizontal</orientation>
			<control type="radiobutton" id ="12">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/launch.png" />
				</include>
				<textcolor>Dark4</textcolor>
				<font>Null</font>
				<visible>Control.IsEnabled(12)</visible>						
			</control>
			<control type="radiobutton" id ="6">
				<include>buttondimensionssquare</include>
				<texturenofocus colordiffuse="Dark4" border="0">common/boxsquare.png</texturenofocus>
				<texturefocus colordiffuse="$VAR[ColorHighlight]" border="0">common/boxsquare.png</texturefocus>
				<textureradioonfocus colordiffuse="FFFFFFFF">buttonsdialogs/uninstall.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="FFFFFFFF">buttonsdialogs/uninstall.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="FFFFFFFF">buttonsdialogs/install.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="FFFFFFFF">buttonsdialogs/install.png</textureradiooffnofocus>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<visible>Control.IsEnabled(6)</visible>	
				<textcolor>Dark4</textcolor>
				<font>Null</font>
				<selected>ListItem.Property(addon.isinstalled) | !Window.IsActive(addonbrowser)</selected>					
			</control>
			<control type="radiobutton" id ="7">
				<include>buttondimensionssquare</include>
				<texturenofocus colordiffuse="Dark4" border="0">common/boxsquare.png</texturenofocus>
				<texturefocus colordiffuse="$VAR[ColorHighlight]" border="0">common/boxsquare.png</texturefocus>
				<textureradioonfocus colordiffuse="FFFFFFFF">buttonsdialogs/disable.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="FFFFFFFF">buttonsdialogs/disable.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="FFFFFFFF">buttonsdialogs/enabled.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="FFFFFFFF">buttonsdialogs/enabled.png</textureradiooffnofocus>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<visible>Control.IsEnabled(7)</visible>	
				<textcolor>Dark4</textcolor>
				<font>Null</font>
				<selected>!String.StartsWith(Control.GetLabel(7),$LOCALIZE[24022]) | !Window.IsActive(addonbrowser)</selected>						
			</control>
			<control type="radiobutton" id ="9">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/configure.png" />
				</include>
				<visible>Control.IsEnabled(9)</visible>					
			</control>
			<control type="radiobutton" id ="8">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/update.png" />
				</include>
				<visible>Control.IsEnabled(8)</visible>					
			</control>
            <control type="radiobutton" id ="13">
				<include>buttondimensionssquare</include>
				<texturenofocus colordiffuse="Dark4" border="0">common/boxsquare.png</texturenofocus>
				<texturefocus colordiffuse="$VAR[ColorHighlight]" border="0">common/boxsquare.png</texturefocus>
				<textureradioonfocus colordiffuse="FFFFFFFF">buttonsdialogs/autoupdateon.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="FFFFFFFF">buttonsdialogs/autoupdateon.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="FFFFFFFF">buttonsdialogs/autoupdate.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="FFFFFFFF">buttonsdialogs/autoupdate.png</textureradiooffnofocus>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>
				<visible>Control.IsEnabled(13)</visible>	
				<textcolor>Dark4</textcolor>
				<font>Null</font>						
			</control>
            <control type="radiobutton" id ="10">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/dependency.png" />
				</include>
				<visible>Control.IsEnabled(10)</visible>					
			</control>
            <!--<control type="radiobutton" id ="9010">          
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/settings.png" />
				</include>
				<onclick condition="!Skin.HasSetting(wipinfo)">ActivateWindow(1204)</onclick>
                <onclick condition="Skin.HasSetting(wipinfo)">ActivateWindow(1209)</onclick>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>				
			</control>	-->
		</control>
	</include>
    
    <include name="DialogPVRInfoNavigationWIP">
		<control type="grouplist" id="9000">
			<bottom>224</bottom>
			<left>783</left>
			<right>SidePad</right>
			<include>listdimensions</include>
			<onup>50</onup>    
			<ondown>9601</ondown>     
			<orientation>horizontal</orientation>
			<control type="radiobutton" id ="4">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/similar.png" />
				</include>
				<visible>Window.IsActive(PVRGuideInfo)</visible>					
			</control>
			<control type="radiobutton" id ="5">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/launch.png" />
				</include>
				<visible>Window.IsActive(PVRGuideInfo)</visible>					
			</control>
			<control type="radiobutton" id ="6">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/record.png" />
				</include>
				<visible>Window.IsActive(PVRGuideInfo)</visible>					
			</control>
			<control type="radiobutton" id ="8">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/play_record.png" />
				</include>
				<visible>Window.IsActive(PVRGuideInfo) | Window.IsActive(PVRRecordingInfo)</visible>					
			</control>	
			<control type="radiobutton" id ="666">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/record.png" />
				</include>
				<onclick>Action(close)</onclick>
				<onclick>RunScript(plugin.video.iptv.recorder,$ESCINFO[ListItem.ChannelName],$ESCINFO[ListItem.Title],$ESCINFO[ListItem.Date],$ESCINFO[ListItem.Duration],$ESCINFO[ListItem.Plot])</onclick>
				<visible>System.hasAddon(plugin.video.iptv.recorder)</visible>					
			</control>
			<control type="radiobutton" id ="667">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/play_record.png" />
				</include>
				<onclick>Action(close)</onclick>
				<onclick>ActivateWindow(10025,&quot;plugin://plugin.video.iptv.recorder/recordings&quot;,return)</onclick>
				<visible>System.hasAddon(plugin.video.iptv.recorder)</visible>				
			</control>
			<control type="radiobutton" id ="10">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/play.png" />
				</include>
				<visible>Window.IsActive(PVRGuideInfo)</visible>					
			</control>
			<control type="radiobutton" id ="7">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/enabled.png" />
				</include>					
			</control>
            <!--<control type="radiobutton" id ="9010">          
				<include>buttondimensions</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/settings.png" />
				</include>
				<onclick condition="!Skin.HasSetting(wipinfo)">ActivateWindow(1204)</onclick>
                <onclick condition="Skin.HasSetting(wipinfo)">ActivateWindow(1209)</onclick>
				<visible>!Skin.HasSetting(global.kioskmode)</visible>				
			</control>	-->
		</control>		
	</include>
    
    <include name="ArrowsNavigation">
        <control type="group">
            <include>Animation.DelayFadeIn</include>
            <visible>Integer.IsGreater(Container(9000).NumItems,8) + ControlGroup(9000).HasFocus()</visible>
            <centerbottom>257</centerbottom>
            <height>16</height>
            <control type="image">
                <centerleft>550</centerleft>
                <width>16</width>
                <height>16</height>
                <texture colordiffuse="Dark1" flipx="true">common/arrow-small-right.png</texture>
            </control>
            <control type="image">
                <centerright>68</centerright>
                <width>16</width>
                <height>16</height>
                <texture colordiffuse="Dark1" flipx="false">common/arrow-small-right.png</texture>
            </control>
        </control>
    </include>
    
    <include name="DialogVideoInfoHeader">
        <control type="label">
            <font>LargeNew</font>
            <description>Header Label</description>
            <textcolor>Dark1</textcolor>
            <label>$VAR[LabelWIPDialogVideoInfoHeader]</label>
        </control>
        <control type="label">
            <top>55</top>
            <height>36</height>
            <font>Tiny</font>
            <textcolor>Dark1</textcolor>                      
            <label fallback="19055">$VAR[LabelWIPDialogVideoInfoTagline]</label>
            <aligny>center</aligny>
        </control>
    </include>
    
    <include name="Custom_MovieSetsHeader">
        <control type="label">
            <top>-120</top>
            <left>0</left>
            <font>LargeNew</font>
            <description>Header Label</description>
            <textcolor>Dark1</textcolor>
            <include>DefDialogInfoHeader</include>
            <label>$VAR[LabelMovieSetsDialogInfo]</label>
        </control>	
        <control type="label">
            <top>-65</top>
            <height>36</height>
            <font>Tiny</font>
            <textcolor>Dark2</textcolor>
            <label>$INFO[Container(9502).NumItems,, / ]$INFO[Window(Home).Property(SkinHelper.ListItem.Totalmovies),, $LOCALIZE[37542]]</label>
            <aligny>center</aligny>
        </control>
    </include>
    
    <include name="ExtendedImage">
        <control type="button" id="$PARAM[buttonid]">		
			<left>-1000</left>
			<width>1</width>
			<height>1</height>
			<label></label>
			<font></font>
			<texturenofocus></texturenofocus>
			<texturefocus></texturefocus>          
			<onleft>SetFocus($PARAM[containerid])</onleft>
            <onleft>LEFT</onleft>
            <onleft>SetFocus($PARAM[buttonid])</onleft>
			<onright>SetFocus($PARAM[containerid])</onright>
			<onright>RIGHT</onright>
            <onright>SetFocus($PARAM[buttonid])</onright>
            <ondown>Close</ondown>
		</control>        
        <control type="group">		
			<visible>Control.HasFocus($PARAM[buttonid])</visible>			
			<animation effect="fade" end="100" start="20" time="200" tween="sine" easing="in">Visible</animation>
			<animation effect="fade" end="0" start="100" time="200" tween="sine" easing="in">Hidden</animation>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>1920</width>
				<height>1080</height>
				<texture>common/black.png</texture>
			</control>
			<control type="image">
				<height>1080</height>	
                <fadetime>400</fadetime>	
				<aspectratio align="center">keep</aspectratio>
				<texture background="true">$INFO[Container($PARAM[containerid]).ListItem.Art(thumb)]</texture>
			</control>			
		</control> 
    </include> 
    
    <include name="DialogGTOInfoNavigationWIP">
		<control type="grouplist" id="9000">
			<bottom>224</bottom>
			<left>783</left>
			<right>SidePad</right>
			<include>listdimensions</include>   
			<orientation>horizontal</orientation>
			<control type="radiobutton" id ="20">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/timer.png" />
				</include>
				<visible>!IsEmpty(Window(Home).Property(GTO.Info.isInFuture)) + !String.IsEqual(Window(Home).Property(GTO.Info.ChannelID),False) + System.HasAddon(service.kn.switchtimer)</visible>								                <onclick>RunScript(service.kn.switchtimer,action=add,channel=$INFO[Window(Home).Property(GTO.Info.Channel)],icon=$INFO[Window(Home).Property(GTO.Info.Logo)],date=$INFO[Window(Home).Property(GTO.Info.Date)],title=$INFO[Window(Home).Property(GTO.Info.Title)])</onclick>	   
				<onclick>Dialog.Close(all)</onclick>					
			</control>
			<control type="radiobutton" id ="21">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/launch.png" />
				</include>
				<visible>!IsEmpty(Window(Home).Property(GTO.Info.isRunning)) + !String.IsEqual(Window(Home).Property(GTO.Info.ChannelID),False) + System.HasAddon(service.kn.switchtimer)</visible>
                <onclick>RunScript(script.service.gto,action=switch_channel&amp;pvrid=$INFO[Window(Home).Property(GTO.Info.ChannelID)])</onclick>
                <onclick>Dialog.Close(all)</onclick>					
			</control>
            <control type="radiobutton" id ="22">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/timer.png" />
				</include>
				<visible>!String.IsEmpty(Window(Home).Property(GTO.Info.BroadcastID)) + !String.IsEqual(Window(Home).Property(GTO.Info.ChannelID),False) + String.IsEqual(Window(Home).Property(GTO.Info.hasTimer),False)</visible>
                <onclick>RunScript(script.service.gto,action=record&amp;broadcastid=$INFO[Window(Home).Property(GTO.Info.BroadcastID)]&amp;blob=$INFO[Window(Home).Property(GTO.Info.BlobID)])</onclick>
                <onclick>Dialog.Close(all)</onclick>					
			</control>
			<control type="radiobutton" id ="23">
				<include>buttondimensionssquare</include>
				<include content="buttontextures">
					<param name="icon" value="buttonsdialogs/enabled.png" />
				</include>
                <onclick>RunScript(script.service.gto,action=refresh)</onclick>	
                <onclick>Dialog.Close(all)</onclick>				
			</control>
		</control>		
	</include>

    <include name="OnFocusOnClick">
        <onclick>SetProperty(SetUserRating,mixed,home)</onclick>
        <onclick>SetProperty(SetUserRating2,mixed,home)</onclick>
        <onfocus>SetProperty(SetUserRating,mixed,home)</onfocus>
        <onfocus>SetProperty(SetUserRating2,mixed,home)</onfocus>
    </include>
    
    <include name="ClearOnFocusOnClick">
        <onunfocus>ClearProperty(SetUserRating,home)</onunfocus>
        <onunfocus>ClearProperty(SetUserRating2,home)</onunfocus>
    </include>
    
    <include name="DefDialogBackgroundRating">
        <include>Animation.ZoomIn</include>
        <centerleft>50%</centerleft>
        <centertop>50%</centertop>
        <height>310</height>
        <width>468</width>
        <control type="image">
            <width>100%</width>
            <height>100%</height>
            <texture border="16" colordiffuse="White100">common/rounded-shadow8.png</texture>
        </control>
    </include> 
    
    <include name="DialogSelectUserRating">
        <control id="3" type="list">
            <onleft>noop</onleft>
            <onright>noop</onright>
            <onup>noop</onup>
            <include>HiddenListControl</include>
            <include>ClearOnFocusOnClick</include>
        </control>
        <control id="21" type="button">
            <onleft condition="!String.IsEmpty(Container(3).ListItemNoWrap(-1).Label)">Control.Move(3,-1)</onleft>
            <onright condition="!String.IsEmpty(Container(3).ListItemNoWrap(1).Label)">Control.Move(3,1)</onright>
            <ondown condition="!String.IsEmpty(Container(3).ListItemNoWrap(-1).Label)">Control.Move(3,-1)</ondown>
            <onup condition="!String.IsEmpty(Container(3).ListItemNoWrap(1).Label)">Control.Move(3,1)</onup>
            <onclick>SetFocus(3)</onclick>
            <onclick>Select</onclick>
            <include>HiddenButton</include>
        </control>
        <control type="group">
            <centerleft>50%</centerleft>
            <centertop>50%</centertop>
            <control type="textbox">
                <top>110</top>
                <left>38</left>
                <right>30</right>
                <height>86</height>
                <font>Tiny</font>
                <align>left</align>
                <label>37741</label>
            </control>
            <control type="group">
                <control type="grouplist">
                    <centerleft>50%</centerleft>
                    <top>210</top>
                    <width>340</width>
                    <height>45</height>
                    <orientation>horizontal</orientation>
                    <align>center</align>
                    <itemgap>12</itemgap>
                    <usecontrolcoords>true</usecontrolcoords>		
                    <control type="image">	
                        <width>45</width>
                        <height>45</height>
                        <centertop>50%</centertop>
                        <texture colordiffuse="$VAR[ColorHighlight]">backg/$VAR[FlagstarSelect1].png</texture>		
                    </control>
                    <control type="image">			
                        <width>45</width>
                        <height>45</height>
                        <centertop>50%</centertop>
                        <texture colordiffuse="$VAR[ColorHighlight]">backg/$VAR[FlagstarSelect2].png</texture>			
                    </control>
                    <control type="image">				
                        <width>45</width>
                        <height>45</height>
                        <centertop>50%</centertop>
                        <texture colordiffuse="$VAR[ColorHighlight]">backg/$VAR[FlagstarSelect3].png</texture>		
                    </control>
                    <control type="image">			
                        <width>45</width>
                        <height>45</height>
                        <centertop>50%</centertop>
                        <texture colordiffuse="$VAR[ColorHighlight]">backg/$VAR[FlagstarSelect4].png</texture>				
                    </control>
                    <control type="image">			
                        <width>45</width>
                        <height>45</height>
                        <centertop>50%</centertop>
                        <texture colordiffuse="$VAR[ColorHighlight]">backg/$VAR[FlagstarSelect5].png</texture>		
                    </control>			
                </control>
                <control type="group">
                    <centerleft>50%</centerleft>
                    <top>225</top>
                    <width>330</width>
                    <height>45</height>                            
                    <align>center</align> 
                    <include>Animation.DelayFadeIn</include>                    	
                    <control type="image">                        
                        <width>16</width>
                        <height>16</height>
                        <left>0</left>
                        <texture colordiffuse="Black70" flipx="true">common/arrow-small-right.png</texture>                        
                    </control> 
                     <control type="image">   
                        <width>16</width>
                        <height>16</height>
                        <right>0</right>
                        <texture colordiffuse="Black70">common/arrow-small-right.png</texture>                        
                    </control>                                                            
                </control>                    
            </control>                    
        </control>
    </include>  
    
    <include name="DialogSelect">
        <control type="list" id="3">
            <left>8</left>
            <width>1064</width>
            <posy>120</posy>
            <height>696</height>
            <onleft>5</onleft>
            <onright>1723</onright>
            <pagecontrol>1723</pagecontrol>
            <onup>3</onup>
            <ondown>3</ondown>
            <itemlayout height="69" width="696">
                <control type="label">
                    <left>30</left>
                    <right>30</right>
                    <font>Small</font>
                    <textcolor>Black70</textcolor>
                    <height>66</height>
                    <aligny>center</aligny>
                    <info>ListItem.Label</info>
                </control>
                <!--<control type="label">
                    <left>30</left>
                    <right>30</right>
                    <textcolor>Black70</textcolor>
                    <align>right</align>
                    <height>66</height>
                    <aligny>center</aligny>
                    <info>ListItem.Label2</info>
                </control>-->
                <control type="image">
                    <right>30</right>
                    <centertop>50%</centertop>
                    <width>24</width>
                    <height>24</height>
                    <texture colordiffuse="$VAR[ColorHighlight]">osd/minicheck.png</texture>
                    <visible>ListItem.IsSelected</visible>
                </control>
            </itemlayout>

            <focusedlayout height="69" width="696">
                <control type="image">
                    <left>0</left>
                    <right>0</right>
                    <height>66</height>
                    <texture border="5" colordiffuse="$VAR[ColorHighlight]">common/white.png</texture>
                    <animation effect="fade" start="100" end="0" condition="!Control.HasFocus(3)">Conditional</animation>
                </control>
                <control type="image">                                
                    <width>100%</width>
                    <height>100%</height>
                    <texture border="8" colordiffuse="$VAR[ColorHighlightOtherBar]">common/gradient-box-wide-cut.png</texture>
                    <animation effect="fade" start="100" end="0" condition="!Control.HasFocus(3)">Conditional</animation>                   
                </control>  
                <control type="label">
                    <left>30</left>
                    <right>30</right>
                    <height>66</height>
                    <font>Small</font>
                    <aligny>center</aligny>
                    <textcolor>Selected</textcolor>
                    <selectedcolor>Selected</selectedcolor>
                    <info>ListItem.Label</info>
                    <visible>Control.HasFocus(3)</visible>
                </control>
                <control type="label">
                    <left>30</left>
                    <right>30</right>
                    <height>66</height>
                    <font>Small</font>
                    <aligny>center</aligny>
                    <textcolor>Black70</textcolor>
                    <selectedcolor>Black70</selectedcolor>
                    <info>ListItem.Label</info>
                    <visible>!Control.HasFocus(3)</visible>
                </control>
                <!--<control type="label">
                    <left>30</left>
                    <right>30</right>
                    <align>right</align>
                    <height>66</height>
                    <aligny>center</aligny>
                    <textcolor>Selected</textcolor>
                    <info>ListItem.Label2</info>
                </control>-->
                <control type="image">
                    <right>30</right>
                    <centertop>50%</centertop>
                    <width>24</width>
                    <height>24</height>
                    <texture colordiffuse="Selected">osd/minicheck.png</texture>
                    <visible>ListItem.IsSelected</visible>
                </control>
            </focusedlayout>
        </control>
    </include> 
    
    <include name="DialogCustomSettings">
        <control type="group">
            <visible allowhiddenfocus="true">ControlGroup(9400).HasFocus() + !Window.IsVisible(DialogBusy.xml)</visible>
            <include>Animation.FadeIn</include>
            <include>Animation.FadeOut</include>
            <control type="image">
                <include>Dimensions_Fullscreen</include>
                <texture border="2">common/black-back.png</texture>
            </control>	
            <control type="group">
                <centerleft>50%</centerleft>
			    <centertop>50%</centertop>
                <width>468</width>
                <include condition="Skin.HasSetting(wipinfo)">CustomSettingsTopWIP</include>
                <include condition="!Skin.HasSetting(wipinfo)">CustomSettingsTop</include>
                <control type="image">
                    <left>-8</left>
                    <top>-20</top>		
                    <right>10</right>
                    <bottom>-20</bottom>
                    <colordiffuse>White100</colordiffuse>
                    <texture border="16">common/rounded-shadow8.png</texture>
                </control>	
                <control type="group">
                    <left>18</left>
                    <top>0</top>
                    <control type="label">
                        <description>Header Label</description>
                        <left>70</left>
                        <width>1000</width>
                        <posy>0</posy>
                        <include>FontTop</include>
                        <textcolor>Dark2</textcolor>
                        <label>16106</label>
                    </control>                    
                    <include content="Kodi_Logo">
                        <param name="dimensions" value="40" />
                        <param name="top" value="15" />
                        <param name="left" value="15" />
                    </include>                   
                    <!-- Lines -->
                    <control type="image">
                        <top>70</top>
                        <left>17</left>
                        <width>385</width>
                        <height>1</height>
                        <bottom>10</bottom>
                        <colordiffuse>Black12</colordiffuse>
                        <texture>common/white.png</texture>
                    </control>
                </control>
                <control type="group">
                    <height>490</height>
                    <left>-48</left>
                    <top>-22</top>
                    <control type="image">
                        <description>arrow image</description>
                        <centerleft>50%</centerleft>
                        <posy>-16</posy>
                        <width>16</width>
                        <height>16</height>
                        <texture colordiffuse="White70" flipy="true">common/arrow-small.png</texture>
                    </control>
                    <control type="image">
                        <description>arrow image</description>
                        <centerleft>50%</centerleft>
                        <include condition="!Skin.HasSetting(wipinfo)">CustomSettingsTopArrowWIP</include>
                        <include condition="Skin.HasSetting(wipinfo)">CustomSettingsTopArrow</include>
                        <width>16</width>
                        <height>16</height>
                        <texture colordiffuse="White70" flipy="false">common/arrow-small.png</texture>
                    </control>
                </control>
                
                <control type="image">
                    <top>90</top>
                    <left></left>
                    <height>70</height>
                    <width>450</width>
                    <texture colordiffuse="$VAR[ColorSelectOtherBar]">common/white.png</texture>
                    <visible>ControlGroup(9400).HasFocus()</visible>
                    <animation effect="slide" end="0,70" time="0" condition="Integer.IsGreater(Container(9400).Position,0)">Conditional</animation>
                    <animation effect="slide" end="0,70" time="0" condition="Integer.IsGreater(Container(9400).Position,1)">Conditional</animation>
                    <animation effect="slide" end="0,70" time="0" condition="Integer.IsGreater(Container(9400).Position,2)">Conditional</animation>
                    <animation effect="slide" end="0,70" time="0" condition="Integer.IsGreater(Container(9400).Position,3)">Conditional</animation>
                </control>			
                <control type="grouplist" id="9400">
                    <top>90</top>
                    <onback>9000</onback>
                    <onleft>9000</onleft>
                    <onright>9000</onright>
                    <usecontrolcoords>true</usecontrolcoords>
                    <itemgap>0</itemgap>
                    <scrolltime>0</scrolltime>
                    <control type="button" id="92">         
                        <description>Filter</description>
                        <include>DefContextButtonGradient</include>
                        <label>184</label>
                        <align>left</align>
                        <onclick>SendClick(6)</onclick>
                        <visible>Skin.HasSetting(wipinfo)</visible>
                    </control>
                    <control type="button" id="93">         
                        <description>Filter</description>
                        <include>DefContextButtonGradient</include>
                        <label>37725</label>
                        <align>left</align>
                        <onclick>SendClick(10)</onclick>
                        <visible>Skin.HasSetting(wipinfo)</visible>
                    </control>
                    <control type="button" id="94">         
                        <description>Filter</description>
                        <include>DefContextButtonGradient</include>
                        <label>37726</label>
                        <align>left</align>
                        <onclick condition="String.IsEqual(ListItem.DBType,tvshow)">RunScript(script.artwork.beef, mode=gui, mediatype=tvshow, dbid=$INFO[ListItem.DBID])</onclick>
                        <onclick condition="String.IsEqual(ListItem.DBType,movie)">RunScript(script.artwork.beef, mode=gui, mediatype=movie, dbid=$INFO[ListItem.DBID])</onclick>
                        <onclick condition="String.IsEqual(ListItem.DBType,musicvideo)">RunScript(script.artwork.beef, mode=gui, mediatype=musicvideo, dbid=$INFO[ListItem.DBID])</onclick>
                        <onclick condition="String.IsEqual(ListItem.DBType,artist)">RunScript(script.artwork.beef, mode=gui, mediatype=artist, dbid=$INFO[ListItem.DBID])</onclick>
                        <onclick condition="String.IsEqual(ListItem.DBType,song)">RunScript(script.artwork.beef, mode=gui, mediatype=song, dbid=$INFO[ListItem.DBID])</onclick>    
                        <onclick condition="String.IsEqual(ListItem.DBType,set)">RunScript(script.artwork.beef, mode=gui, mediatype=set, dbid=$INFO[ListItem.DBID])</onclick>
                        <onclick condition="String.IsEqual(ListItem.DBType,episode)">RunScript(script.artwork.beef, mode=gui, mediatype=episode, dbid=$INFO[ListItem.DBID])</onclick>
                        <onclick condition="String.IsEqual(ListItem.DBType,album)">RunScript(script.artwork.beef, mode=gui, mediatype=album, dbid=$INFO[ListItem.DBID])</onclick>
                        <visible>system.hasaddon(script.artwork.beef)</visible>
                        <visible>Skin.HasSetting(wipinfo)</visible>
                    </control>
                    <control type="button" id="95">         
                        <description>Filter</description>
                        <include>DefContextButtonGradient</include>
                        <label>37724</label>
                        <align>left</align>
                        <onclick condition="String.IsEqual(ListItem.DBType,tvshow)">RunScript(script.artwork.beef, mode=auto, mediatype=tvshow, dbid=$INFO[ListItem.DBID])</onclick>
                        <onclick condition="String.IsEqual(ListItem.DBType,movie)">RunScript(script.artwork.beef, mode=auto, mediatype=movie, dbid=$INFO[ListItem.DBID])</onclick>
                        <onclick condition="String.IsEqual(ListItem.DBType,musicvideo)">RunScript(script.artwork.beef, mode=auto, mediatype=musicvideo, dbid=$INFO[ListItem.DBID])</onclick>
                        <onclick condition="String.IsEqual(ListItem.DBType,artist)">RunScript(script.artwork.beef, mode=auto, mediatype=artist, dbid=$INFO[ListItem.DBID])</onclick>
                        <onclick condition="String.IsEqual(ListItem.DBType,song)">RunScript(script.artwork.beef, mode=auto, mediatype=song, dbid=$INFO[ListItem.DBID])</onclick>    
                        <onclick condition="String.IsEqual(ListItem.DBType,set)">RunScript(script.artwork.beef, mode=auto, mediatype=set, dbid=$INFO[ListItem.DBID])</onclick>
                        <onclick condition="String.IsEqual(ListItem.DBType,episode)">RunScript(script.artwork.beef, mode=auto, mediatype=episode, dbid=$INFO[ListItem.DBID])</onclick>
                        <onclick condition="String.IsEqual(ListItem.DBType,album)">RunScript(script.artwork.beef, mode=auto, mediatype=album, dbid=$INFO[ListItem.DBID])</onclick>
                        <visible>system.hasaddon(script.artwork.beef)</visible>
                        <visible>Skin.HasSetting(wipinfo)</visible>
                    </control>
                    <control type="button" id="97" description="SELECT INFO">
                        <align>left</align>					
                        <include>DefContextButtonGradient</include>
                        <label>37746</label>
                        <label2>$VAR[InfoTypeLabel]</label2>
                        <onclick condition="!Skin.HasSetting(wipinfo)">Skin.ToggleSetting(wipinfo)</onclick>                    
                        <onclick condition="Skin.HasSetting(wipinfo)">Skin.Reset(wipinfo)</onclick> 
                        <onclick>ReloadSkin()</onclick>                   
                    </control>
                    <control type="radiobutton" id="98">         
                        <description>Filter</description>
                        <include>DefContextButtonGradient</include>
                        <label>37868</label>
                        <align>left</align>
                        <selected>Skin.HasSetting(OnlyLocalAlbums)</selected>
                        <onclick>Skin.ToggleSetting(OnlyLocalAlbums)</onclick>
                        <onclick>ReloadSkin()</onclick>
                        <visible>Skin.HasSetting(wipinfo) + String.IsEqual(ListItem.DBTYPE,artist) + Window.IsVisible(DialogMusicInfo.xml)</visible>
                    </control>
                    <control type="radiobutton" id="99">         
                        <description>Filter</description>
                        <include>DefContextButtonGradient</include>
                        <label>37705</label>
                        <align>left</align>
                        <selected>Skin.HasSetting(preloadcontent)</selected>
                        <onclick>Skin.ToggleSetting(preloadcontent)</onclick>
                        <visible>Skin.HasSetting(wipinfo)</visible>
                    </control>
                    <control type="radiobutton" id="100">         
                        <description>Filter</description>
                        <include>DefContextButtonGradient</include>
                        <label>37706</label>
                        <align>left</align>
                        <selected>Skin.HasSetting(dontclickonfocus)</selected>
                        <onclick>Skin.ToggleSetting(dontclickonfocus)</onclick>
                        <visible>Skin.HasSetting(wipinfo)</visible>
                    </control>
                </control>
            </control>
        </control>
    </include>
    
    <include name="CustomSettingsTop">
        <top>459</top>
    </include>
    <include name="CustomSettingsTopWIP">
        <top>319</top>
        <height>440</height>
    </include>
    <include name="CustomSettingsTopArrow">
        <posy>485</posy>
    </include>
    <include name="CustomSettingsTopArrowWIP">
        <posy>203</posy>
    </include>
    
    <include name="DialogSelectlabelInclude">
        <control type="label">
            <right>40</right>
            <font>Tiny</font>
            <height>50</height>
            <bottom>30</bottom>
            <align>right</align>
            <textcolor>Black70</textcolor>
            <label>$VAR[DialogSelectlabel]</label>
        </control>
    </include>
    
    <variable name="nofocus-shadow10">
        <value condition="Skin.HasSetting(global.moreshadows)">nofocus-shadow37.png</value>
        <value>nofocus-shadow36.png</value>
    </variable>
    <variable name="shadow-24">
        <value condition="Skin.HasSetting(global.moreshadows)">shadow-25.png</value>
        <value>shadow-24.png</value>
    </variable>
    <variable name="background_side">
        <value condition="Skin.HasSetting(global.moreshadows)">background_side1.png</value>
        <value>background_side.png</value>
    </variable>
    <variable name="background_top">
        <value condition="Skin.HasSetting(global.moreshadows)">background_top1.png</value>
        <value>background_top.png</value>
    </variable>
    <variable name="ColorTheme">
        <value condition="String.IsEqual(Skin.CurrentColourTheme,Light)">light/</value>
        <value></value>
    </variable>
    
    <variable name="ColorBorder">
        <value condition="Skin.HasSetting(osd.usethemeNewOSD)">$VAR[OSDPanelWhite30]</value>
        <value>BoxNotification</value>
    </variable>
    
    <variable name="MoreOfArtistContent">
        <value condition="!String.IsEmpty(ListItem.Artist) + !String.IsEqual(ListItem.Artist,) + !String.IsEqual(ListItem.Artist, )">musicdb://songs/?xsp=%7B%22order%22%3A%7B%22ignorefolders%22%3A0%2C%22method%22%3A%22songs%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22artist%22%2C%22operator%22%3A%22contains%22%2C%22value%22%3A%5B%22$INFO[ListItem.Artist]%22%5D%7D%5D%7D%2C%22type%22%3A%22songs%22%7D</value>
    </variable>
    
    <variable name="StorageIconLabel">
        <value condition="ListItem.IsPlaying">&#62811;</value>
        <value>&#xf4ea;</value>
    </variable>
    
    <include name="WidgetSelector">
        <control type="button" id="9101" description="Alt chooser">
            <width>100%</width>
            <height>66</height>
            <label>$LOCALIZE[37888]$VAR[LabelWidget1]</label>
            <label2>$VAR[LabelWidgetShortcutsName]</label2>
            <texturenofocus colordiffuse="Black12" border="5">common/box.png</texturenofocus>
            <align>left</align>
            <include>DefDialogButtonsGradient</include>
            <onclick>SetProperty(skinshortcuts-Widget,1,Home)</onclick>
            <onclick>SetFocus(9451)</onclick> 
            <visible>String.IsEqual(Window.Property(groupname),mainmenu)</visible>            
            <visible>String.IsEmpty(Window(Home).Property(skinshortcuts-Widget))</visible>                  
        </control>
        <control type="button" id="9102" description="Custom">
            <width>100%</width>
            <height>66</height>
            <label>$LOCALIZE[37889]$VAR[LabelWidget2]</label>
            <label2>$VAR[LabelWidgetShortcutsName2]</label2>
            <texturenofocus colordiffuse="Black12" border="5">common/box.png</texturenofocus>
            <align>left</align>
            <include>DefDialogButtonsGradient</include>
            <onclick>SetProperty(skinshortcuts-Widget,2,Home)</onclick>
            <onclick>SetFocus(4197)</onclick>
            <animation effect="fade" start="100" end="50" time="0" condition="!String.Contains(Container(211).ListItem.Property(widgetEnable.2),yes)">Conditional</animation>
            <visible>String.IsEmpty(Window(Home).Property(skinshortcuts-Widget))</visible>
            <visible>String.IsEqual(Window.Property(groupname),mainmenu)</visible>
            <visible>[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [Skin.HasSetting(home.modernwidgets)  + Skin.HasSetting(home.vertical.widgets)]</visible> 
        </control>
        <control type="button" id="9103" description="Custom">
            <width>100%</width>
            <height>66</height>
            <label>$LOCALIZE[37890]$VAR[LabelWidget3]</label>
            <label2>$VAR[LabelWidgetShortcutsName3]</label2>
            <texturenofocus colordiffuse="Black12" border="5">common/box.png</texturenofocus>
            <align>left</align>
            <include>DefDialogButtonsGradient</include>
            <onclick>SetProperty(skinshortcuts-Widget,3,Home)</onclick>
            <onclick>SetFocus(4198)</onclick>
            <animation effect="fade" start="100" end="50" time="0" condition="!String.Contains(Container(211).ListItem.Property(widgetEnable.3),yes)">Conditional</animation>
            <visible>String.IsEmpty(Window(Home).Property(skinshortcuts-Widget))</visible>
            <visible>String.IsEqual(Window.Property(groupname),mainmenu)</visible> 
            <visible>[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [Skin.HasSetting(home.modernwidgets)  + Skin.HasSetting(home.vertical.widgets)]</visible>
        </control>
        <control type="button" id="9104" description="Custom">
            <width>100%</width>
            <height>66</height>
            <label>$LOCALIZE[37891]$VAR[LabelWidget4]</label>
            <label2>$VAR[LabelWidgetShortcutsName4]</label2>
            <texturenofocus colordiffuse="Black12" border="5">common/box.png</texturenofocus>
            <align>left</align>
            <include>DefDialogButtonsGradient</include>
            <onclick>SetProperty(skinshortcuts-Widget,4,Home)</onclick>
            <onclick>SetFocus(4199)</onclick>
            <animation effect="fade" start="100" end="50" time="0" condition="!String.Contains(Container(211).ListItem.Property(widgetEnable.4),yes)">Conditional</animation>
            <visible>String.IsEmpty(Window(Home).Property(skinshortcuts-Widget))</visible> 
            <visible>String.IsEqual(Window.Property(groupname),mainmenu)</visible>
            <visible>[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [Skin.HasSetting(home.modernwidgets)  + Skin.HasSetting(home.vertical.widgets)]</visible>
        </control>
        <control type="button" id="9105" description="Custom">
            <width>100%</width>
            <height>66</height>
            <label>$LOCALIZE[37892]$VAR[LabelWidget5]</label>
            <label2>$VAR[LabelWidgetShortcutsName5]</label2>
            <texturenofocus colordiffuse="Black12" border="5">common/box.png</texturenofocus>
            <align>left</align>
            <include>DefDialogButtonsGradient</include>
            <onclick>SetProperty(skinshortcuts-Widget,5,Home)</onclick>
            <onclick>SetFocus(4590)</onclick>
            <animation effect="fade" start="100" end="50" time="0" condition="!String.Contains(Container(211).ListItem.Property(widgetEnable.5),yes)">Conditional</animation>
            <visible>String.IsEmpty(Window(Home).Property(skinshortcuts-Widget))</visible> 
            <visible>String.IsEqual(Window.Property(groupname),mainmenu)</visible>
            <visible>[Skin.HasSetting(home.vertical) + Skin.HasSetting(home.vertical.widgets)] | [Skin.HasSetting(home.modernwidgets)  + Skin.HasSetting(home.vertical.widgets)]</visible>
        </control>
    </include>
    
    <include name="fadevertical">
        <animation effect="fade" start="100" end="50" time="400" condition="Control.HasFocus(300) | Control.HasFocus(302)">Conditional</animation>
    </include>
    
    <include name="fadehorizontal">
        <animation effect="fade" start="100" end="70" time="400" condition="Control.HasFocus(300) | Control.HasFocus(302)">Conditional</animation>
    </include>
    
    <include name="ContainerFadeIn">
        <!--<animation effect="fade" start="30" end="100" time="250" delay="0" condition="!Control($PARAM[id]).IsUpdating">Conditional</animation>-->
    </include>
    
    <include name="defaultcontroltrue">
        <defaultcontrol always="true">300</defaultcontrol> 
    </include>
    
    <include name="defaultcontrolfalse">
        <defaultcontrol always="false">300</defaultcontrol> 
    </include>
    
    <include name="JumpbarHelper">
        <control type="button" id="390000">
            <visible allowhiddenfocus="true">Control.HasFocus(390000)</visible>
            <description>Jumpbar Helper</description>
            <left>-1000</left>
            <include>DefContextButton</include>
            <align>left</align>
            <label></label>
            <onfocus>SetFocus(290001)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,A)">SetFocus(290001,1)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,B)">SetFocus(290001,2)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,C)">SetFocus(290001,3)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,D)">SetFocus(290001,4)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,E)">SetFocus(290001,5)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,F)">SetFocus(290001,6)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,G)">SetFocus(290001,7)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,H)">SetFocus(290001,8)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,I)">SetFocus(290001,9)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,J)">SetFocus(290001,10)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,K)">SetFocus(290001,11)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,L)">SetFocus(290001,12)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,M)">SetFocus(290001,13)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,N)">SetFocus(290001,14)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,O)">SetFocus(290001,15)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,P)">SetFocus(290001,16)</onfocus>            
            <onfocus condition="String.IsEqual(ListItem.SortLetter,Q)">SetFocus(290001,17)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,R)">SetFocus(290001,18)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,S)">SetFocus(290001,19)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,T)">SetFocus(290001,20)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,U)">SetFocus(290001,21)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,V)">SetFocus(290001,22)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,W)">SetFocus(290001,23)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,X)">SetFocus(290001,24)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,Y)">SetFocus(290001,25)</onfocus>
            <onfocus condition="String.IsEqual(ListItem.SortLetter,Z)">SetFocus(290001,26)</onfocus>
        </control>
    </include>
    
    <include name="ProgressBar">
        <control type="progress" description="cache">
            <description>Progress Bar</description>
            <width>100%</width>
            <bottom>10</bottom>
            <height>8</height>
            <info>Player.ProgressCache</info>
            <visible>true</visible>
            <texturebg colordiffuse="00ffffff">osd/progress-bg.png</texturebg>
            <lefttexture colordiffuse="Highlight2">osd/progress-end.png</lefttexture>
            <midtexture colordiffuse="Highlight2">osd/progress-end.png</midtexture>
            <righttexture colordiffuse="Highlight2">osd/progress-end.png</righttexture>
        </control>
        <control type="progress" id="23">
            <description>Progress Bar</description>
            <width>100%</width>
            <bottom>10</bottom>
            <height>8</height>
            <info>Player.Progress</info>
            <visible>!Player.Seeking</visible>
        </control>
        <control type="progress" id="401">
            <description>Progress Bar</description>
            <width>100%</width>
            <bottom>10</bottom>
            <height>8</height>
            <visible>Player.Seeking</visible>
        </control>
    </include>
    
    <!-- Code from https://github.com/jurialmunkey/skin.arctic.zephyr.2/ -->
    <variable name="Weather_Sunrise">
        <value condition="!String.IsEmpty(Window(Weather).Property(Current.Sunrise))">$INFO[Window(Weather).Property(Current.Sunrise),$LOCALIZE[37876] ,]</value>
        <value condition="!String.IsEmpty(Window(Weather).Property(Today.Sunrise))">$INFO[Window(Weather).Property(Today.Sunrise),$LOCALIZE[37876] ,]</value>
    </variable>

    <variable name="Weather_Sunset">
        <value condition="!String.IsEmpty(Window(Weather).Property(Current.Sunset))">$INFO[Window(Weather).Property(Current.Sunset),$LOCALIZE[37877] ,]</value>
        <value condition="!String.IsEmpty(Window(Weather).Property(Today.Sunset))">$INFO[Window(Weather).Property(Today.Sunset),$LOCALIZE[37877] ,]</value>
    </variable>

    <variable name="Weather_LowTemp">
        <value condition="!String.IsEmpty(Window(Weather).Property(Current.LowTemp))">$INFO[Window(Weather).Property(Current.LowTemp),,°]</value>
        <value condition="!String.IsEmpty(Window(Weather).Property(Day0.LowTemp))">$INFO[Window(Weather).Property(Day0.LowTemp),,°]</value>
    </variable>
    <variable name="Weather_HighTemp">
        <value condition="!String.IsEmpty(Window(Weather).Property(Current.HighTemp))">$INFO[Window(Weather).Property(Current.HighTemp),,°]</value>
        <value condition="!String.IsEmpty(Window(Weather).Property(Day0.HighTemp))">$INFO[Window(Weather).Property(Day0.HighTemp),,°]</value>
    </variable>

    <variable name="Weather_UVIndex_Label">
        <value condition="!String.IsEmpty(Window(Weather).Property(Current.UVIndex))">$LOCALIZE[403]</value>
        <value condition="!String.IsEmpty(Window(Weather).Property(Current.Precipitation))">$INFO[Window(Weather).Property(Current.Precipitation),$LOCALIZE[1448] ,]</value>
    </variable>

    <variable name="Weather_UVIndex_Info">
        <value condition="!String.IsEmpty(Window(Weather).Property(Current.UVIndex))">$INFO[Window(Weather).Property(Current.UVIndex)]</value>
        <value condition="!String.IsEmpty(Window(Weather).Property(Current.Cloudiness))">$INFO[Window(Weather).Property(Current.Cloudiness),$LOCALIZE[31068] ,]</value>
    </variable>
    
    <variable name="SetSkinHelperWidgetContainer">
        <value condition="Control.IsVisible(30111)">AlarmClock(PreloadTimeout,SetProperty(SkinHelper.WidgetContainer,30111),00:01,silent)</value>
        <value condition="Control.IsVisible(30121)">AlarmClock(PreloadTimeout,SetProperty(SkinHelper.WidgetContainer,30121),00:01,silent)</value>
        <value condition="Control.IsVisible(30131)">AlarmClock(PreloadTimeout,SetProperty(SkinHelper.WidgetContainer,30131),00:01,silent)</value>
        <value condition="Control.IsVisible(30141)">AlarmClock(PreloadTimeout,SetProperty(SkinHelper.WidgetContainer,30141),00:01,silent)</value>
        <value condition="Control.IsVisible(30151)">AlarmClock(PreloadTimeout,SetProperty(SkinHelper.WidgetContainer,30151),00:01,silent)</value>
        <value condition="Control.IsVisible(30161)">AlarmClock(PreloadTimeout,SetProperty(SkinHelper.WidgetContainer,30161),00:01,silent)</value>
        <value condition="Control.IsVisible(30171)">AlarmClock(PreloadTimeout,SetProperty(SkinHelper.WidgetContainer,30171),00:01,silent)</value>
        <value condition="Control.IsVisible(30181)">AlarmClock(PreloadTimeout,SetProperty(SkinHelper.WidgetContainer,30181),00:01,silent)</value>
        <value condition="Control.IsVisible(30191)">AlarmClock(PreloadTimeout,SetProperty(SkinHelper.WidgetContainer,30191),00:01,silent)</value>
    </variable>
</includes>

